var ay = Object.defineProperty;
var ny = (e, t, a) => t in e ? ay(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a;
var Ee = (e, t, a) => ny(e, typeof t != "symbol" ? t + "" : t, a);
import { reactive as jn, watchEffect as At, toRef as q, Fragment as ve, shallowRef as me, capitalize as gi, camelize as Is, isVNode as ry, Comment as iy, unref as H, warn as Os, getCurrentInstance as Es, computed as C, inject as Fe, provide as St, ref as ee, defineComponent as _t, h as De, watch as fe, onScopeDispose as It, effectScope as Ro, toRaw as Qe, createVNode as w, normalizeStyle as ye, normalizeClass as te, toValue as Tt, mergeProps as ne, createElementVNode as T, onBeforeUnmount as Aa, readonly as No, toRefs as dm, isRef as Ll, useId as pa, onMounted as ha, onUpdated as sy, Text as ly, Transition as Mn, resolveDynamicComponent as zo, nextTick as qe, withDirectives as nt, toDisplayString as Xe, TransitionGroup as Lo, Teleport as oy, vShow as rn, onDeactivated as uy, createElementBlock as Ne, openBlock as ie, withCtx as re, createCommentVNode as Te, onRenderTriggered as cy, createBlock as pe, getCurrentScope as dy, useSlots as fy, createTextVNode as He, renderList as $t, markRaw as my, onBeforeMount as bi, cloneVNode as vy, vModelText as py, mergeModels as Gc, useModel as Yc, renderSlot as Xc, normalizeProps as en, guardReactiveProps as tn, onUnmounted as hy, createSlots as Bo, withModifiers as yy, withKeys as gy } from "vue";
function xr(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var by = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "additionalProperties":
          n = "must NOT have additional properties";
          break;
        case "anyOf":
          n = 'must match a schema in "anyOf"';
          break;
        case "const":
          n = "must be equal to constant";
          break;
        case "contains":
          n = "must contain a valid item";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "must have propert", r == 1 ? n += "y" : n += "ies", n += " " + i.params.deps + " when property " + i.params.property + " is present";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'must pass "' + i.keyword + '" keyword validation';
          }
          break;
        case "enum":
          n = "must be equal to one of the allowed values";
          break;
        case "false schema":
          n = "boolean schema is false";
          break;
        case "format":
          n = 'must match format "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "must be " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "must be " + a;
          break;
        case "if":
          n = 'must match "' + i.params.failingKeyword + '" schema';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "must be " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "must NOT be longer than " + r + " character", r != 1 && (n += "s");
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "must NOT have more than " + r + " propert", r == 1 ? n += "y" : n += "ies";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "must be " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "must NOT have less than " + r + " item", r != 1 && (n += "s");
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "must NOT be shorter than " + r + " character", r != 1 && (n += "s");
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "must NOT have less than " + r + " propert", r == 1 ? n += "y" : n += "ies";
          break;
        case "multipleOf":
          n = "must be a multiple of " + i.params.multipleOf;
          break;
        case "not":
          n = 'must NOT be valid according to schema in "not"';
          break;
        case "oneOf":
          n = 'must match exactly one schema in "oneOf"';
          break;
        case "pattern":
          n = 'must match pattern "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'must have property matching pattern "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "property name is invalid";
          break;
        case "required":
          n = "must have required property " + i.params.missingProperty;
          break;
        case "type":
          n = "must be " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "must NOT have duplicate items (items ## " + i.params.j + " and " + i.params.i + " are identical)";
          break;
        default:
          n = 'must pass "' + i.keyword + '" keyword validation';
      }
      i.message = n;
    }
}, ky = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += " يجب أن لا يحوي أكثر من " + r + " عنصر";
          break;
        case "additionalProperties":
          n = "يجب أن لا يحوي خصائص إضافية";
          break;
        case "anyOf":
          n = 'يجب أن يوافق أحد المخططات الموجودة في "anyOf"';
          break;
        case "const":
          n = "يجب أن يكون ثابتاً";
          break;
        case "contains":
          n = "يجب أن يحوي عنصرا صحيح";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += " يجب أن يحوي الخصائص " + i.params.deps + " عندما تكون الخاصية " + i.params.property + " موجودة";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'يجب أن تمرر كلمة التحقق المفتاحية "' + i.keyword + '"';
          }
          break;
        case "enum":
          n = "قيمة هذا الحقل يجب أن تكون مساوية لأحد القيم المعرفة مسبقاً";
          break;
        case "false schema":
          n = "المخطط المنطقي غير صحيح";
          break;
        case "format":
          n = 'يجب أن يوافق الصيغة "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += " يجب أن يكون " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += " يجب أن يكون " + a;
          break;
        case "if":
          n = 'يجب أن توافق المخطط "' + i.params.failingKeyword + '"';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += " يجب أن يكون " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += " يجب أن لا يحوي أكثر من " + r + " عنصر";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += " يجب أن لا يحوي أكثر من " + r + " محرف";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += " يجب أن لا يحوي أكثر من " + r + " خصائص";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += " يجب أن يكون " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += " يجب أن لا يحوي أقل من " + r + " عنصر";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += " يجب أن لا يحوي أقل من " + r + " محرف";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += " يجب أن لا يحوي أقل من " + r + " خصائص";
          break;
        case "multipleOf":
          n = " يجب أن يحوي أكثر من " + i.params.multipleOf;
          break;
        case "not":
          n = 'يجب أن يكون غير صحيح وفقاً للمخطط "not"';
          break;
        case "oneOf":
          n = 'يجب أن يوافق مخطط واحد فقط موجود في "oneOf"';
          break;
        case "pattern":
          n = 'يجب أن يوافق النمط "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'يجب أن يحوي خاصية توافق النمط "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "اسم الخاصية غير صالح";
          break;
        case "required":
          n = "هذا الحقل إلزامي";
          break;
        case "type":
          n = "قيمة هذا الحقل غير صالحة";
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "يجب أن لا يحوي عناصر مكررة (العنصر ## " + i.params.j + " و " + i.params.i + " متطابقة)";
          break;
        default:
          n = 'يجب أن تمرر كلمة التحقق المفتاحية "' + i.keyword + '"';
      }
      i.message = n;
    }
}, wy = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "no ha de tenir més de " + r + " element", r != 1 && (n += "s");
          break;
        case "additionalProperties":
          n = "no ha de tenir propietats addicionals";
          break;
        case "anyOf":
          n = 'ha de coincidir amb algun esquema definit a "anyOf"';
          break;
        case "const":
          n = "ha de ser igual a la constant";
          break;
        case "contains":
          n = "ha de contenir un ítem vàlid";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "ha de contenir la propietat", r != 1 && (n += "s"), n += " " + i.params.deps + " quan la propietat " + i.params.property + " és present";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'ha de passar la validació de la clau "' + i.keyword + '"';
          }
          break;
        case "enum":
          n = "ha de ser igual a un dels valors predefinits";
          break;
        case "false schema":
          n = "l’esquema és fals";
          break;
        case "format":
          n = 'ha de coincidir amb el format "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "ha de ser " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "ha de ser " + a;
          break;
        case "if":
          n = 'ha de correspondre’s amb l’esquema "' + i.params.failingKeyword + '"';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "ha de ser " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "no ha de tenir més de " + r + " ítem", r != 1 && (n += "s");
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "no pot contenir més de " + r + " caràcter", r != 1 && (n += "s");
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "no pot contenir més de " + r + " propietat", r != 1 && (n += "s");
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "ha de ser " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "no ha de tenir menys de " + r + " ítem", r != 1 && (n += "s");
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "no pot contenir menys de " + r + " caràcter", r != 1 && (n += "s");
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "no pot contenir menys de " + r + " propietat", r != 1 && (n += "s");
          break;
        case "multipleOf":
          n = "ha de ser múltiple de " + i.params.multipleOf;
          break;
        case "not":
          n = 'no ha de ser vàlid d’acord amb l’esquema definit a "not"';
          break;
        case "oneOf":
          n = 'ha de coincidir només amb un esquema definit a "oneOf"';
          break;
        case "pattern":
          n = 'ha de coincidir amb el patró "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'la propietat ha de coincidir amb el patró "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "la propietat no és vàlida";
          break;
        case "required":
          n = "ha de tenir la propietat requerida " + i.params.missingProperty;
          break;
        case "type":
          n = "ha de ser del tipus " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "no ha de tenir ítems duplicats (els ítems ## " + i.params.j + " i " + i.params.i + " són idèntics)";
          break;
        default:
          n = 'ha de passar la validació de la clau "' + i.keyword + '"';
      }
      i.message = n;
    }
}, $y = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "nemůže mít víc, než " + r + " prv", r >= 2 && r <= 4 ? n += "ky" : r != 1 ? n += "ek" : n += "ků";
          break;
        case "additionalProperties":
          n = "nemůže mít další položky";
          break;
        case "anyOf":
          n = 'musí vyhovět alespoň jednomu schématu v "anyOf"';
          break;
        case "const":
          n = "musí být roven konstantě";
          break;
        case "contains":
          n = "musí obsahovat prvek odpovídající schématu";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "musí mít polož", r >= 2 && r <= 4 ? n += "ky" : r != 1 ? n += "ek" : n += "ka", n += ": " + i.params.deps + ", pokud obsahuje " + i.params.property;
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'musí vyhovět "' + i.keyword + '" validaci';
          }
          break;
        case "enum":
          n = "musí být rovno jedné hodnotě z výčtu";
          break;
        case "false schema":
          n = "schéma je false";
          break;
        case "format":
          n = 'musí být ve formátu "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "musí být " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "musí být " + a;
          break;
        case "if":
          n = 'musí vyhovět "' + i.params.failingKeyword + '" schématu';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "musí být " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "nesmí obsahovat víc než " + r + " prv", r >= 2 && r <= 4 ? n += "ky" : r != 1 ? n += "ek" : n += "ků";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "nesmí být delší než " + r + " zna", r >= 2 && r <= 4 ? n += "ky" : r != 1 ? n += "k" : n += "ků";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "nesmí mít víc než " + r + " polož", r >= 2 && r <= 4 ? n += "ky" : r != 1 ? n += "ek" : n += "ka";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "musí být " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "nesmí obsahovat méně než " + r + " prv", r >= 2 && r <= 4 ? n += "ky" : r != 1 ? n += "ek" : n += "ků";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "nesmí být kratší než " + r + " zna", r >= 2 && r <= 4 ? n += "ky" : r != 1 ? n += "k" : n += "ků";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "nesmí mít méně než " + r + " polož", r >= 2 && r <= 4 ? n += "ky" : r != 1 ? n += "ek" : n += "ka";
          break;
        case "multipleOf":
          n = "musí být násobkem " + i.params.multipleOf;
          break;
        case "not":
          n = 'nesmí vyhovět schématu v "not"';
          break;
        case "oneOf":
          n = 'musí vyhovět právě jednomu schématu v "oneOf"';
          break;
        case "pattern":
          n = 'musí vyhovět regulárnímu výrazu "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'musí obsahovat položku vyhovující regulárnímu výrazu "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "název položky není platný";
          break;
        case "required":
          n = "musí obsahovat požadovanou položku " + i.params.missingProperty;
          break;
        case "type":
          n = "musí být " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "nesmí obsahovat duplicitní prvky (prvky ## " + i.params.j + " a " + i.params.i + " jsou identické)";
          break;
        default:
          n = 'musí vyhovět "' + i.keyword + '" validaci';
      }
      i.message = n;
    }
}, Sy = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "darf nicht mehr als " + r + " Element", r != 1 && (n += "e"), n += " enthalten";
          break;
        case "additionalProperties":
          n = "darf keine zusätzlichen Attribute haben";
          break;
        case "anyOf":
          n = 'muss einem der Schemata in "anyOf" entsprechen';
          break;
        case "const":
          n = "muss gleich der Konstanten sein";
          break;
        case "contains":
          n = "muss ein valides Element enthalten";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "muss Attribut", r != 1 && (n += "e"), n += " " + i.params.deps + " aufweisen, wenn Attribut " + i.params.property + " gesetzt ist";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'der Tag "' + i.params.tag + '" muss eine Zeichenkette sein';
              break;
            case "mapping":
              n = 'der Wert vom Tag "' + i.params.tag + '" muss im oneOf enthalten sein';
              break;
            default:
              n = 'muss die Validierung "' + i.keyword + '" bestehen';
          }
          break;
        case "enum":
          n = "muss einem der vorgegebenen Werte entsprechen";
          break;
        case "false schema":
          n = "boolesches Schema ist falsch";
          break;
        case "format":
          n = 'muss diesem Format entsprechen: "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "muss " + a + " sein";
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "muss " + a + " sein";
          break;
        case "if":
          n = 'muss dem Schema "' + i.params.failingKeyword + '" entsprechen';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "muss " + a + " sein";
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "darf nicht mehr als " + r + " Element", r != 1 && (n += "e"), n += " haben";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "darf nicht länger als " + r + " Zeichen sein";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "darf nicht mehr als " + r + " Attribut", r != 1 && (n += "e"), n += " haben";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "muss " + a + " sein";
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "darf nicht weniger als " + r + " Element", r != 1 && (n += "e"), n += " haben";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "darf nicht kürzer als " + r + " Zeichen sein";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "darf nicht weniger als " + r + " Attribut", r != 1 && (n += "e"), n += " haben";
          break;
        case "multipleOf":
          n = "muss ein Vielfaches von " + i.params.multipleOf + " sein";
          break;
        case "not":
          n = 'muss dem in "not" angegebenen Schema widersprechen';
          break;
        case "oneOf":
          n = 'muss genau einem der Schemata in "oneOf" entsprechen';
          break;
        case "pattern":
          n = 'muss diesem Muster entsprechen: "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'muss ein Attribut nach folgendem Muster haben "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "Attributname ist ungültig";
          break;
        case "required":
          n = "muss das erforderliche Attribut " + i.params.missingProperty + " enthalten";
          break;
        case "type":
          n = "muss sein: " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "darf nicht mehr als " + r + " Element", r != 1 && (n += "e"), n += " haben";
          break;
        case "unevaluatedProperties":
          n = "darf keine unausgewerteten Attribute haben";
          break;
        case "uniqueItems":
          n = "darf keine Duplikate enthalten (Elemente #" + i.params.j + " und #" + i.params.i + " sind gleich)";
          break;
        default:
          n = 'muss die Validierung "' + i.keyword + '" bestehen';
      }
      i.message = n;
    }
}, _y = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "no debe tener más de " + r + " elemento", r != 1 && (n += "s");
          break;
        case "additionalProperties":
          n = "no debe tener propiedades adicionales";
          break;
        case "anyOf":
          n = 'debe coincidir con algún esquema en "anyOf"';
          break;
        case "const":
          n = "debe ser igual a la constante";
          break;
        case "contains":
          n = "debe contener un elemento válido";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "debe contener la", r != 1 && (n += "s"), n += " propiedad", r != 1 && (n += "es"), n += " " + i.params.deps + " cuando la propiedad " + i.params.property + " se encuentra presente";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'debe pasar la validación de palabra clave "' + i.keyword + '"';
          }
          break;
        case "enum":
          n = "deber ser igual a uno de los valores predefinidos";
          break;
        case "false schema":
          n = "el esquema és falso";
          break;
        case "format":
          n = 'debe coincidir con el formato "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "debe ser " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "debe ser " + a;
          break;
        case "if":
          n = 'debe corresponderse con el esquema "' + i.params.failingKeyword + '"';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "debe ser " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "no debe contener más de " + r + " elemento", r != 1 && (n += "s");
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "no debe contener más de " + r + " caracter", r != 1 && (n += "es");
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "no debe contener más de " + r + " propiedad", r != 1 && (n += "es");
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "debe ser " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "no debe contener menos de " + r + " elemento", r != 1 && (n += "s");
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "no debe contener menos de " + r + " caracter", r != 1 && (n += "es");
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "no debe contener menos de " + r + " propiedad", r != 1 && (n += "es");
          break;
        case "multipleOf":
          n = "debe ser múltiplo de " + i.params.multipleOf;
          break;
        case "not":
          n = 'no debe ser válido según el esquema en "not"';
          break;
        case "oneOf":
          n = 'debe coincidir con un solo esquema en "oneOf"';
          break;
        case "pattern":
          n = 'debe coincidir con el patron "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'la propiedad debe coincidir con el patrón "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "la propiedad no és válida";
          break;
        case "required":
          n = "debe tener la propiedad requerida " + i.params.missingProperty;
          break;
        case "type":
          n = "debe ser " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "no debe contener elementos duplicados, (los elementos ## " + i.params.j + " y " + i.params.i + " son idénticos)";
          break;
        default:
          n = 'debe pasar la validación de palabra clave "' + i.keyword + '"';
      }
      i.message = n;
    }
}, Py = function(t) {
  if (t && t.length)
    for (const n of t) {
      let s;
      switch (n.keyword) {
        case "additionalItems":
        case "items":
          s = "";
          var i = n.params.limit;
          s += "saa sisältää enintään " + i, i == 1 ? s += ":n elementin" : s += " elementtiä";
          break;
        case "additionalProperties":
          s = "ei saa sisältää ylimääräisiä ominaisuuksia";
          break;
        case "anyOf":
          s = 'täytyy vastata "anyOf" skeemaa';
          break;
        case "const":
          s = "täytyy olla yhtä kuin vakio";
          break;
        case "contains":
          s = "täytyy sisältää kelvollinen elementti";
          break;
        case "dependencies":
        case "dependentRequired":
          s = "";
          var i = n.params.depsCount;
          s += "täytyy sisältää " + n.params.deps + " ominaisuu", i == 1 ? s += "s" : s += "det", s += " kun " + n.params.property + "-ominaisuus on läsnä";
          break;
        case "discriminator":
          switch (n.params.error) {
            case "tag":
              s = 'tunniste "' + n.params.tag + '" täytyy olla merkkijono';
              break;
            case "mapping":
              s = 'tunnisteen "' + n.params.tag + '" arvon muoto pitää olla oneOf';
              break;
            default:
              s = 'täytyy läpäistä "' + n.keyword + '" avainsanatarkistus';
          }
          break;
        case "enum":
          s = "täytyy olla yhtä kuin jokin sallituista arvoista";
          break;
        case "false schema":
          s = "boolean skeema on väärä";
          break;
        case "format":
          s = 'täytyy vastata muotoa "' + n.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "täytyy olla " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "täytyy olla " + a;
          break;
        case "if":
          s = 'täytyy vastata "' + n.params.failingKeyword + '" skeemaa';
          break;
        case "maximum":
        case "exclusiveMaximum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "täytyy olla " + a;
          break;
        case "maxItems":
          s = "";
          var i = n.params.limit;
          s += "tulee sisältää enintään " + i + " ", i == 1 ? s += "elementti" : s += "elementtiä";
          break;
        case "maxLength":
          s = "";
          var i = n.params.limit;
          s += "ei saa olla pidempi kuin " + i + " merkki", i != 1 && (s += "ä");
          break;
        case "maxProperties":
          s = "";
          var i = n.params.limit;
          s += "tulee sisältää enintään " + i + " ", i == 1 ? s += "ominaisuus" : s += "ominaisuutta";
          break;
        case "minimum":
        case "exclusiveMinimum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "täytyy olla " + a;
          break;
        case "minItems":
          s = "";
          var i = n.params.limit;
          s += "tulee sisältää vähintään " + i + " ", i == 1 ? s += "elementti" : s += "elementtiä";
          break;
        case "minLength":
          s = "";
          var i = n.params.limit;
          s += "ei saa olla lyhyempi kuin " + i + " merkki", i != 1 && (s += "ä");
          break;
        case "minProperties":
          s = "";
          var i = n.params.limit;
          s += "tulee sisältää vähintään " + i + " ", i == 1 ? s += "ominaisuus" : s += "ominaisuutta";
          break;
        case "multipleOf":
          s = "täytyy olla moninkertainen: " + n.params.multipleOf;
          break;
        case "not":
          s = 'ei saa olla hyväksytty skeeman "not" mukaan';
          break;
        case "oneOf":
          s = 'täytyy vastata täsmälleen yhtä "oneOf" -kohdassa määriteltyä skeemaa';
          break;
        case "pattern":
          s = 'täytyy vastata muotoa "' + n.params.pattern + '"';
          break;
        case "patternRequired":
          s = 'täytyy sisältää ominaisuus joka vastaa kaavaa "' + n.params.missingPattern + '"';
          break;
        case "propertyNames":
          s = "ominaisuuden nimi on virheellinen";
          break;
        case "required":
          s = "täytyy sisältää vaadittu ominaisuus " + n.params.missingProperty;
          break;
        case "type":
          s = "";
          var r = n.params.type;
          s += "täytyy olla ", r == "number" ? s += "numero" : r == "integer" ? s += "kokonaisluku" : r == "string" ? s += "merkkijono" : r == "boolean" ? s += "boolean" : s += r;
          break;
        case "unevaluatedItems":
          s = "";
          var i = n.params.len;
          s += "ei saa olla enemmän kuin " + i + " elementti", i != 1 && (s += "ä");
          break;
        case "unevaluatedProperties":
          s = "ei saa sisältää arvioimattomia ominaisuuksia";
          break;
        case "uniqueItems":
          s = "ei saa sisältää duplikaatteja (elementit ## " + n.params.j + " ja " + n.params.i + " ovat identtiset)";
          break;
        default:
          s = 'täytyy läpäistä "' + n.keyword + '" avainsanatarkistus';
      }
      n.message = s;
    }
}, Cy = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "ne doit pas contenir plus de " + r + " élémént", r != 1 && (n += "s");
          break;
        case "additionalProperties":
          n = "ne doit pas contenir de propriétés additionnelles";
          break;
        case "anyOf":
          n = 'doit correspondre à un schéma de "anyOf"';
          break;
        case "const":
          n = "doit être égal à la constante";
          break;
        case "contains":
          n = "doit contenir un élément valide";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "doit avoir la propriété " + i.params.deps + " quand la propriété " + i.params.property + " est présente";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'doit être valide selon le critère "' + i.keyword + '"';
          }
          break;
        case "enum":
          n = "doit être égal à une des valeurs prédéfinies";
          break;
        case "false schema":
          n = 'le schema est "false"';
          break;
        case "format":
          n = 'doit correspondre au format "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "doit être " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "doit être " + a;
          break;
        case "if":
          n = 'doit correspondre au schéma "' + i.params.failingKeyword + '"';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "doit être " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "ne doit pas contenir plus de " + r + " élément", r != 1 && (n += "s");
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "ne doit pas dépasser " + r + " caractère", r != 1 && (n += "s");
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "ne doit pas contenir plus de " + r + " propriété", r != 1 && (n += "s");
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "doit être " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "ne doit pas contenir moins de " + r + " élément", r != 1 && (n += "s");
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "ne doit pas faire moins de " + r + " caractère", r != 1 && (n += "s");
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "ne doit pas contenir moins de " + r + " propriété", r != 1 && (n += "s");
          break;
        case "multipleOf":
          n = "doit être un multiple de " + i.params.multipleOf;
          break;
        case "not":
          n = 'est invalide selon le schéma "not"';
          break;
        case "oneOf":
          n = 'doit correspondre à exactement un schéma de "oneOf"';
          break;
        case "pattern":
          n = 'doit correspondre au format "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'la propriété doit correspondre au format "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "le nom de propriété est invalide";
          break;
        case "required":
          n = "requiert la propriété " + i.params.missingProperty;
          break;
        case "type":
          n = "doit être de type " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "ne doit pas contenir de doublons (les éléments ## " + i.params.j + " et " + i.params.i + " sont identiques)";
          break;
        default:
          n = 'doit être valide selon le critère "' + i.keyword + '"';
      }
      i.message = n;
    }
}, xy = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "nem lehet több, mint " + r + " eleme";
          break;
        case "additionalProperties":
          n = "nem lehetnek további elemei";
          break;
        case "anyOf":
          n = 'meg kell feleljen legalább egy "anyOf" alaknak';
          break;
        case "const":
          n = "must be equal to constant";
          break;
        case "contains":
          n = "must contain a valid item";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "-nak kell legyen", r > 1 && (n += "ek"), n += " a következő tulajdonsága", r != 1 && (n += "i"), n += ": " + i.params.deps + ", ha van " + i.params.property + " tulajdonsága";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'must pass "' + i.keyword + '" keyword validation';
          }
          break;
        case "enum":
          n = "egyenlő kell legyen valamely előre meghatározott értékkel";
          break;
        case "false schema":
          n = "boolean schema is false";
          break;
        case "format":
          n = 'meg kell feleljen a következő formátumnak: "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "must be " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "must be " + a;
          break;
        case "if":
          n = 'must match "' + i.params.failingKeyword + '" schema';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "kell legyen " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "nem lehet több, mint " + r + " eleme";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "nem lehet hosszabb, mint " + r + " szimbólum";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "nem lehet több, mint " + r + " tulajdonsága";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "kell legyen " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "nem lehet kevesebb, mint " + r + " eleme";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "nem lehet rövidebb, mint " + r + " szimbólum";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "nem lehet kevesebb, mint " + r + " tulajdonsága";
          break;
        case "multipleOf":
          n = "a többszöröse kell legyen a következő számnak: " + i.params.multipleOf;
          break;
        case "not":
          n = 'nem lehet érvényes a "not" alaknak megfelelően';
          break;
        case "oneOf":
          n = 'meg kell feleljen pontosan egy "oneOf" alaknak';
          break;
        case "pattern":
          n = 'meg kell feleljen a következő mintának: "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'must have property matching pattern "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "property name is invalid";
          break;
        case "required":
          n = "kell legyen " + i.params.missingProperty + " tulajdonsága";
          break;
        case "type":
          n = "" + i.params.type + " kell legyen";
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "nem lehetnek azonos elemei (" + i.params.j + " és " + i.params.i + " elemek azonosak)";
          break;
        default:
          n = 'must pass "' + i.keyword + '" keyword validation';
      }
      i.message = n;
    }
}, Vy = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += " tidak boleh memiliki lebih dari " + r + " item";
          break;
        case "additionalProperties":
          n = "tidak boleh memiliki properti tambahan";
          break;
        case "anyOf":
          n = 'harus cocok dengan beberapa skema pada "anyOf"';
          break;
        case "const":
          n = "harus sama dengan konstan";
          break;
        case "contains":
          n = "harus berisi item yang valid";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += " harus memiliki properti " + i.params.deps + " ketika properti " + i.params.property + " hadir";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'harus lulus validasi kata kunci "' + i.keyword + '"';
          }
          break;
        case "enum":
          n = "harus sama dengan salah satu dari nilai yang telah ditentukan";
          break;
        case "false schema":
          n = "skema boolean salah";
          break;
        case "format":
          n = 'harus cocok dengan format "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "harus " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "harus " + a;
          break;
        case "if":
          n = 'harus cocok dengan skema "' + i.params.failingKeyword + '"';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "harus " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += " tidak boleh memiliki lebih dari " + r + " item";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += " tidak boleh lebih dari " + r + " karakter";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += " tidak boleh memiliki lebih dari " + r + " properti";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "harus " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += " tidak boleh kurang dari " + r + " item";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += " tidak boleh lebih pendek dari " + r + " karakter";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += " tidak boleh kurang dari " + r + " properti";
          break;
        case "multipleOf":
          n = "harus merupakan kelipatan dari " + i.params.multipleOf;
          break;
        case "not":
          n = 'tidak boleh valid sesuai dengan skema pada "not"';
          break;
        case "oneOf":
          n = 'harus sama persis dengan satu skema pada "oneOf"';
          break;
        case "pattern":
          n = 'harus cocok dengan pola "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'harus memiliki pola pencocokan properti "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "nama properti tidak valid";
          break;
        case "required":
          n = "harus memiliki properti " + i.params.missingProperty;
          break;
        case "type":
          n = "harus berupa " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "tidak boleh memiliki item duplikat (item ## " + i.params.j + " dan " + i.params.i + " identik)";
          break;
        default:
          n = 'harus lulus validasi kata kunci "' + i.keyword + '"';
      }
      i.message = n;
    }
}, Iy = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "non dovrebbe avere più di " + r + " element", r == 1 ? n += "o" : n += "i";
          break;
        case "additionalProperties":
          n = "non deve avere attributi aggiuntivi";
          break;
        case "anyOf":
          n = 'deve corrispondere ad uno degli schema in "anyOf"';
          break;
        case "const":
          n = "deve essere uguale alla costante";
          break;
        case "contains":
          n = "deve contentere un elemento valido";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "dovrebbe avere ", r == 1 ? n += "l'" : n += "gli ", n += "attribut", r == 1 ? n += "o" : n += "i", n += " " + i.params.deps + " quando l'attributo " + i.params.property + " è presente";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'il tag "' + i.params.tag + '" deve essere di tipo stringa';
              break;
            case "mapping":
              n = 'il valore del tag "' + i.params.tag + '" deve essere nei oneOf';
              break;
            default:
              n = 'deve essere valido secondo il criterio "' + i.keyword + '"';
          }
          break;
        case "enum":
          n = "deve essere uguale ad uno dei valori consentiti";
          break;
        case "false schema":
          n = "lo schema booleano è falso";
          break;
        case "format":
          n = 'deve corrispondere al formato "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "deve essere " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "deve essere " + a;
          break;
        case "if":
          n = 'deve corrispondere allo schema "' + i.params.failingKeyword + '"';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "deve essere " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "non deve avere più di " + r + " element", r == 1 ? n += "o" : n += "i";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "non deve essere più lungo di " + r + " caratter", r == 1 ? n += "e" : n += "i";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "non deve avere più di " + r + " attribut", r == 1 ? n += "o" : n += "i";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "deve essere " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "non deve avere meno di " + r + " element", r == 1 ? n += "o" : n += "i";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "non deve essere meno lungo di " + r + " caratter", r == 1 ? n += "e" : n += "i";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "non deve avere meno di " + r + " attribut", r == 1 ? n += "o" : n += "i";
          break;
        case "multipleOf":
          n = "deve essere un multiplo di " + i.params.multipleOf;
          break;
        case "not":
          n = 'non deve essere valido in base allo schema di "non"';
          break;
        case "oneOf":
          n = 'deve corrispondere esattamente ad uno degli schema in "oneOf"';
          break;
        case "pattern":
          n = 'deve corrispondere al formato "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'deve avere un attributo che corrisponda al formato "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "il nome dell'attritbuto non è valido";
          break;
        case "required":
          n = "deve avere l'attributo obbligatorio " + i.params.missingProperty;
          break;
        case "type":
          n = "deve essere di tipo " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "non deve avere più di " + r + " elementi", r == 1 ? n += "o" : n += "i";
          break;
        case "unevaluatedProperties":
          n = "non deve avere attributi non valutati";
          break;
        case "uniqueItems":
          n = "non deve avere duplicati (gli elementi ## " + i.params.j + " e " + i.params.i + " sono uguali)";
          break;
        default:
          n = 'deve essere valido secondo il criterio "' + i.keyword + '"';
      }
      i.message = n;
    }
}, Oy = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "は" + r + "以上あってはいけない";
          break;
        case "additionalProperties":
          n = "追加してはいけない";
          break;
        case "anyOf":
          n = '"anyOf"のスキーマとマッチしなくてはいけない';
          break;
        case "const":
          n = "must be equal to constant";
          break;
        case "contains":
          n = "must contain a valid item";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "" + i.params.property + "がある場合、";
          var r = i.params.depsCount;
          n += "は" + i.params.deps + "をつけなければいけない";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'must pass "' + i.keyword + '" keyword validation';
          }
          break;
        case "enum":
          n = "事前に定義された値のいずれかに等しくなければいけない";
          break;
        case "false schema":
          n = "boolean schema is false";
          break;
        case "format":
          n = '"' + i.params.format + '"形式に揃えなければいけない';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "must be " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "must be " + a;
          break;
        case "if":
          n = 'must match "' + i.params.failingKeyword + '" schema';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += a + "でなければいけない";
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "は" + r + "個以上であってはいけない";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "は" + r + "文字以上であってはいけない";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "は" + r + "個以上のプロパティを有してはいけない";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += a + "でなければいけない";
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "は" + r + "個以下であってはいけない";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "は" + r + "文字以下であってはいけない";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "は" + r + "個以下のプロパティを有してはいけない";
          break;
        case "multipleOf":
          n = "" + i.params.multipleOf + "の倍数でなければいけない";
          break;
        case "not":
          n = '"not"のスキーマに従って有効としてはいけない';
          break;
        case "oneOf":
          n = '"oneOf"のスキーマと完全に一致しなくてはいけない';
          break;
        case "pattern":
          n = '"' + i.params.pattern + '"のパターンと一致しなければいけない';
          break;
        case "patternRequired":
          n = 'must have property matching pattern "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "property name is invalid";
          break;
        case "required":
          n = "必要なプロパティ" + i.params.missingProperty + "がなければいけない";
          break;
        case "type":
          n = "" + i.params.type + "でなければいけない";
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "重複するアイテムがあってはいけない（" + i.params.j + "と" + i.params.i + "は同じである）";
          break;
        default:
          n = 'must pass "' + i.keyword + '" keyword validation';
      }
      i.message = n;
    }
}, Ey = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += " 항목은 아이템을 " + r + "개 이상 가질 수 없습니다";
          break;
        case "additionalProperties":
          n = "추가적인 속성은 허용되지 않습니다";
          break;
        case "anyOf":
          n = '"anyOf"의 스키마와 일치해야 합니다';
          break;
        case "const":
          n = "상수와 같아야합니다";
          break;
        case "contains":
          n = "올바른 아이템을 포함해야 합니다";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += i.params.property + "속성이 있는 경우, " + i.params.deps + " 속성이 있어야합니다";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = '"' + i.params.tag + '"태그는 반드시 문자열이여야 합니다';
              break;
            case "mapping":
              n = '"' + i.params.tag + '"태그의 값은 반드시 oneOf에 있어야 합니다';
              break;
            default:
              n = '"' + i.keyword + '"키워드 검사를 통과해야 합니다';
          }
          break;
        case "enum":
          n = "미리 정의된 값중 하나여야 합니다";
          break;
        case "false schema":
          n = "boolean 스키마는 올바르지 않습니다";
          break;
        case "format":
          n = '"' + i.params.format + '" 포맷과 일치해야 합니다';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += " " + a + " 이여야 합니다";
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += " " + a + " 이여야 합니다";
          break;
        case "if":
          n = '"' + i.params.failingKeyword + '" 스키마와 일치해야 합니다';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += " " + a + " 이여야 합니다";
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "아이템이 최대 " + r + "개이여야 합니다";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "최대 " + r + "글자여야 합니다";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "속성은 최대 " + r + "개 이내여야 합니다";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += " " + a + " 이여야 합니다";
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "아이템이 최소 " + r + "개이여야 합니다";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "최소 " + r + "글자여야 합니다";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "속성은 최소 " + r + "개 이상이여야 합니다";
          break;
        case "multipleOf":
          n = "" + i.params.multipleOf + "의 배수여야 합니다";
          break;
        case "not":
          n = '"not"스키마에 따라 유효하지 않아야 합니다';
          break;
        case "oneOf":
          n = '"oneOf" 스키마중 하나와 정확하게 일치해야 합니다';
          break;
        case "pattern":
          n = '"' + i.params.pattern + '"패턴과 일치해야 합니다';
          break;
        case "patternRequired":
          n = '"' + i.params.missingPattern + '"패턴과 일치하는 속성을 가져야 합니다';
          break;
        case "propertyNames":
          n = "속성명이 올바르지 않습니다";
          break;
        case "required":
          n = "" + i.params.missingProperty + " 속성은 필수입니다";
          break;
        case "type":
          n = "" + i.params.type + "이여야 합니다";
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "항목이 " + r + "개 아이템을 초과하면 안됩니다";
          break;
        case "unevaluatedProperties":
          n = "평가되지 않은 속성이 없어야합니다.";
          break;
        case "uniqueItems":
          n = "중복 아이템이 없어야 합니다 (아이템" + i.params.j + "과 아이템" + i.params.i + "가 동일합니다)";
          break;
        default:
          n = '"' + i.keyword + '"키워드 검사를 통과해야 합니다';
      }
      i.message = n;
    }
}, Ay = function(t) {
  if (t && t.length)
    for (const n of t) {
      let s;
      switch (n.keyword) {
        case "additionalItems":
        case "items":
          s = "";
          var i = n.params.limit;
          s += "kan ikke ha mer enn " + i + " element", i != 1 && (s += "er");
          break;
        case "additionalProperties":
          s = "kan ikke ha flere egenskaper";
          break;
        case "anyOf":
          s = 'må samsvare med et schema i "anyOf"';
          break;
        case "const":
          s = "må være lik konstanten";
          break;
        case "contains":
          s = "må inneholde et gyldig element";
          break;
        case "dependencies":
        case "dependentRequired":
          s = "";
          var i = n.params.depsCount;
          s += "må ha egenskapen", i != 1 && (s += "e"), s += " " + n.params.deps + " når egenskapen " + n.params.property + " er angitt";
          break;
        case "discriminator":
          switch (n.params.error) {
            case "tag":
              s = 'tag "' + n.params.tag + '" must be string';
              break;
            case "mapping":
              s = 'value of tag "' + n.params.tag + '" must be in oneOf';
              break;
            default:
              s = "må samsvare med valideringen for " + n.keyword;
          }
          break;
        case "enum":
          s = "må være lik en av de forhåndsdefinerte verdiene";
          break;
        case "false schema":
          s = "boolsk schema er usannt";
          break;
        case "format":
          s = 'må stemme overens med formatet "' + n.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "må være " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "må være " + a;
          break;
        case "if":
          s = 'must match "' + n.params.failingKeyword + '" schema';
          break;
        case "maximum":
        case "exclusiveMaximum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "må være " + a;
          break;
        case "maxItems":
          s = "";
          var i = n.params.limit;
          s += "kan ikke ha fler enn " + i + " element", i != 1 && (s += "er");
          break;
        case "maxLength":
          s = "";
          var i = n.params.limit;
          s += "kan ikke være lengre enn " + i + " tegn";
          break;
        case "maxProperties":
          s = "";
          var i = n.params.limit;
          s += "kan ikke ha mer enn " + i + " egenskap", i != 1 && (s += "er");
          break;
        case "minimum":
        case "exclusiveMinimum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "må være " + a;
          break;
        case "minItems":
          s = "";
          var i = n.params.limit;
          s += "kan ikke ha færre enn " + i + " element", i != 1 && (s += "er");
          break;
        case "minLength":
          s = "";
          var i = n.params.limit;
          s += "kan ikke være kortere enn " + i + " tegn";
          break;
        case "minProperties":
          s = "";
          var i = n.params.limit;
          s += "kan ikke ha mindre enn " + i + " egenskap", i != 1 && (s += "er");
          break;
        case "multipleOf":
          s = "må være et multiplum av " + n.params.multipleOf;
          break;
        case "not":
          s = 'kan ikke samsvare med schema i "not"';
          break;
        case "oneOf":
          s = 'må samsvare med nøyaktig ett schema i "oneOf"';
          break;
        case "pattern":
          s = 'må samsvare med mønsteret "' + n.params.pattern + '"';
          break;
        case "patternRequired":
          s = 'må ha en egenskap som samsvarer med mønsteret "' + n.params.missingPattern;
          break;
        case "propertyNames":
          s = "egenskapen med navnet '", n.params.propertyNameout += "' er ugyldig";
          break;
        case "required":
          s = "må ha den påkrevde egenskapen " + n.params.missingProperty;
          break;
        case "type":
          s = "";
          var r = n.params.type;
          s += "må være ", r == "number" ? s += "et tall" : r == "integer" ? s += "et heltall" : r == "string" ? s += "en streng" : r == "boolean" ? s += "ja eller nei" : s += r;
          break;
        case "unevaluatedItems":
          s = "";
          var i = n.params.len;
          s += "must NOT have more than " + i + " item", i != 1 && (s += "s");
          break;
        case "unevaluatedProperties":
          s = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          s = "kan ikke ha duplikate elemeneter (elementene ## " + n.params.j + " og " + n.params.i + " er identiske)";
          break;
        default:
          s = "må samsvare med valideringen for " + n.keyword;
      }
      n.message = s;
    }
}, Ty = function(t) {
  if (t && t.length)
    for (const n of t) {
      let s;
      switch (n.keyword) {
        case "additionalItems":
        case "items":
          s = "";
          var i = n.params.limit;
          s += "mag niet meer dan " + i + " item", i != 1 && (s += "s"), s += " bevatten";
          break;
        case "additionalProperties":
          s = "mag geen extra eigenschappen bevatten";
          break;
        case "anyOf":
          s = 'moet overeenkomen met een schema in "anyOf"';
          break;
        case "const":
          s = "moet gelijk zijn aan constante";
          break;
        case "contains":
          s = "moet een geldig item bevatten";
          break;
        case "dependencies":
        case "dependentRequired":
          s = "";
          var i = n.params.depsCount;
          s += "moet de eigenschap", i != 1 && (s += "pen"), s += " " + n.params.deps + " bevatten als " + n.params.property + " is gedefinieerd";
          break;
        case "discriminator":
          switch (n.params.error) {
            case "tag":
              s = 'tag "' + n.params.tag + '" moet een tekenreeks zijn';
              break;
            case "mapping":
              s = 'de waarde van het veld "' + n.params.tag + '" moet voorkomen in de oneOf';
              break;
            default:
              s = 'moet sleutelwoord validatie "' + n.keyword + '" doorstaan';
          }
          break;
        case "enum":
          s = "moet overeenkomen met één van de voorgedefinieerde waarden";
          break;
        case "false schema":
          s = "boolean schema is fout";
          break;
        case "format":
          s = 'moet overeenkomen met het volgende formaat: "' + n.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "moet " + a + " zijn";
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "moet " + a + " zijn";
          break;
        case "if":
          s = 'moet overeenkomen met "' + n.params.failingKeyword + '" schema';
          break;
        case "maximum":
        case "exclusiveMaximum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "moet " + a + " zijn";
          break;
        case "maxItems":
          s = "";
          var i = n.params.limit;
          s += "mag niet meer dan " + i + " item", i != 1 && (s += "s"), s += " bevatten";
          break;
        case "maxLength":
          s = "";
          var i = n.params.limit;
          s += "mag niet langer dan " + i + " karakter", i != 1 && (s += "s"), s += " zijn";
          break;
        case "maxProperties":
          s = "";
          var i = n.params.limit;
          s += "mag niet meer dan " + i + " eigenschap", i != 1 && (s += "pen"), s += " bevatten";
          break;
        case "minimum":
        case "exclusiveMinimum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "moet " + a + " zijn";
          break;
        case "minItems":
          s = "";
          var i = n.params.limit;
          s += "mag niet minder dan " + i + " item", i != 1 && (s += "s"), s += " bevatten";
          break;
        case "minLength":
          s = "";
          var i = n.params.limit;
          s += "mag niet korter dan " + i + " karakter", i != 1 && (s += "s"), s += " zijn";
          break;
        case "minProperties":
          s = "";
          var i = n.params.limit;
          s += "mag niet minder dan " + i + " eigenschap", i != 1 && (s += "pen"), s += " bevatten";
          break;
        case "multipleOf":
          s = "moet een veelvoud van " + n.params.multipleOf + " zijn";
          break;
        case "not":
          s = 'mag niet overeenkomen met een schema in "not"';
          break;
        case "oneOf":
          s = 'moet overeenkomen met één schema in "oneOf"';
          break;
        case "pattern":
          s = 'moet overeenkomen met het volgende patroon: "' + n.params.pattern + '"';
          break;
        case "patternRequired":
          s = 'moet een eigenschap bevatten die overeenkomt met het pattroon: "' + n.params.missingPattern + '"';
          break;
        case "propertyNames":
          s = "eigenschapnaam is ongeldig";
          break;
        case "required":
          s = "moet de eigenschap " + n.params.missingProperty + " bevatten";
          break;
        case "type":
          s = "";
          var r = n.params.type;
          s += "moet een ", r == "number" ? s += "nummer" : r == "integer" ? s += "geheel getal" : r == "string" ? s += "tekenreeks" : r == "boolean" && (s += "ja of nee waarde"), s += " (" + r + ") bevatten";
          break;
        case "unevaluatedItems":
          s = "";
          var i = n.params.len;
          s += "mag niet meer dan " + i + " item", i != 1 && (s += "s"), s += " bevatten";
          break;
        case "unevaluatedProperties":
          s = "mag geen ongecontroleerde eigenschappen bevatten";
          break;
        case "uniqueItems":
          s = "mag geen gedupliceerde items bevatten (items ## " + n.params.j + " en " + n.params.i + " zijn identiek)";
          break;
        default:
          s = 'moet sleutelwoord validatie "' + n.keyword + '" doorstaan';
      }
      n.message = s;
    }
}, jy = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "nie powinien mieć więcej niż " + r + " element", r == 1 ? n += "u" : n += "ów";
          break;
        case "additionalProperties":
          n = "nie powinien zawierać dodatkowych pól";
          break;
        case "anyOf":
          n = 'powinien pasować do wzoru z sekcji "anyOf"';
          break;
        case "const":
          n = "powinien być równy stałej";
          break;
        case "contains":
          n = "must contain a valid item";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "powinien zawierać pol", r == 1 ? n += "e" : n += "a", n += " " + i.params.deps + " kiedy pole " + i.params.property + " jest obecne";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'powinien przejść walidację "' + i.keyword + '"';
          }
          break;
        case "enum":
          n = "powinien być równy jednej z predefiniowanych wartości";
          break;
        case "false schema":
          n = "boolean schema is false";
          break;
        case "format":
          n = 'powinien zgadzać się z formatem "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "powinien być " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "powinien być " + a;
          break;
        case "if":
          n = 'must match "' + i.params.failingKeyword + '" schema';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "powinien być " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "nie powinien mieć więcej niż " + r + " element", r == 1 ? n += "u" : n += "ów";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "nie powinien być dłuższy niż " + r + " znak", r != 1 && (n += "ów");
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "nie powinien zawierać więcej niż " + r + " ", r == 1 ? n += "pole" : n += "pól";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "powinien być " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "nie powinien mieć mniej niż " + r + " element", r == 1 ? n += "u" : n += "ów";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "nie powinien być krótszy niż " + r + " znak", r != 1 && (n += "ów");
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "nie powinien zawierać mniej niż " + r + " ", r == 1 ? n += "pole" : n += "pól";
          break;
        case "multipleOf":
          n = "powinien być wielokrotnością " + i.params.multipleOf;
          break;
        case "not":
          n = 'nie powinien pasować do wzoru z sekcji "not"';
          break;
        case "oneOf":
          n = 'powinien pasować do jednego wzoru z sekcji "oneOf"';
          break;
        case "pattern":
          n = 'powinien zgadzać się ze wzorem "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'powinien mieć pole pasujące do wzorca "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "property name is invalid";
          break;
        case "required":
          n = "powinien zawierać wymagane pole " + i.params.missingProperty;
          break;
        case "type":
          n = "powinien być " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "nie powinien zawierać elementów które się powtarzają (elementy " + i.params.j + " i " + i.params.i + " są identyczne)";
          break;
        default:
          n = 'powinien przejść walidację "' + i.keyword + '"';
      }
      i.message = n;
    }
}, My = function(t) {
  if (t && t.length)
    for (const n of t) {
      let s;
      switch (n.keyword) {
        case "additionalItems":
        case "items":
          s = "não são permitidos itens adicionais (mais do que " + i + ")";
          break;
        case "additionalProperties":
          s = "não são permitidas propriedades adicionais";
          break;
        case "anyOf":
          s = 'os dados não correspondem a nenhum schema de "anyOf"';
          break;
        case "const":
          s = "deve ser igual à constante";
          break;
        case "contains":
          s = "deve conter um item válido";
          break;
        case "dependencies":
        case "dependentRequired":
          s = "";
          var i = n.params.depsCount;
          s += " deve ter propriedade", i != 1 && (s += "s"), s += " " + n.params.deps + " quando a propriedade " + n.params.property + " estiver presente";
          break;
        case "discriminator":
          switch (n.params.error) {
            case "tag":
              s = 'a tag "' + n.params.tag + '" deve ser uma string';
              break;
            case "mapping":
              s = 'o valor da tag "' + n.params.tag + '" deve estar no oneOf';
              break;
            default:
              s = 'deve passar a validação da keyword "' + n.keyword + '"';
          }
          break;
        case "enum":
          s = "deve ser igual a um dos valores permitidos";
          break;
        case "false schema":
          s = 'o schema booleano é "false"';
          break;
        case "format":
          s = 'deve corresponder ao formato "' + n.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "deve ser " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "deve ser " + a;
          break;
        case "if":
          s = 'deve corresponder ao schema "' + n.params.failingKeyword + '"';
          break;
        case "maximum":
        case "exclusiveMaximum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "deve ser " + a;
          break;
        case "maxItems":
          s = "";
          var i = n.params.limit;
          s += "não deve ter mais que " + i + " elemento", i != 1 && (s += "s");
          break;
        case "maxLength":
          s = "";
          var i = n.params.limit;
          s += "não deve ser maior que " + i + " caracter", i != 1 && (s += "es");
          break;
        case "maxProperties":
          s = "";
          var i = n.params.limit;
          s += "não deve ter mais que " + i + " propriedade", i != 1 && (s += "s");
          break;
        case "minimum":
        case "exclusiveMinimum":
          s = "";
          var a = n.params.comparison + " " + n.params.limit;
          s += "deve ser " + a;
          break;
        case "minItems":
          s = "";
          var i = n.params.limit;
          s += "não deve ter menos que " + i + " elemento", i != 1 && (s += "s");
          break;
        case "minLength":
          s = "";
          var i = n.params.limit;
          s += "não deve ser mais curta que " + i + " caracter", i != 1 && (s += "es");
          break;
        case "minProperties":
          s = "";
          var i = n.params.limit;
          s += "não deve ter menos que " + i + " propriedade", i != 1 && (s += "s");
          break;
        case "multipleOf":
          s = "deve ser múltiplo de " + n.params.multipleOf;
          break;
        case "not":
          s = 'não deve ser valido segundo o schema em "not"';
          break;
        case "oneOf":
          s = 'deve corresponder exatamente com um schema em "oneOf"';
          break;
        case "pattern":
          s = 'deve corresponder ao padrão "' + n.params.pattern + '"';
          break;
        case "patternRequired":
          s = 'deve ter a propriedade correspondente ao padrão "' + n.params.missingPattern + '"';
          break;
        case "propertyNames":
          s = "o nome da propriedade é inválido";
          break;
        case "required":
          s = "deve ter a propriedade obrigatória " + n.params.missingProperty;
          break;
        case "type":
          s = "";
          var r = n.params.type;
          s += "deve ser ", r == "number" ? s += "um número" : r == "integer" ? s += "um número inteiro" : r == "string" ? s += "um texto" : r == "boolean" ? s += "um booleano" : s += r;
          break;
        case "unevaluatedItems":
          s = "";
          var i = n.params.len;
          s += "não pode possuir mais que " + i + " ", i == 1 ? s += "item" : s += "itens";
          break;
        case "unevaluatedProperties":
          s = "não pode possuir propridades não avaliadas";
          break;
        case "uniqueItems":
          s = "não deve ter itens duplicados (os itens ## " + n.params.j + " e " + n.params.i + " são idênticos)";
          break;
        default:
          s = 'deve passar a validação da keyword "' + n.keyword + '"';
      }
      n.message = s;
    }
}, Dy = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "должно иметь не более, чем " + r + " элемент", r >= 2 && r <= 4 ? n += "а" : r != 1 && (n += "ов");
          break;
        case "additionalProperties":
          n = "не должно иметь дополнительных полей";
          break;
        case "anyOf":
          n = 'должно соответствовать одной их схем в "anyOf"';
          break;
        case "const":
          n = "должно быть равно заданному значению";
          break;
        case "contains":
          n = "должно содержать значение соответствующее схеме";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "должно иметь пол", r == 1 ? n += "е" : n += "я", n += " " + i.params.deps + ", когда присутствует поле " + i.params.property;
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'поле "' + i.params.tag + '" должно быть строкой';
              break;
            case "mapping":
              n = 'значение поля "' + i.params.tag + '" должно быть в одной из oneOf схем ';
              break;
            default:
              n = 'должно соответствовать правилу "' + i.keyword + '"';
          }
          break;
        case "enum":
          n = "должно быть равно одному из разрешенных значений";
          break;
        case "false schema":
          n = "схема равна false";
          break;
        case "format":
          n = 'должно соответствовать формату "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "должно быть " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "должно быть " + a;
          break;
        case "if":
          n = 'должно соответствовать схемe "' + i.params.failingKeyword + '"';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "должно быть " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "должно иметь не более, чем " + r + " элемент", r >= 2 && r <= 4 ? n += "а" : r != 1 && (n += "ов");
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "должно быть не длиннее, чем " + r + " символ", r >= 2 && r <= 4 ? n += "а" : r != 1 && (n += "ов");
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "должно иметь не более, чем " + r + " пол", r == 1 ? n += "е" : r >= 2 && r <= 4 ? n += "я" : n += "ей";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "должно быть " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "должно иметь не менее, чем " + r + " элемент", r >= 2 && r <= 4 ? n += "а" : r != 1 && (n += "ов");
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "должно быть не короче, чем " + r + " символ", r >= 2 && r <= 4 ? n += "а" : r != 1 && (n += "ов");
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "должно иметь не менее, чем " + r + " пол", r == 1 ? n += "е" : r >= 2 && r <= 4 ? n += "я" : n += "ей";
          break;
        case "multipleOf":
          n = "должно быть кратным " + i.params.multipleOf;
          break;
        case "not":
          n = 'должно не соответствовать схеме в "not"';
          break;
        case "oneOf":
          n = 'должно соответствовать в точности одной схемe в "oneOf"';
          break;
        case "pattern":
          n = 'должно соответствовать образцу "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'должно иметь поле, соответствующее образцу "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "имя поля не соответствует схеме";
          break;
        case "required":
          n = "должно иметь обязательное поле " + i.params.missingProperty;
          break;
        case "type":
          n = "должно быть " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "должно иметь не более, чем " + r + " элемент", r >= 2 && r <= 4 ? n += "а" : r != 1 && (n += "ов");
          break;
        case "unevaluatedProperties":
          n = "не должно иметь непроверенных полей";
          break;
        case "uniqueItems":
          n = "не должно иметь повторяющихся элементов (элементы " + i.params.j + " и " + i.params.i + " идентичны)";
          break;
        default:
          n = 'должно соответствовать правилу "' + i.keyword + '"';
      }
      i.message = n;
    }
}, Ry = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "nemôže obsahovať viac, než " + r + " prv", r == 1 ? n += "ok" : n += "kov";
          break;
        case "additionalProperties":
          n = "nemôže obsahovať ďalšie položky";
          break;
        case "anyOf":
          n = 'musí splňovať aspoň jednu zo schém v "anyOf"';
          break;
        case "const":
          n = "musí byť konštanta";
          break;
        case "contains":
          n = "musí obsahovať prvok zodpovedajúci schéme";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += " musí obsahovať polož", r >= 2 && r <= 4 ? n += "ky" : r != 1 ? n += "iek" : n += "ka", n += ": " + i.params.deps + ", ak obsahuje " + i.params.property;
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'musí splniť "' + i.keyword + '" validáciu';
          }
          break;
        case "enum":
          n = "musí byť jedna z definovaných hodnôt";
          break;
        case "false schema":
          n = "schéma je false";
          break;
        case "format":
          n = 'musí obsahovať formát "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "musí byť " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "musí byť " + a;
          break;
        case "if":
          n = 'must match "' + i.params.failingKeyword + '" schema';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "musí byť " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "nesmie obsahovať viac než " + r + " prv", r == 1 ? n += "ok" : n += "kov";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "nesmie byť dlhší než " + r + " znak", r != 1 && (n += "ov");
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "nesmie obsahovať viac než " + r + " polož", r >= 2 && r <= 4 ? n += "ky" : r != 1 ? n += "iek" : n += "ka";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "musí byť " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "nesmie obsahovať menej než " + r + " prv", r == 1 ? n += "ok" : n += "kov";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "nesmie byť kratší než " + r + " znak", r != 1 && (n += "ov");
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "nesmie obsahovať menej než " + r + " polož", r >= 2 && r <= 4 ? n += "ky" : r != 1 ? n += "iek" : n += "ka";
          break;
        case "multipleOf":
          n = "musí byť násobkom " + i.params.multipleOf;
          break;
        case "not":
          n = 'nesmie splňovať schému v "not"';
          break;
        case "oneOf":
          n = 'musí splňovať práve jednu schému v "oneOf"';
          break;
        case "pattern":
          n = 'musí splňovať regulárny výraz "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'musí obsahovať položku splňjúcu regulárny výraz "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "názov položky nezodpovedá schéme";
          break;
        case "required":
          n = "musí obsahovať požadovanú položku " + i.params.missingProperty;
          break;
        case "type":
          n = "musí byť " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "nesmie obsahovať duplicitné prvky (prvky ## " + i.params.j + " a " + i.params.i + " sú rovnaké)";
          break;
        default:
          n = 'musí splniť "' + i.keyword + '" validáciu';
      }
      i.message = n;
    }
}, Ny = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "borde ha fler än " + r + " sak", r != 1 && (n += "er");
          break;
        case "additionalProperties":
          n = "borde inte ha fler egenskaper";
          break;
        case "anyOf":
          n = 'borde matcha något schema i "anyOf"';
          break;
        case "const":
          n = "bör vara en konstant";
          break;
        case "contains":
          n = "bör innehålla ett giltigt objekt";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "borde ha egenskap", r != 1 && (n += "er"), n += " " + i.params.deps + " när egenskap " + i.params.property + " finns tillgängligt";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" must be string';
              break;
            case "mapping":
              n = 'value of tag "' + i.params.tag + '" must be in oneOf';
              break;
            default:
              n = 'bör passera "' + i.keyword + '" nyckelord validering';
          }
          break;
        case "enum":
          n = "borde vara ekvivalent med en av dess fördefinierade värden";
          break;
        case "false schema":
          n = "boolean schema är falskt";
          break;
        case "format":
          n = 'borde matcha formatet "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "bör vara " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "bör vara " + a;
          break;
        case "if":
          n = 'must match "' + i.params.failingKeyword + '" schema';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "borde vara " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "borde inte ha fler än " + r + " sak", r != 1 && (n += "er");
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "borde inte vara längre än " + r + " tecken";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "borde inte ha fler än " + r + " egenskap", r != 1 && (n += "er");
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "borde vara " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "borde inte ha färre än " + r + " sak", r != 1 && (n += "er");
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "borde inte vara kortare än " + r + " tecken";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "borde inte ha färre än " + r + " egenskap", r != 1 && (n += "er");
          break;
        case "multipleOf":
          n = "borde vara en multipel av " + i.params.multipleOf;
          break;
        case "not":
          n = 'borde inte vara giltigt enligt schema i "not"';
          break;
        case "oneOf":
          n = 'borde matcha exakt ett schema i "oneOf"';
          break;
        case "pattern":
          n = 'borde matcha mönstret "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'bör ha en egenskap som matchar mönstret "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "egenskap med namnet är inte giltig";
          break;
        case "required":
          n = "borde ha den nödvändiga egenskapen " + i.params.missingProperty;
          break;
        case "type":
          n = "borde vara " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "must NOT have more than " + r + " item", r != 1 && (n += "s");
          break;
        case "unevaluatedProperties":
          n = "must NOT have unevaluated properties";
          break;
        case "uniqueItems":
          n = "borde inte ha duplicerade saker (sakerna ## " + i.params.j + " och " + i.params.i + " är identiska)";
          break;
        default:
          n = 'bör passera "' + i.keyword + '" nyckelord validering';
      }
      i.message = n;
    }
}, zy = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "ต้องมีสมาชิกไม่เกิน " + r + " ตัว";
          break;
        case "additionalProperties":
          n = "ต้องไม่มี property อื่นๆ นอกเหนีอจากที่กำหนดไว้";
          break;
        case "anyOf":
          n = 'ต้องตรงกับหนึ่งใน schema ที่กำหนดไว้ใน "anyOf"';
          break;
        case "const":
          n = "ต้องเท่ากับค่าคงที่";
          break;
        case "contains":
          n = "ต้องมีสมาชิกที่ผ่านเงื่อนไขอยู่";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "เมื่อมี property " + i.params.property + " แล้วจะต้องมี property " + i.params.deps + " ด้วย";
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = 'tag "' + i.params.tag + '" ต้องเป็น string';
              break;
            case "mapping":
              n = 'ต้องมีค่าของ tag "' + i.params.tag + '" ใน oneOf';
              break;
            default:
              n = 'ต้องผ่านคีย์เวิร์ด "' + i.keyword + '"';
          }
          break;
        case "enum":
          n = "ต้องตรงกับหนึ่งในค่าที่กำหนดไว้";
          break;
        case "false schema":
          n = "schema เป็น false";
          break;
        case "format":
          n = 'ต้องเป็นรูปแบบ "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "ต้อง " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "ต้อง " + a;
          break;
        case "if":
          n = 'ต้องตรงกับ schema "' + i.params.failingKeyword + '"';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "ต้อง " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "ต้องมีสมาชิกไม่เกิน " + r;
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "ต้องยาวไม่เกิน " + r + " ตัวอักษร";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "ต้องมี property ไม่เกิน " + r + " ตัว";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "ต้อง " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "ควรมีสมาชิกไม่น้อยกว่า " + r;
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "ต้องมีอย่างน้อย " + r + " ตัวอักษร";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "ต้องมี property อย่างน้อย " + r + " ตัว";
          break;
        case "multipleOf":
          n = "ต้องเป็นเลขที่หาร " + i.params.multipleOf + " ลงตัว";
          break;
        case "not":
          n = 'ต้องไม่ผ่าน schema ที่กำหนดไว้ใน "not"';
          break;
        case "oneOf":
          n = 'ต้องตรงกับ schema ตัวเดียวใน "oneOf" เท่านั้น';
          break;
        case "pattern":
          n = 'ต้องตรงตาม pattern "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = 'ต้องมี property ที่มีชื่อตรงตาม pattern "' + i.params.missingPattern + '"';
          break;
        case "propertyNames":
          n = "ชื่อ property ไม่ถูกต้อง";
          break;
        case "required":
          n = "ต้องมี property " + i.params.missingProperty + " ด้วย";
          break;
        case "type":
          n = "ต้องเป็น " + i.params.type;
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += "ต้องมีไม่เกิน " + r + " ตัว";
          break;
        case "unevaluatedProperties":
          n = "ต้องไม่มี property ที่ยังไม่ได้ผ่านการตรวจสอบเงื่อนไขใดๆ";
          break;
        case "uniqueItems":
          n = "ต้องมีสมาชิกไม่ซ้ำักัน (ลำดับที่ " + i.params.j + " กับ " + i.params.i + " ซ้ำกัน)";
          break;
        default:
          n = 'ต้องผ่านคีย์เวิร์ด "' + i.keyword + '"';
      }
      i.message = n;
    }
}, Ly = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "不允许超过" + r + "个元素";
          break;
        case "additionalProperties":
          n = "不允许有额外的属性";
          break;
        case "anyOf":
          n = "数据应为 anyOf 所指定的其中一个";
          break;
        case "const":
          n = "应当等于常量";
          break;
        case "contains":
          n = "应当包含一个有效项";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "应当拥有属性" + i.params.property + "的依赖属性" + i.params.deps;
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = '标签 "' + i.params.tag + '" 的类型必须为字符串';
              break;
            case "mapping":
              n = '标签 "' + i.params.tag + '" 的值必须在 oneOf 之中';
              break;
            default:
              n = '应当通过 "' + i.keyword + ' 关键词校验"';
          }
          break;
        case "enum":
          n = "应当是预设定的枚举值之一";
          break;
        case "false schema":
          n = "布尔模式出错";
          break;
        case "format":
          n = '应当匹配格式 "' + i.params.format + '"';
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "应当是 " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "应当是 " + a;
          break;
        case "if":
          n = '应当匹配模式 "' + i.params.failingKeyword + '" ';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "应当为 " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "不应多于 " + r + " 个项";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "不应多于 " + r + " 个字符";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "不应有多于 " + r + " 个属性";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "应当为 " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "不应少于 " + r + " 个项";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "不应少于 " + r + " 个字符";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "不应有少于 " + r + " 个属性";
          break;
        case "multipleOf":
          n = "应当是 " + i.params.multipleOf + " 的整数倍";
          break;
        case "not":
          n = '不应当匹配 "not" schema';
          break;
        case "oneOf":
          n = '只能匹配一个 "oneOf" 中的 schema';
          break;
        case "pattern":
          n = '应当匹配模式 "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = "应当有属性匹配模式 " + i.params.missingPattern;
          break;
        case "propertyNames":
          n = "属性名 无效";
          break;
        case "required":
          n = "应当有必需属性 " + i.params.missingProperty;
          break;
        case "type":
          n = "应当是 " + i.params.type + " 类型";
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += " 不允许有超过 " + r + " 个元素";
          break;
        case "unevaluatedProperties":
          n = "不允许存在未求值的属性";
          break;
        case "uniqueItems":
          n = "不应当含有重复项 (第 " + i.params.j + " 项与第 " + i.params.i + " 项是重复的)";
          break;
        default:
          n = '应当通过 "' + i.keyword + ' 关键词校验"';
      }
      i.message = n;
    }
}, By = function(t) {
  if (t && t.length)
    for (const i of t) {
      let n;
      switch (i.keyword) {
        case "additionalItems":
        case "items":
          n = "";
          var r = i.params.limit;
          n += "不可以超過" + r + "個元素";
          break;
        case "additionalProperties":
          n = "不可以有額外的屬性";
          break;
        case "anyOf":
          n = "不符合 anyOf 指定的模式";
          break;
        case "const":
          n = "應該等於常數";
          break;
        case "contains":
          n = "應該包含一個有效元素";
          break;
        case "dependencies":
        case "dependentRequired":
          n = "";
          var r = i.params.depsCount;
          n += "應該要有屬性" + i.params.property + "的依賴屬性" + i.params.deps;
          break;
        case "discriminator":
          switch (i.params.error) {
            case "tag":
              n = '標籤 "' + i.params.tag + '" 的類型必須是字串';
              break;
            case "mapping":
              n = '標籤 "' + i.params.tag + '" 必須在 oneOf 其中之一';
              break;
            default:
              n = '應該通過 "' + i.keyword + ' 關鍵詞檢驗"';
          }
          break;
        case "enum":
          n = "應該要在預設的值之中";
          break;
        case "false schema":
          n = "布林模式不正確";
          break;
        case "format":
          n = "應該要符合" + i.params.format + "格式";
          break;
        case "formatMaximum":
        case "formatExclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "應該是 " + a;
          break;
        case "formatMinimum":
        case "formatExclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "應該是 " + a;
          break;
        case "if":
          n = '應該符合 "' + i.params.failingKeyword + '" schema';
          break;
        case "maximum":
        case "exclusiveMaximum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "應該要 " + a;
          break;
        case "maxItems":
          n = "";
          var r = i.params.limit;
          n += "不應該多於 " + r + " 個";
          break;
        case "maxLength":
          n = "";
          var r = i.params.limit;
          n += "不應該多於 " + r + " 個字元";
          break;
        case "maxProperties":
          n = "";
          var r = i.params.limit;
          n += "不應該多於 " + r + " 個屬性";
          break;
        case "minimum":
        case "exclusiveMinimum":
          n = "";
          var a = i.params.comparison + " " + i.params.limit;
          n += "應該要 " + a;
          break;
        case "minItems":
          n = "";
          var r = i.params.limit;
          n += "不應該少於 " + r + " 個";
          break;
        case "minLength":
          n = "";
          var r = i.params.limit;
          n += "不應該少於 " + r + " 個字元";
          break;
        case "minProperties":
          n = "";
          var r = i.params.limit;
          n += "不應該少於 " + r + " 個屬性";
          break;
        case "multipleOf":
          n = "應該是 " + i.params.multipleOf + " 的整數倍";
          break;
        case "not":
          n = '不應該符合 "not" schema';
          break;
        case "oneOf":
          n = '只能符合一個 "oneOf" 中的 schema';
          break;
        case "pattern":
          n = '應該符合模式 "' + i.params.pattern + '"';
          break;
        case "patternRequired":
          n = "應該有屬性對應模式 " + i.params.missingPattern;
          break;
        case "propertyNames":
          n = "属性名 無效";
          break;
        case "required":
          n = "應該有必須屬性 " + i.params.missingProperty;
          break;
        case "type":
          n = "應該是 " + i.params.type + " 類型";
          break;
        case "unevaluatedItems":
          n = "";
          var r = i.params.len;
          n += " 的元素不可以超過 " + r + " 個";
          break;
        case "unevaluatedProperties":
          n = "不應該有未驗證的屬性";
          break;
        case "uniqueItems":
          n = "不應該有重複項目 (第 " + i.params.j + " 項和第 " + i.params.i + " 項是重複的)";
          break;
        default:
          n = '應該通過 "' + i.keyword + ' 關鍵詞檢驗"';
      }
      i.message = n;
    }
}, Fy = {
  en: by,
  ar: ky,
  ca: wy,
  cs: $y,
  de: Sy,
  es: _y,
  fi: Py,
  fr: Cy,
  hu: xy,
  id: Vy,
  it: Iy,
  ja: Oy,
  ko: Ey,
  nb: Ay,
  nl: Ty,
  pl: jy,
  "pt-BR": My,
  ru: Dy,
  sk: Ry,
  sv: Ny,
  th: zy,
  zh: Ly,
  "zh-TW": By
};
const qy = /* @__PURE__ */ xr(Fy);
function Ky(e) {
  return typeof e == "string";
}
function Hy(e) {
  return typeof e == "object" && "switch" in e;
}
function Uy(e) {
  return Array.isArray(e);
}
function Wy(e) {
  return typeof e != "string" && "children" in e;
}
function Zc(e) {
  return typeof e != "string" && ("text" in e || "markdown" in e || "name" in e);
}
function Gy(e) {
  return typeof e == "object" && !Array.isArray(e);
}
function Yy(e) {
  return typeof e == "string" || !!e.expr;
}
function vl(e) {
  return typeof e == "object";
}
function fm(e) {
  return typeof e == "object" && !!e.url;
}
function Xy(e) {
  return typeof e == "object" && !!/** @type {any} */
  e.markdown;
}
function Zy(e) {
  return typeof e == "object" && !!/** @type {any} */
  e.text;
}
function Jy(e) {
  return typeof e == "object" && !!/** @type {any} */
  e.name;
}
function _n(e) {
  return typeof e == "object" && "switch" in e;
}
function Qy(e) {
  return !_n(e);
}
function mm(e) {
  return "comp" in e && "children" in e;
}
function eg(e) {
  return "comp" in e && e.comp === "slot";
}
function Xr(e, t) {
  var a;
  return !!((a = t[e.comp]) != null && a.composite);
}
function vm(e) {
  return e.comp === "list";
}
function tg(e, t) {
  var a;
  return !!((a = t[e.comp]) != null && a.focusable);
}
function Zr(e, t) {
  var a;
  return !!((a = t[e.comp]) != null && a.itemsBased);
}
function Fo(e) {
  return !!e.expr;
}
function qo(e) {
  return !!e.url;
}
function Jc(e) {
  return !!e.text;
}
function ag(e) {
  return !!e.markdown;
}
function ng(e) {
  return !!e.name;
}
const rg = [
  {
    name: "none"
  },
  {
    name: "slot"
  },
  {
    name: "composite-slot",
    composite: !0
  },
  {
    name: "section",
    composite: !0
  },
  {
    name: "tabs",
    composite: !0
  },
  {
    name: "vertical-tabs",
    composite: !0
  },
  {
    name: "expansion-panels",
    composite: !0
  },
  {
    name: "stepper",
    composite: !0
  },
  {
    name: "card",
    composite: !0
  },
  {
    name: "list",
    itemsBased: !0,
    schema: {
      required: ["listEditMode", "listActions"],
      properties: {
        title: { type: "string" },
        listEditMode: { type: "string", enum: ["inline", "inline-single", "menu", "dialog"] },
        listActions: { type: "array", items: { type: "string", enum: ["add", "edit", "delete", "sort", "duplicate", "copy", "paste"] } },
        clipboardKey: { type: "string" },
        itemTitle: { $ref: "https://json-layout.github.io/normalized-layout-keyword#/$defs/expression" },
        itemSubtitle: { $ref: "https://json-layout.github.io/normalized-layout-keyword#/$defs/expression" },
        itemCopy: { $ref: "https://json-layout.github.io/normalized-layout-keyword#/$defs/expression" },
        indexed: { type: "array", items: { type: "string" } },
        messages: {
          type: "object",
          additionalProperties: !1,
          properties: {
            addItem: { type: "string" },
            delete: { type: "string" },
            edit: { type: "string" },
            duplicate: { type: "string" },
            sort: { type: "string" }
          }
        }
      }
    }
  },
  {
    name: "text-field",
    shouldDebounce: !0,
    focusable: !0,
    emitsBlur: !0,
    schema: {
      properties: {
        placeholder: { type: "string" }
      }
    }
  },
  {
    name: "textarea",
    shouldDebounce: !0,
    focusable: !0,
    emitsBlur: !0,
    schema: {
      properties: {
        placeholder: { type: "string" },
        rows: { type: "number" }
      }
    }
  },
  {
    name: "number-field",
    shouldDebounce: !0,
    focusable: !0,
    // number inputs can emit blur events, but not always a specific event when clicking on up/down arrows
    // in this case updateOn: blur cannot be made to work properly, that is why we do not set emitsBlur to true
    // emitsBlur: true,
    schema: {
      properties: {
        step: { type: "number" },
        min: { type: "number" },
        max: { type: "number" },
        precision: { type: "number" },
        placeholder: { type: "string" }
      }
    }
  },
  {
    name: "checkbox"
  },
  {
    name: "switch"
  },
  {
    name: "slider",
    schema: {
      properties: {
        step: { type: "number" },
        min: { type: "number" },
        max: { type: "number" }
      }
    }
  },
  {
    name: "date-picker",
    schema: {
      properties: {
        min: { type: "string", format: "date" },
        max: { type: "string", format: "date" },
        format: { type: "string", enum: ["date", "date-time"], default: "date" }
      }
    }
  },
  {
    name: "date-time-picker",
    schema: {
      properties: {
        min: { type: "string", format: "date-time" },
        max: { type: "string", format: "date-time" }
      }
    }
  },
  {
    name: "time-picker",
    schema: {
      properties: {
        min: { type: "string", format: "time" },
        max: { type: "string", format: "time" }
      }
    }
  },
  {
    name: "color-picker"
  },
  {
    name: "select",
    focusable: !0,
    itemsBased: !0,
    multipleCompat: !0,
    schema: {
      properties: {
        placeholder: { type: "string" }
      }
    }
  },
  {
    name: "autocomplete",
    focusable: !0,
    itemsBased: !0,
    multipleCompat: !0,
    schema: {
      properties: {
        placeholder: { type: "string" }
      }
    }
  },
  {
    name: "combobox",
    focusable: !0,
    itemsBased: !0,
    multipleCompat: !0,
    schema: {
      properties: {
        placeholder: { type: "string" }
      }
    }
  },
  {
    name: "number-combobox",
    focusable: !0,
    itemsBased: !0,
    multipleCompat: !0,
    schema: {
      properties: {
        placeholder: { type: "string" },
        step: { type: "number" },
        min: { type: "number" },
        max: { type: "number" }
      }
    }
  },
  {
    name: "checkbox-group",
    itemsBased: !0,
    multipleCompat: !0
  },
  {
    name: "switch-group",
    itemsBased: !0,
    multipleCompat: !0
  },
  {
    name: "radio-group",
    itemsBased: !0
  },
  {
    name: "file-input",
    focusable: !0,
    multipleCompat: !0,
    isFileInput: !0,
    schema: {
      properties: {
        accept: { type: "string" },
        placeholder: { type: "string" }
      }
    }
  },
  {
    name: "one-of-select",
    schema: {
      properties: {
        emptyData: { type: "boolean" }
      }
    }
  }
];
function ig(e) {
  const t = {
    type: "object",
    title: e.name,
    $id: `https://json-layout.github.io/component/${e.name}#`,
    unevaluatedProperties: !1,
    allOf: [
      { properties: { comp: { const: e.name } } },
      { $ref: "https://json-layout.github.io/normalized-layout-keyword#/$defs/base-comp-object" }
    ]
  };
  return e.composite ? t.allOf.push({ $ref: "https://json-layout.github.io/normalized-layout-keyword#/$defs/composite-comp-object" }) : t.allOf.push({ $ref: "https://json-layout.github.io/normalized-layout-keyword#/$defs/simple-comp-object" }), e.focusable && t.allOf.push({ $ref: "https://json-layout.github.io/normalized-layout-keyword#/$defs/focusable-comp-object" }), e.itemsBased && t.allOf.push({ $ref: "https://json-layout.github.io/normalized-layout-keyword#/$defs/items-based-comp-object" }), e.multipleCompat && t.allOf.push({ $ref: "https://json-layout.github.io/normalized-layout-keyword#/$defs/multiple-compat-comp-object" }), e.schema && t.allOf.push(e.schema), t;
}
function Qc(e) {
  return e instanceof Buffer ? Buffer.from(e) : new e.constructor(e.buffer.slice(), e.byteOffset, e.length);
}
function sg() {
  return t;
  function e(a, r) {
    const i = Object.keys(a), n = new Array(i.length);
    for (let s = 0; s < i.length; s++) {
      const o = i[s], l = a[o];
      typeof l != "object" || l === null ? n[o] = l : l instanceof Date ? n[o] = new Date(l) : ArrayBuffer.isView(l) ? n[o] = Qc(l) : n[o] = r(l);
    }
    return n;
  }
  function t(a) {
    if (typeof a != "object" || a === null) return a;
    if (a instanceof Date) return new Date(a);
    if (Array.isArray(a)) return e(a, t);
    if (a instanceof Map) return new Map(e(Array.from(a), t));
    if (a instanceof Set) return new Set(e(Array.from(a), t));
    const r = {};
    for (const i in a) {
      if (Object.hasOwnProperty.call(a, i) === !1) continue;
      const n = a[i];
      typeof n != "object" || n === null ? r[i] = n : n instanceof Date ? r[i] = new Date(n) : n instanceof Map ? r[i] = new Map(e(Array.from(n), t)) : n instanceof Set ? r[i] = new Set(e(Array.from(n), t)) : ArrayBuffer.isView(n) ? r[i] = Qc(n) : r[i] = t(n);
    }
    return r;
  }
}
const Sa = sg(), pm = {
  $id: "https://json-layout.github.io/layout-keyword",
  $defs: {
    "layout-keyword": {
      title: "layout keyword",
      errorMessage: {
        anyOf: "layout keyword must be a string with a valid component name, or a more complete object definition, or an array of children, or a switch structure"
      },
      anyOf: [
        {
          $ref: "#/$defs/comp-name"
        },
        {
          $ref: "#/$defs/partial-children"
        },
        {
          $ref: "#/$defs/partial-comp-object"
        },
        {
          $ref: "#/$defs/partial-switch"
        }
      ]
    },
    "partial-switch": {
      type: "object",
      required: [
        "switch"
      ],
      additionalProperties: !1,
      properties: {
        switch: {
          type: "array",
          items: {
            $ref: "#/$defs/partial-comp-object"
          }
        }
      }
    },
    "partial-comp-object": {
      title: "partial comp object",
      type: "object",
      properties: {
        comp: {
          $ref: "#/$defs/comp-name"
        },
        help: {
          type: "string"
        },
        children: {
          $ref: "#/$defs/partial-children"
        },
        label: {
          type: "string"
        },
        hint: {
          type: [
            "string",
            "null"
          ]
        },
        title: {
          type: [
            "string",
            "null"
          ]
        },
        subtitle: {
          type: [
            "string",
            "null"
          ]
        },
        step: {
          type: "number"
        },
        if: {
          $ref: "#/$defs/partial-expression"
        },
        itemTitle: {
          $ref: "#/$defs/partial-expression"
        },
        itemSubtitle: {
          $ref: "#/$defs/partial-expression"
        },
        itemCopy: {
          $ref: "#/$defs/partial-expression"
        },
        items: {
          type: "array",
          items: {
            $ref: "#/$defs/partial-select-item"
          }
        },
        getItems: {
          $ref: "#/$defs/partial-get-items"
        },
        listEditMode: {
          type: "string",
          enum: [
            "inline",
            "inline-single",
            "menu",
            "dialog"
          ]
        },
        listActions: {
          type: "array",
          items: {
            type: "string",
            enum: [
              "add",
              "edit",
              "delete",
              "sort",
              "duplicate",
              "copy",
              "paste"
            ]
          }
        },
        clipboardKey: {
          type: "string"
        },
        cols: {
          $ref: "#/$defs/partial-cols"
        },
        props: {
          type: "object"
        },
        getProps: {
          $ref: "#/$defs/partial-expression"
        },
        slots: {
          type: "object",
          patternProperties: {
            ".*": {
              $ref: "#/$defs/partial-slot"
            }
          }
        },
        options: {
          type: "object"
        },
        getOptions: {
          $ref: "#/$defs/partial-expression"
        },
        messages: {
          type: "object"
        },
        defaultData: {},
        getDefaultData: {
          $ref: "#/$defs/partial-expression"
        },
        constData: {},
        getConstData: {
          $ref: "#/$defs/partial-expression"
        },
        transformData: {
          $ref: "#/$defs/partial-expression"
        },
        autofocus: {
          type: "boolean"
        },
        separator: {
          type: "string"
        }
      }
    },
    "comp-name": {
      title: "component name",
      type: "string"
    },
    "partial-child-ref": {
      type: "object",
      required: [
        "key"
      ],
      additionalProperties: !1,
      properties: {
        key: {
          type: [
            "string",
            "integer"
          ]
        },
        cols: {
          $ref: "#/$defs/partial-cols"
        },
        if: {
          $ref: "#/$defs/partial-expression"
        },
        slots: {
          type: "object",
          patternProperties: {
            ".*": {
              $ref: "#/$defs/partial-slot"
            }
          }
        }
      }
    },
    "partial-child-composite": {
      type: "object",
      required: [
        "children"
      ],
      properties: {
        comp: {
          type: "string"
        },
        title: {
          type: [
            "string",
            "null"
          ]
        },
        subtitle: {
          type: [
            "string",
            "null"
          ]
        },
        children: {
          $ref: "#/$defs/partial-children"
        },
        cols: {
          $ref: "#/$defs/partial-cols"
        },
        if: {
          $ref: "#/$defs/partial-expression"
        },
        slots: {
          type: "object",
          patternProperties: {
            ".*": {
              $ref: "#/$defs/partial-slot"
            }
          }
        }
      }
    },
    "partial-child-slot": {
      type: "object",
      properties: {
        cols: {
          $ref: "#/$defs/partial-cols"
        },
        if: {
          $ref: "#/$defs/partial-expression"
        }
      },
      oneOf: [
        {
          $ref: "#/$defs/partial-slot-text"
        },
        {
          $ref: "#/$defs/partial-slot-markdown"
        },
        {
          $ref: "#/$defs/partial-slot-name"
        }
      ]
    },
    "partial-child": {
      anyOf: [
        {
          type: "string"
        },
        {
          type: "array",
          items: {
            $ref: "#/$defs/partial-child"
          }
        },
        {
          $ref: "#/$defs/partial-child-ref"
        },
        {
          $ref: "#/$defs/partial-child-composite"
        },
        {
          $ref: "#/$defs/partial-child-slot"
        }
      ]
    },
    "partial-children": {
      type: "array",
      items: {
        $ref: "#/$defs/partial-child"
      }
    },
    "partial-expression": {
      oneOf: [
        {
          type: "string"
        },
        {
          $ref: "#/$defs/partial-expression-obj"
        }
      ]
    },
    "partial-expression-obj": {
      type: "object",
      required: [
        "expr"
      ],
      properties: {
        type: {
          type: "string",
          enum: [
            "js-fn",
            "js-eval",
            "js-tpl"
          ]
        },
        expr: {
          type: "string"
        }
      }
    },
    "partial-select-item": {
      oneOf: [
        {
          type: "string"
        },
        {
          type: "object",
          properties: {
            header: {
              type: "string"
            },
            key: {
              type: "string"
            },
            title: {
              type: "string"
            },
            icon: {
              type: "string"
            },
            value: {}
          }
        }
      ]
    },
    "partial-get-items": {
      oneOf: [
        {
          type: "string"
        },
        {
          $ref: "#/$defs/partial-get-items-obj"
        }
      ]
    },
    "partial-get-items-obj": {
      type: "object",
      allOf: [
        {
          properties: {
            itemHeader: {
              $ref: "#/$defs/partial-expression"
            },
            itemTitle: {
              $ref: "#/$defs/partial-expression"
            },
            itemKey: {
              $ref: "#/$defs/partial-expression"
            },
            itemValue: {
              $ref: "#/$defs/partial-expression"
            },
            itemIcon: {
              $ref: "#/$defs/partial-expression"
            },
            itemsResults: {
              $ref: "#/$defs/partial-expression"
            }
          }
        },
        {
          anyOf: [
            {
              type: "object"
            },
            {
              $ref: "#/$defs/partial-expression-obj"
            },
            {
              $ref: "#/$defs/partial-get-items-fetch"
            }
          ]
        }
      ]
    },
    "partial-get-items-fetch": {
      type: "object",
      required: [
        "url"
      ],
      properties: {
        url: {
          $ref: "#/$defs/partial-expression"
        },
        searchParams: {
          type: "object",
          patternProperties: {
            ".*": {
              $ref: "#/$defs/partial-expression"
            }
          }
        },
        headers: {
          type: "object",
          patternProperties: {
            ".*": {
              $ref: "#/$defs/partial-expression"
            }
          }
        }
      }
    },
    "partial-cols": {
      oneOf: [
        {
          $ref: "#/$defs/partial-cols-number"
        },
        {
          $ref: "#/$defs/partial-cols-obj"
        }
      ]
    },
    "partial-cols-obj": {
      type: "object",
      additionalProperties: !1,
      properties: {
        xs: {
          $ref: "#/$defs/partial-cols-number"
        },
        sm: {
          $ref: "#/$defs/partial-cols-number"
        },
        md: {
          $ref: "#/$defs/partial-cols-number"
        },
        lg: {
          $ref: "#/$defs/partial-cols-number"
        },
        xl: {
          $ref: "#/$defs/partial-cols-number"
        },
        xxl: {
          $ref: "#/$defs/partial-cols-number"
        }
      }
    },
    "partial-cols-number": {
      type: "integer",
      minimum: 0,
      maximum: 12
    },
    "partial-slot": {
      oneOf: [
        {
          type: "string"
        },
        {
          $ref: "#/$defs/partial-slot-text"
        },
        {
          $ref: "#/$defs/partial-slot-markdown"
        },
        {
          $ref: "#/$defs/partial-slot-name"
        }
      ]
    },
    "partial-slot-text": {
      type: "object",
      additionalProperties: !1,
      required: [
        "text"
      ],
      properties: {
        text: {
          type: "string"
        }
      }
    },
    "partial-slot-markdown": {
      type: "object",
      additionalProperties: !1,
      required: [
        "markdown"
      ],
      properties: {
        markdown: {
          type: "string"
        }
      }
    },
    "partial-slot-name": {
      type: "object",
      additionalProperties: !1,
      required: [
        "name"
      ],
      properties: {
        name: {
          type: "string"
        },
        props: {
          type: "object"
        }
      }
    }
  }
};
var Bl = { exports: {} }, Ko = {}, ra = {}, mr = {}, Vr = {}, Ie = {}, vr = {};
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.regexpCode = e.getEsmExportName = e.getProperty = e.safeStringify = e.stringify = e.strConcat = e.addCodeArg = e.str = e._ = e.nil = e._Code = e.Name = e.IDENTIFIER = e._CodeOrName = void 0;
  class t {
  }
  e._CodeOrName = t, e.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;
  class a extends t {
    constructor(g) {
      if (super(), !e.IDENTIFIER.test(g))
        throw new Error("CodeGen: name must be a valid identifier");
      this.str = g;
    }
    toString() {
      return this.str;
    }
    emptyStr() {
      return !1;
    }
    get names() {
      return { [this.str]: 1 };
    }
  }
  e.Name = a;
  class r extends t {
    constructor(g) {
      super(), this._items = typeof g == "string" ? [g] : g;
    }
    toString() {
      return this.str;
    }
    emptyStr() {
      if (this._items.length > 1)
        return !1;
      const g = this._items[0];
      return g === "" || g === '""';
    }
    get str() {
      var g;
      return (g = this._str) !== null && g !== void 0 ? g : this._str = this._items.reduce((P, S) => `${P}${S}`, "");
    }
    get names() {
      var g;
      return (g = this._names) !== null && g !== void 0 ? g : this._names = this._items.reduce((P, S) => (S instanceof a && (P[S.str] = (P[S.str] || 0) + 1), P), {});
    }
  }
  e._Code = r, e.nil = new r("");
  function i(f, ...g) {
    const P = [f[0]];
    let S = 0;
    for (; S < g.length; )
      o(P, g[S]), P.push(f[++S]);
    return new r(P);
  }
  e._ = i;
  const n = new r("+");
  function s(f, ...g) {
    const P = [v(f[0])];
    let S = 0;
    for (; S < g.length; )
      P.push(n), o(P, g[S]), P.push(n, v(f[++S]));
    return l(P), new r(P);
  }
  e.str = s;
  function o(f, g) {
    g instanceof r ? f.push(...g._items) : g instanceof a ? f.push(g) : f.push(d(g));
  }
  e.addCodeArg = o;
  function l(f) {
    let g = 1;
    for (; g < f.length - 1; ) {
      if (f[g] === n) {
        const P = u(f[g - 1], f[g + 1]);
        if (P !== void 0) {
          f.splice(g - 1, 3, P);
          continue;
        }
        f[g++] = "+";
      }
      g++;
    }
  }
  function u(f, g) {
    if (g === '""')
      return f;
    if (f === '""')
      return g;
    if (typeof f == "string")
      return g instanceof a || f[f.length - 1] !== '"' ? void 0 : typeof g != "string" ? `${f.slice(0, -1)}${g}"` : g[0] === '"' ? f.slice(0, -1) + g.slice(1) : void 0;
    if (typeof g == "string" && g[0] === '"' && !(f instanceof a))
      return `"${f}${g.slice(1)}`;
  }
  function c(f, g) {
    return g.emptyStr() ? f : f.emptyStr() ? g : s`${f}${g}`;
  }
  e.strConcat = c;
  function d(f) {
    return typeof f == "number" || typeof f == "boolean" || f === null ? f : v(Array.isArray(f) ? f.join(",") : f);
  }
  function m(f) {
    return new r(v(f));
  }
  e.stringify = m;
  function v(f) {
    return JSON.stringify(f).replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029");
  }
  e.safeStringify = v;
  function p(f) {
    return typeof f == "string" && e.IDENTIFIER.test(f) ? new r(`.${f}`) : i`[${f}]`;
  }
  e.getProperty = p;
  function h(f) {
    if (typeof f == "string" && e.IDENTIFIER.test(f))
      return new r(`${f}`);
    throw new Error(`CodeGen: invalid export name: ${f}, use explicit $id name mapping`);
  }
  e.getEsmExportName = h;
  function y(f) {
    return new r(f.toString());
  }
  e.regexpCode = y;
})(vr);
var Fl = {};
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.ValueScope = e.ValueScopeName = e.Scope = e.varKinds = e.UsedValueState = void 0;
  const t = vr;
  class a extends Error {
    constructor(u) {
      super(`CodeGen: "code" for ${u} not defined`), this.value = u.value;
    }
  }
  var r;
  (function(l) {
    l[l.Started = 0] = "Started", l[l.Completed = 1] = "Completed";
  })(r || (e.UsedValueState = r = {})), e.varKinds = {
    const: new t.Name("const"),
    let: new t.Name("let"),
    var: new t.Name("var")
  };
  class i {
    constructor({ prefixes: u, parent: c } = {}) {
      this._names = {}, this._prefixes = u, this._parent = c;
    }
    toName(u) {
      return u instanceof t.Name ? u : this.name(u);
    }
    name(u) {
      return new t.Name(this._newName(u));
    }
    _newName(u) {
      const c = this._names[u] || this._nameGroup(u);
      return `${u}${c.index++}`;
    }
    _nameGroup(u) {
      var c, d;
      if (!((d = (c = this._parent) === null || c === void 0 ? void 0 : c._prefixes) === null || d === void 0) && d.has(u) || this._prefixes && !this._prefixes.has(u))
        throw new Error(`CodeGen: prefix "${u}" is not allowed in this scope`);
      return this._names[u] = { prefix: u, index: 0 };
    }
  }
  e.Scope = i;
  class n extends t.Name {
    constructor(u, c) {
      super(c), this.prefix = u;
    }
    setValue(u, { property: c, itemIndex: d }) {
      this.value = u, this.scopePath = (0, t._)`.${new t.Name(c)}[${d}]`;
    }
  }
  e.ValueScopeName = n;
  const s = (0, t._)`\n`;
  class o extends i {
    constructor(u) {
      super(u), this._values = {}, this._scope = u.scope, this.opts = { ...u, _n: u.lines ? s : t.nil };
    }
    get() {
      return this._scope;
    }
    name(u) {
      return new n(u, this._newName(u));
    }
    value(u, c) {
      var d;
      if (c.ref === void 0)
        throw new Error("CodeGen: ref must be passed in value");
      const m = this.toName(u), { prefix: v } = m, p = (d = c.key) !== null && d !== void 0 ? d : c.ref;
      let h = this._values[v];
      if (h) {
        const g = h.get(p);
        if (g)
          return g;
      } else
        h = this._values[v] = /* @__PURE__ */ new Map();
      h.set(p, m);
      const y = this._scope[v] || (this._scope[v] = []), f = y.length;
      return y[f] = c.ref, m.setValue(c, { property: v, itemIndex: f }), m;
    }
    getValue(u, c) {
      const d = this._values[u];
      if (d)
        return d.get(c);
    }
    scopeRefs(u, c = this._values) {
      return this._reduceValues(c, (d) => {
        if (d.scopePath === void 0)
          throw new Error(`CodeGen: name "${d}" has no value`);
        return (0, t._)`${u}${d.scopePath}`;
      });
    }
    scopeCode(u = this._values, c, d) {
      return this._reduceValues(u, (m) => {
        if (m.value === void 0)
          throw new Error(`CodeGen: name "${m}" has no value`);
        return m.value.code;
      }, c, d);
    }
    _reduceValues(u, c, d = {}, m) {
      let v = t.nil;
      for (const p in u) {
        const h = u[p];
        if (!h)
          continue;
        const y = d[p] = d[p] || /* @__PURE__ */ new Map();
        h.forEach((f) => {
          if (y.has(f))
            return;
          y.set(f, r.Started);
          let g = c(f);
          if (g) {
            const P = this.opts.es5 ? e.varKinds.var : e.varKinds.const;
            v = (0, t._)`${v}${P} ${f} = ${g};${this.opts._n}`;
          } else if (g = m == null ? void 0 : m(f))
            v = (0, t._)`${v}${g}${this.opts._n}`;
          else
            throw new a(f);
          y.set(f, r.Completed);
        });
      }
      return v;
    }
  }
  e.ValueScope = o;
})(Fl);
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.or = e.and = e.not = e.CodeGen = e.operators = e.varKinds = e.ValueScopeName = e.ValueScope = e.Scope = e.Name = e.regexpCode = e.stringify = e.getProperty = e.nil = e.strConcat = e.str = e._ = void 0;
  const t = vr, a = Fl;
  var r = vr;
  Object.defineProperty(e, "_", { enumerable: !0, get: function() {
    return r._;
  } }), Object.defineProperty(e, "str", { enumerable: !0, get: function() {
    return r.str;
  } }), Object.defineProperty(e, "strConcat", { enumerable: !0, get: function() {
    return r.strConcat;
  } }), Object.defineProperty(e, "nil", { enumerable: !0, get: function() {
    return r.nil;
  } }), Object.defineProperty(e, "getProperty", { enumerable: !0, get: function() {
    return r.getProperty;
  } }), Object.defineProperty(e, "stringify", { enumerable: !0, get: function() {
    return r.stringify;
  } }), Object.defineProperty(e, "regexpCode", { enumerable: !0, get: function() {
    return r.regexpCode;
  } }), Object.defineProperty(e, "Name", { enumerable: !0, get: function() {
    return r.Name;
  } });
  var i = Fl;
  Object.defineProperty(e, "Scope", { enumerable: !0, get: function() {
    return i.Scope;
  } }), Object.defineProperty(e, "ValueScope", { enumerable: !0, get: function() {
    return i.ValueScope;
  } }), Object.defineProperty(e, "ValueScopeName", { enumerable: !0, get: function() {
    return i.ValueScopeName;
  } }), Object.defineProperty(e, "varKinds", { enumerable: !0, get: function() {
    return i.varKinds;
  } }), e.operators = {
    GT: new t._Code(">"),
    GTE: new t._Code(">="),
    LT: new t._Code("<"),
    LTE: new t._Code("<="),
    EQ: new t._Code("==="),
    NEQ: new t._Code("!=="),
    NOT: new t._Code("!"),
    OR: new t._Code("||"),
    AND: new t._Code("&&"),
    ADD: new t._Code("+")
  };
  class n {
    optimizeNodes() {
      return this;
    }
    optimizeNames(b, I) {
      return this;
    }
  }
  class s extends n {
    constructor(b, I, k) {
      super(), this.varKind = b, this.name = I, this.rhs = k;
    }
    render({ es5: b, _n: I }) {
      const k = b ? a.varKinds.var : this.varKind, E = this.rhs === void 0 ? "" : ` = ${this.rhs}`;
      return `${k} ${this.name}${E};` + I;
    }
    optimizeNames(b, I) {
      if (b[this.name.str])
        return this.rhs && (this.rhs = N(this.rhs, b, I)), this;
    }
    get names() {
      return this.rhs instanceof t._CodeOrName ? this.rhs.names : {};
    }
  }
  class o extends n {
    constructor(b, I, k) {
      super(), this.lhs = b, this.rhs = I, this.sideEffects = k;
    }
    render({ _n: b }) {
      return `${this.lhs} = ${this.rhs};` + b;
    }
    optimizeNames(b, I) {
      if (!(this.lhs instanceof t.Name && !b[this.lhs.str] && !this.sideEffects))
        return this.rhs = N(this.rhs, b, I), this;
    }
    get names() {
      const b = this.lhs instanceof t.Name ? {} : { ...this.lhs.names };
      return B(b, this.rhs);
    }
  }
  class l extends o {
    constructor(b, I, k, E) {
      super(b, k, E), this.op = I;
    }
    render({ _n: b }) {
      return `${this.lhs} ${this.op}= ${this.rhs};` + b;
    }
  }
  class u extends n {
    constructor(b) {
      super(), this.label = b, this.names = {};
    }
    render({ _n: b }) {
      return `${this.label}:` + b;
    }
  }
  class c extends n {
    constructor(b) {
      super(), this.label = b, this.names = {};
    }
    render({ _n: b }) {
      return `break${this.label ? ` ${this.label}` : ""};` + b;
    }
  }
  class d extends n {
    constructor(b) {
      super(), this.error = b;
    }
    render({ _n: b }) {
      return `throw ${this.error};` + b;
    }
    get names() {
      return this.error.names;
    }
  }
  class m extends n {
    constructor(b) {
      super(), this.code = b;
    }
    render({ _n: b }) {
      return `${this.code};` + b;
    }
    optimizeNodes() {
      return `${this.code}` ? this : void 0;
    }
    optimizeNames(b, I) {
      return this.code = N(this.code, b, I), this;
    }
    get names() {
      return this.code instanceof t._CodeOrName ? this.code.names : {};
    }
  }
  class v extends n {
    constructor(b = []) {
      super(), this.nodes = b;
    }
    render(b) {
      return this.nodes.reduce((I, k) => I + k.render(b), "");
    }
    optimizeNodes() {
      const { nodes: b } = this;
      let I = b.length;
      for (; I--; ) {
        const k = b[I].optimizeNodes();
        Array.isArray(k) ? b.splice(I, 1, ...k) : k ? b[I] = k : b.splice(I, 1);
      }
      return b.length > 0 ? this : void 0;
    }
    optimizeNames(b, I) {
      const { nodes: k } = this;
      let E = k.length;
      for (; E--; ) {
        const M = k[E];
        M.optimizeNames(b, I) || (z(b, M.names), k.splice(E, 1));
      }
      return k.length > 0 ? this : void 0;
    }
    get names() {
      return this.nodes.reduce((b, I) => O(b, I.names), {});
    }
  }
  class p extends v {
    render(b) {
      return "{" + b._n + super.render(b) + "}" + b._n;
    }
  }
  class h extends v {
  }
  class y extends p {
  }
  y.kind = "else";
  class f extends p {
    constructor(b, I) {
      super(I), this.condition = b;
    }
    render(b) {
      let I = `if(${this.condition})` + super.render(b);
      return this.else && (I += "else " + this.else.render(b)), I;
    }
    optimizeNodes() {
      super.optimizeNodes();
      const b = this.condition;
      if (b === !0)
        return this.nodes;
      let I = this.else;
      if (I) {
        const k = I.optimizeNodes();
        I = this.else = Array.isArray(k) ? new y(k) : k;
      }
      if (I)
        return b === !1 ? I instanceof f ? I : I.nodes : this.nodes.length ? this : new f(J(b), I instanceof f ? [I] : I.nodes);
      if (!(b === !1 || !this.nodes.length))
        return this;
    }
    optimizeNames(b, I) {
      var k;
      if (this.else = (k = this.else) === null || k === void 0 ? void 0 : k.optimizeNames(b, I), !!(super.optimizeNames(b, I) || this.else))
        return this.condition = N(this.condition, b, I), this;
    }
    get names() {
      const b = super.names;
      return B(b, this.condition), this.else && O(b, this.else.names), b;
    }
  }
  f.kind = "if";
  class g extends p {
  }
  g.kind = "for";
  class P extends g {
    constructor(b) {
      super(), this.iteration = b;
    }
    render(b) {
      return `for(${this.iteration})` + super.render(b);
    }
    optimizeNames(b, I) {
      if (super.optimizeNames(b, I))
        return this.iteration = N(this.iteration, b, I), this;
    }
    get names() {
      return O(super.names, this.iteration.names);
    }
  }
  class S extends g {
    constructor(b, I, k, E) {
      super(), this.varKind = b, this.name = I, this.from = k, this.to = E;
    }
    render(b) {
      const I = b.es5 ? a.varKinds.var : this.varKind, { name: k, from: E, to: M } = this;
      return `for(${I} ${k}=${E}; ${k}<${M}; ${k}++)` + super.render(b);
    }
    get names() {
      const b = B(super.names, this.from);
      return B(b, this.to);
    }
  }
  class _ extends g {
    constructor(b, I, k, E) {
      super(), this.loop = b, this.varKind = I, this.name = k, this.iterable = E;
    }
    render(b) {
      return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(b);
    }
    optimizeNames(b, I) {
      if (super.optimizeNames(b, I))
        return this.iterable = N(this.iterable, b, I), this;
    }
    get names() {
      return O(super.names, this.iterable.names);
    }
  }
  class j extends p {
    constructor(b, I, k) {
      super(), this.name = b, this.args = I, this.async = k;
    }
    render(b) {
      return `${this.async ? "async " : ""}function ${this.name}(${this.args})` + super.render(b);
    }
  }
  j.kind = "func";
  class F extends v {
    render(b) {
      return "return " + super.render(b);
    }
  }
  F.kind = "return";
  class R extends p {
    render(b) {
      let I = "try" + super.render(b);
      return this.catch && (I += this.catch.render(b)), this.finally && (I += this.finally.render(b)), I;
    }
    optimizeNodes() {
      var b, I;
      return super.optimizeNodes(), (b = this.catch) === null || b === void 0 || b.optimizeNodes(), (I = this.finally) === null || I === void 0 || I.optimizeNodes(), this;
    }
    optimizeNames(b, I) {
      var k, E;
      return super.optimizeNames(b, I), (k = this.catch) === null || k === void 0 || k.optimizeNames(b, I), (E = this.finally) === null || E === void 0 || E.optimizeNames(b, I), this;
    }
    get names() {
      const b = super.names;
      return this.catch && O(b, this.catch.names), this.finally && O(b, this.finally.names), b;
    }
  }
  class U extends p {
    constructor(b) {
      super(), this.error = b;
    }
    render(b) {
      return `catch(${this.error})` + super.render(b);
    }
  }
  U.kind = "catch";
  class W extends p {
    render(b) {
      return "finally" + super.render(b);
    }
  }
  W.kind = "finally";
  class D {
    constructor(b, I = {}) {
      this._values = {}, this._blockStarts = [], this._constants = {}, this.opts = { ...I, _n: I.lines ? `
` : "" }, this._extScope = b, this._scope = new a.Scope({ parent: b }), this._nodes = [new h()];
    }
    toString() {
      return this._root.render(this.opts);
    }
    // returns unique name in the internal scope
    name(b) {
      return this._scope.name(b);
    }
    // reserves unique name in the external scope
    scopeName(b) {
      return this._extScope.name(b);
    }
    // reserves unique name in the external scope and assigns value to it
    scopeValue(b, I) {
      const k = this._extScope.value(b, I);
      return (this._values[k.prefix] || (this._values[k.prefix] = /* @__PURE__ */ new Set())).add(k), k;
    }
    getScopeValue(b, I) {
      return this._extScope.getValue(b, I);
    }
    // return code that assigns values in the external scope to the names that are used internally
    // (same names that were returned by gen.scopeName or gen.scopeValue)
    scopeRefs(b) {
      return this._extScope.scopeRefs(b, this._values);
    }
    scopeCode() {
      return this._extScope.scopeCode(this._values);
    }
    _def(b, I, k, E) {
      const M = this._scope.toName(I);
      return k !== void 0 && E && (this._constants[M.str] = k), this._leafNode(new s(b, M, k)), M;
    }
    // `const` declaration (`var` in es5 mode)
    const(b, I, k) {
      return this._def(a.varKinds.const, b, I, k);
    }
    // `let` declaration with optional assignment (`var` in es5 mode)
    let(b, I, k) {
      return this._def(a.varKinds.let, b, I, k);
    }
    // `var` declaration with optional assignment
    var(b, I, k) {
      return this._def(a.varKinds.var, b, I, k);
    }
    // assignment code
    assign(b, I, k) {
      return this._leafNode(new o(b, I, k));
    }
    // `+=` code
    add(b, I) {
      return this._leafNode(new l(b, e.operators.ADD, I));
    }
    // appends passed SafeExpr to code or executes Block
    code(b) {
      return typeof b == "function" ? b() : b !== t.nil && this._leafNode(new m(b)), this;
    }
    // returns code for object literal for the passed argument list of key-value pairs
    object(...b) {
      const I = ["{"];
      for (const [k, E] of b)
        I.length > 1 && I.push(","), I.push(k), (k !== E || this.opts.es5) && (I.push(":"), (0, t.addCodeArg)(I, E));
      return I.push("}"), new t._Code(I);
    }
    // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)
    if(b, I, k) {
      if (this._blockNode(new f(b)), I && k)
        this.code(I).else().code(k).endIf();
      else if (I)
        this.code(I).endIf();
      else if (k)
        throw new Error('CodeGen: "else" body without "then" body');
      return this;
    }
    // `else if` clause - invalid without `if` or after `else` clauses
    elseIf(b) {
      return this._elseNode(new f(b));
    }
    // `else` clause - only valid after `if` or `else if` clauses
    else() {
      return this._elseNode(new y());
    }
    // end `if` statement (needed if gen.if was used only with condition)
    endIf() {
      return this._endBlockNode(f, y);
    }
    _for(b, I) {
      return this._blockNode(b), I && this.code(I).endFor(), this;
    }
    // a generic `for` clause (or statement if `forBody` is passed)
    for(b, I) {
      return this._for(new P(b), I);
    }
    // `for` statement for a range of values
    forRange(b, I, k, E, M = this.opts.es5 ? a.varKinds.var : a.varKinds.let) {
      const K = this._scope.toName(b);
      return this._for(new S(M, K, I, k), () => E(K));
    }
    // `for-of` statement (in es5 mode replace with a normal for loop)
    forOf(b, I, k, E = a.varKinds.const) {
      const M = this._scope.toName(b);
      if (this.opts.es5) {
        const K = I instanceof t.Name ? I : this.var("_arr", I);
        return this.forRange("_i", 0, (0, t._)`${K}.length`, (Y) => {
          this.var(M, (0, t._)`${K}[${Y}]`), k(M);
        });
      }
      return this._for(new _("of", E, M, I), () => k(M));
    }
    // `for-in` statement.
    // With option `ownProperties` replaced with a `for-of` loop for object keys
    forIn(b, I, k, E = this.opts.es5 ? a.varKinds.var : a.varKinds.const) {
      if (this.opts.ownProperties)
        return this.forOf(b, (0, t._)`Object.keys(${I})`, k);
      const M = this._scope.toName(b);
      return this._for(new _("in", E, M, I), () => k(M));
    }
    // end `for` loop
    endFor() {
      return this._endBlockNode(g);
    }
    // `label` statement
    label(b) {
      return this._leafNode(new u(b));
    }
    // `break` statement
    break(b) {
      return this._leafNode(new c(b));
    }
    // `return` statement
    return(b) {
      const I = new F();
      if (this._blockNode(I), this.code(b), I.nodes.length !== 1)
        throw new Error('CodeGen: "return" should have one node');
      return this._endBlockNode(F);
    }
    // `try` statement
    try(b, I, k) {
      if (!I && !k)
        throw new Error('CodeGen: "try" without "catch" and "finally"');
      const E = new R();
      if (this._blockNode(E), this.code(b), I) {
        const M = this.name("e");
        this._currNode = E.catch = new U(M), I(M);
      }
      return k && (this._currNode = E.finally = new W(), this.code(k)), this._endBlockNode(U, W);
    }
    // `throw` statement
    throw(b) {
      return this._leafNode(new d(b));
    }
    // start self-balancing block
    block(b, I) {
      return this._blockStarts.push(this._nodes.length), b && this.code(b).endBlock(I), this;
    }
    // end the current self-balancing block
    endBlock(b) {
      const I = this._blockStarts.pop();
      if (I === void 0)
        throw new Error("CodeGen: not in self-balancing block");
      const k = this._nodes.length - I;
      if (k < 0 || b !== void 0 && k !== b)
        throw new Error(`CodeGen: wrong number of nodes: ${k} vs ${b} expected`);
      return this._nodes.length = I, this;
    }
    // `function` heading (or definition if funcBody is passed)
    func(b, I = t.nil, k, E) {
      return this._blockNode(new j(b, I, k)), E && this.code(E).endFunc(), this;
    }
    // end function definition
    endFunc() {
      return this._endBlockNode(j);
    }
    optimize(b = 1) {
      for (; b-- > 0; )
        this._root.optimizeNodes(), this._root.optimizeNames(this._root.names, this._constants);
    }
    _leafNode(b) {
      return this._currNode.nodes.push(b), this;
    }
    _blockNode(b) {
      this._currNode.nodes.push(b), this._nodes.push(b);
    }
    _endBlockNode(b, I) {
      const k = this._currNode;
      if (k instanceof b || I && k instanceof I)
        return this._nodes.pop(), this;
      throw new Error(`CodeGen: not in block "${I ? `${b.kind}/${I.kind}` : b.kind}"`);
    }
    _elseNode(b) {
      const I = this._currNode;
      if (!(I instanceof f))
        throw new Error('CodeGen: "else" without "if"');
      return this._currNode = I.else = b, this;
    }
    get _root() {
      return this._nodes[0];
    }
    get _currNode() {
      const b = this._nodes;
      return b[b.length - 1];
    }
    set _currNode(b) {
      const I = this._nodes;
      I[I.length - 1] = b;
    }
  }
  e.CodeGen = D;
  function O($, b) {
    for (const I in b)
      $[I] = ($[I] || 0) + (b[I] || 0);
    return $;
  }
  function B($, b) {
    return b instanceof t._CodeOrName ? O($, b.names) : $;
  }
  function N($, b, I) {
    if ($ instanceof t.Name)
      return k($);
    if (!E($))
      return $;
    return new t._Code($._items.reduce((M, K) => (K instanceof t.Name && (K = k(K)), K instanceof t._Code ? M.push(...K._items) : M.push(K), M), []));
    function k(M) {
      const K = I[M.str];
      return K === void 0 || b[M.str] !== 1 ? M : (delete b[M.str], K);
    }
    function E(M) {
      return M instanceof t._Code && M._items.some((K) => K instanceof t.Name && b[K.str] === 1 && I[K.str] !== void 0);
    }
  }
  function z($, b) {
    for (const I in b)
      $[I] = ($[I] || 0) - (b[I] || 0);
  }
  function J($) {
    return typeof $ == "boolean" || typeof $ == "number" || $ === null ? !$ : (0, t._)`!${V($)}`;
  }
  e.not = J;
  const ae = x(e.operators.AND);
  function X(...$) {
    return $.reduce(ae);
  }
  e.and = X;
  const L = x(e.operators.OR);
  function A(...$) {
    return $.reduce(L);
  }
  e.or = A;
  function x($) {
    return (b, I) => b === t.nil ? I : I === t.nil ? b : (0, t._)`${V(b)} ${$} ${V(I)}`;
  }
  function V($) {
    return $ instanceof t.Name ? $ : (0, t._)`(${$})`;
  }
})(Ie);
var he = {};
Object.defineProperty(he, "__esModule", { value: !0 });
he.checkStrictMode = he.getErrorPath = he.Type = he.useFunc = he.setEvaluated = he.evaluatedPropsToName = he.mergeEvaluated = he.eachItem = he.unescapeJsonPointer = he.escapeJsonPointer = he.escapeFragment = he.unescapeFragment = he.schemaRefOrVal = he.schemaHasRulesButRef = he.schemaHasRules = he.checkUnknownRules = he.alwaysValidSchema = he.toHash = void 0;
const Ze = Ie, lg = vr;
function og(e) {
  const t = {};
  for (const a of e)
    t[a] = !0;
  return t;
}
he.toHash = og;
function ug(e, t) {
  return typeof t == "boolean" ? t : Object.keys(t).length === 0 ? !0 : (hm(e, t), !ym(t, e.self.RULES.all));
}
he.alwaysValidSchema = ug;
function hm(e, t = e.schema) {
  const { opts: a, self: r } = e;
  if (!a.strictSchema || typeof t == "boolean")
    return;
  const i = r.RULES.keywords;
  for (const n in t)
    i[n] || km(e, `unknown keyword: "${n}"`);
}
he.checkUnknownRules = hm;
function ym(e, t) {
  if (typeof e == "boolean")
    return !e;
  for (const a in e)
    if (t[a])
      return !0;
  return !1;
}
he.schemaHasRules = ym;
function cg(e, t) {
  if (typeof e == "boolean")
    return !e;
  for (const a in e)
    if (a !== "$ref" && t.all[a])
      return !0;
  return !1;
}
he.schemaHasRulesButRef = cg;
function dg({ topSchemaRef: e, schemaPath: t }, a, r, i) {
  if (!i) {
    if (typeof a == "number" || typeof a == "boolean")
      return a;
    if (typeof a == "string")
      return (0, Ze._)`${a}`;
  }
  return (0, Ze._)`${e}${t}${(0, Ze.getProperty)(r)}`;
}
he.schemaRefOrVal = dg;
function fg(e) {
  return gm(decodeURIComponent(e));
}
he.unescapeFragment = fg;
function mg(e) {
  return encodeURIComponent(Ho(e));
}
he.escapeFragment = mg;
function Ho(e) {
  return typeof e == "number" ? `${e}` : e.replace(/~/g, "~0").replace(/\//g, "~1");
}
he.escapeJsonPointer = Ho;
function gm(e) {
  return e.replace(/~1/g, "/").replace(/~0/g, "~");
}
he.unescapeJsonPointer = gm;
function vg(e, t) {
  if (Array.isArray(e))
    for (const a of e)
      t(a);
  else
    t(e);
}
he.eachItem = vg;
function ed({ mergeNames: e, mergeToName: t, mergeValues: a, resultToName: r }) {
  return (i, n, s, o) => {
    const l = s === void 0 ? n : s instanceof Ze.Name ? (n instanceof Ze.Name ? e(i, n, s) : t(i, n, s), s) : n instanceof Ze.Name ? (t(i, s, n), n) : a(n, s);
    return o === Ze.Name && !(l instanceof Ze.Name) ? r(i, l) : l;
  };
}
he.mergeEvaluated = {
  props: ed({
    mergeNames: (e, t, a) => e.if((0, Ze._)`${a} !== true && ${t} !== undefined`, () => {
      e.if((0, Ze._)`${t} === true`, () => e.assign(a, !0), () => e.assign(a, (0, Ze._)`${a} || {}`).code((0, Ze._)`Object.assign(${a}, ${t})`));
    }),
    mergeToName: (e, t, a) => e.if((0, Ze._)`${a} !== true`, () => {
      t === !0 ? e.assign(a, !0) : (e.assign(a, (0, Ze._)`${a} || {}`), Uo(e, a, t));
    }),
    mergeValues: (e, t) => e === !0 ? !0 : { ...e, ...t },
    resultToName: bm
  }),
  items: ed({
    mergeNames: (e, t, a) => e.if((0, Ze._)`${a} !== true && ${t} !== undefined`, () => e.assign(a, (0, Ze._)`${t} === true ? true : ${a} > ${t} ? ${a} : ${t}`)),
    mergeToName: (e, t, a) => e.if((0, Ze._)`${a} !== true`, () => e.assign(a, t === !0 ? !0 : (0, Ze._)`${a} > ${t} ? ${a} : ${t}`)),
    mergeValues: (e, t) => e === !0 ? !0 : Math.max(e, t),
    resultToName: (e, t) => e.var("items", t)
  })
};
function bm(e, t) {
  if (t === !0)
    return e.var("props", !0);
  const a = e.var("props", (0, Ze._)`{}`);
  return t !== void 0 && Uo(e, a, t), a;
}
he.evaluatedPropsToName = bm;
function Uo(e, t, a) {
  Object.keys(a).forEach((r) => e.assign((0, Ze._)`${t}${(0, Ze.getProperty)(r)}`, !0));
}
he.setEvaluated = Uo;
const td = {};
function pg(e, t) {
  return e.scopeValue("func", {
    ref: t,
    code: td[t.code] || (td[t.code] = new lg._Code(t.code))
  });
}
he.useFunc = pg;
var ql;
(function(e) {
  e[e.Num = 0] = "Num", e[e.Str = 1] = "Str";
})(ql || (he.Type = ql = {}));
function hg(e, t, a) {
  if (e instanceof Ze.Name) {
    const r = t === ql.Num;
    return a ? r ? (0, Ze._)`"[" + ${e} + "]"` : (0, Ze._)`"['" + ${e} + "']"` : r ? (0, Ze._)`"/" + ${e}` : (0, Ze._)`"/" + ${e}.replace(/~/g, "~0").replace(/\\//g, "~1")`;
  }
  return a ? (0, Ze.getProperty)(e).toString() : "/" + Ho(e);
}
he.getErrorPath = hg;
function km(e, t, a = e.opts.strictSchema) {
  if (a) {
    if (t = `strict mode: ${t}`, a === !0)
      throw new Error(t);
    e.self.logger.warn(t);
  }
}
he.checkStrictMode = km;
var Qt = {};
Object.defineProperty(Qt, "__esModule", { value: !0 });
const Ot = Ie, yg = {
  // validation function arguments
  data: new Ot.Name("data"),
  // data passed to validation function
  // args passed from referencing schema
  valCxt: new Ot.Name("valCxt"),
  // validation/data context - should not be used directly, it is destructured to the names below
  instancePath: new Ot.Name("instancePath"),
  parentData: new Ot.Name("parentData"),
  parentDataProperty: new Ot.Name("parentDataProperty"),
  rootData: new Ot.Name("rootData"),
  // root data - same as the data passed to the first/top validation function
  dynamicAnchors: new Ot.Name("dynamicAnchors"),
  // used to support recursiveRef and dynamicRef
  // function scoped variables
  vErrors: new Ot.Name("vErrors"),
  // null or array of validation errors
  errors: new Ot.Name("errors"),
  // counter of validation errors
  this: new Ot.Name("this"),
  // "globals"
  self: new Ot.Name("self"),
  scope: new Ot.Name("scope"),
  // JTD serialize/parse name for JSON string and position
  json: new Ot.Name("json"),
  jsonPos: new Ot.Name("jsonPos"),
  jsonLen: new Ot.Name("jsonLen"),
  jsonPart: new Ot.Name("jsonPart")
};
Qt.default = yg;
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.extendErrors = e.resetErrorsCount = e.reportExtraError = e.reportError = e.keyword$DataError = e.keywordError = void 0;
  const t = Ie, a = he, r = Qt;
  e.keywordError = {
    message: ({ keyword: y }) => (0, t.str)`must pass "${y}" keyword validation`
  }, e.keyword$DataError = {
    message: ({ keyword: y, schemaType: f }) => f ? (0, t.str)`"${y}" keyword must be ${f} ($data)` : (0, t.str)`"${y}" keyword is invalid ($data)`
  };
  function i(y, f = e.keywordError, g, P) {
    const { it: S } = y, { gen: _, compositeRule: j, allErrors: F } = S, R = d(y, f, g);
    P ?? (j || F) ? l(_, R) : u(S, (0, t._)`[${R}]`);
  }
  e.reportError = i;
  function n(y, f = e.keywordError, g) {
    const { it: P } = y, { gen: S, compositeRule: _, allErrors: j } = P, F = d(y, f, g);
    l(S, F), _ || j || u(P, r.default.vErrors);
  }
  e.reportExtraError = n;
  function s(y, f) {
    y.assign(r.default.errors, f), y.if((0, t._)`${r.default.vErrors} !== null`, () => y.if(f, () => y.assign((0, t._)`${r.default.vErrors}.length`, f), () => y.assign(r.default.vErrors, null)));
  }
  e.resetErrorsCount = s;
  function o({ gen: y, keyword: f, schemaValue: g, data: P, errsCount: S, it: _ }) {
    if (S === void 0)
      throw new Error("ajv implementation error");
    const j = y.name("err");
    y.forRange("i", S, r.default.errors, (F) => {
      y.const(j, (0, t._)`${r.default.vErrors}[${F}]`), y.if((0, t._)`${j}.instancePath === undefined`, () => y.assign((0, t._)`${j}.instancePath`, (0, t.strConcat)(r.default.instancePath, _.errorPath))), y.assign((0, t._)`${j}.schemaPath`, (0, t.str)`${_.errSchemaPath}/${f}`), _.opts.verbose && (y.assign((0, t._)`${j}.schema`, g), y.assign((0, t._)`${j}.data`, P));
    });
  }
  e.extendErrors = o;
  function l(y, f) {
    const g = y.const("err", f);
    y.if((0, t._)`${r.default.vErrors} === null`, () => y.assign(r.default.vErrors, (0, t._)`[${g}]`), (0, t._)`${r.default.vErrors}.push(${g})`), y.code((0, t._)`${r.default.errors}++`);
  }
  function u(y, f) {
    const { gen: g, validateName: P, schemaEnv: S } = y;
    S.$async ? g.throw((0, t._)`new ${y.ValidationError}(${f})`) : (g.assign((0, t._)`${P}.errors`, f), g.return(!1));
  }
  const c = {
    keyword: new t.Name("keyword"),
    schemaPath: new t.Name("schemaPath"),
    // also used in JTD errors
    params: new t.Name("params"),
    propertyName: new t.Name("propertyName"),
    message: new t.Name("message"),
    schema: new t.Name("schema"),
    parentSchema: new t.Name("parentSchema")
  };
  function d(y, f, g) {
    const { createErrors: P } = y.it;
    return P === !1 ? (0, t._)`{}` : m(y, f, g);
  }
  function m(y, f, g = {}) {
    const { gen: P, it: S } = y, _ = [
      v(S, g),
      p(y, g)
    ];
    return h(y, f, _), P.object(..._);
  }
  function v({ errorPath: y }, { instancePath: f }) {
    const g = f ? (0, t.str)`${y}${(0, a.getErrorPath)(f, a.Type.Str)}` : y;
    return [r.default.instancePath, (0, t.strConcat)(r.default.instancePath, g)];
  }
  function p({ keyword: y, it: { errSchemaPath: f } }, { schemaPath: g, parentSchema: P }) {
    let S = P ? f : (0, t.str)`${f}/${y}`;
    return g && (S = (0, t.str)`${S}${(0, a.getErrorPath)(g, a.Type.Str)}`), [c.schemaPath, S];
  }
  function h(y, { params: f, message: g }, P) {
    const { keyword: S, data: _, schemaValue: j, it: F } = y, { opts: R, propertyName: U, topSchemaRef: W, schemaPath: D } = F;
    P.push([c.keyword, S], [c.params, typeof f == "function" ? f(y) : f || (0, t._)`{}`]), R.messages && P.push([c.message, typeof g == "function" ? g(y) : g]), R.verbose && P.push([c.schema, j], [c.parentSchema, (0, t._)`${W}${D}`], [r.default.data, _]), U && P.push([c.propertyName, U]);
  }
})(Vr);
Object.defineProperty(mr, "__esModule", { value: !0 });
mr.boolOrEmptySchema = mr.topBoolOrEmptySchema = void 0;
const gg = Vr, bg = Ie, kg = Qt, wg = {
  message: "boolean schema is false"
};
function $g(e) {
  const { gen: t, schema: a, validateName: r } = e;
  a === !1 ? wm(e, !1) : typeof a == "object" && a.$async === !0 ? t.return(kg.default.data) : (t.assign((0, bg._)`${r}.errors`, null), t.return(!0));
}
mr.topBoolOrEmptySchema = $g;
function Sg(e, t) {
  const { gen: a, schema: r } = e;
  r === !1 ? (a.var(t, !1), wm(e)) : a.var(t, !0);
}
mr.boolOrEmptySchema = Sg;
function wm(e, t) {
  const { gen: a, data: r } = e, i = {
    gen: a,
    keyword: "false schema",
    data: r,
    schema: !1,
    schemaCode: !1,
    schemaValue: !1,
    params: {},
    it: e
  };
  (0, gg.reportError)(i, wg, void 0, t);
}
var bt = {}, Dn = {};
Object.defineProperty(Dn, "__esModule", { value: !0 });
Dn.getRules = Dn.isJSONType = void 0;
const _g = ["string", "number", "integer", "boolean", "null", "object", "array"], Pg = new Set(_g);
function Cg(e) {
  return typeof e == "string" && Pg.has(e);
}
Dn.isJSONType = Cg;
function xg() {
  const e = {
    number: { type: "number", rules: [] },
    string: { type: "string", rules: [] },
    array: { type: "array", rules: [] },
    object: { type: "object", rules: [] }
  };
  return {
    types: { ...e, integer: !0, boolean: !0, null: !0 },
    rules: [{ rules: [] }, e.number, e.string, e.array, e.object],
    post: { rules: [] },
    all: {},
    keywords: {}
  };
}
Dn.getRules = xg;
var Xa = {};
Object.defineProperty(Xa, "__esModule", { value: !0 });
Xa.shouldUseRule = Xa.shouldUseGroup = Xa.schemaHasRulesForType = void 0;
function Vg({ schema: e, self: t }, a) {
  const r = t.RULES.types[a];
  return r && r !== !0 && $m(e, r);
}
Xa.schemaHasRulesForType = Vg;
function $m(e, t) {
  return t.rules.some((a) => Sm(e, a));
}
Xa.shouldUseGroup = $m;
function Sm(e, t) {
  var a;
  return e[t.keyword] !== void 0 || ((a = t.definition.implements) === null || a === void 0 ? void 0 : a.some((r) => e[r] !== void 0));
}
Xa.shouldUseRule = Sm;
Object.defineProperty(bt, "__esModule", { value: !0 });
bt.reportTypeError = bt.checkDataTypes = bt.checkDataType = bt.coerceAndCheckDataType = bt.getJSONTypes = bt.getSchemaTypes = bt.DataType = void 0;
const Ig = Dn, Og = Xa, Eg = Vr, Me = Ie, _m = he;
var dr;
(function(e) {
  e[e.Correct = 0] = "Correct", e[e.Wrong = 1] = "Wrong";
})(dr || (bt.DataType = dr = {}));
function Ag(e) {
  const t = Pm(e.type);
  if (t.includes("null")) {
    if (e.nullable === !1)
      throw new Error("type: null contradicts nullable: false");
  } else {
    if (!t.length && e.nullable !== void 0)
      throw new Error('"nullable" cannot be used without "type"');
    e.nullable === !0 && t.push("null");
  }
  return t;
}
bt.getSchemaTypes = Ag;
function Pm(e) {
  const t = Array.isArray(e) ? e : e ? [e] : [];
  if (t.every(Ig.isJSONType))
    return t;
  throw new Error("type must be JSONType or JSONType[]: " + t.join(","));
}
bt.getJSONTypes = Pm;
function Tg(e, t) {
  const { gen: a, data: r, opts: i } = e, n = jg(t, i.coerceTypes), s = t.length > 0 && !(n.length === 0 && t.length === 1 && (0, Og.schemaHasRulesForType)(e, t[0]));
  if (s) {
    const o = Wo(t, r, i.strictNumbers, dr.Wrong);
    a.if(o, () => {
      n.length ? Mg(e, t, n) : Go(e);
    });
  }
  return s;
}
bt.coerceAndCheckDataType = Tg;
const Cm = /* @__PURE__ */ new Set(["string", "number", "integer", "boolean", "null"]);
function jg(e, t) {
  return t ? e.filter((a) => Cm.has(a) || t === "array" && a === "array") : [];
}
function Mg(e, t, a) {
  const { gen: r, data: i, opts: n } = e, s = r.let("dataType", (0, Me._)`typeof ${i}`), o = r.let("coerced", (0, Me._)`undefined`);
  n.coerceTypes === "array" && r.if((0, Me._)`${s} == 'object' && Array.isArray(${i}) && ${i}.length == 1`, () => r.assign(i, (0, Me._)`${i}[0]`).assign(s, (0, Me._)`typeof ${i}`).if(Wo(t, i, n.strictNumbers), () => r.assign(o, i))), r.if((0, Me._)`${o} !== undefined`);
  for (const u of a)
    (Cm.has(u) || u === "array" && n.coerceTypes === "array") && l(u);
  r.else(), Go(e), r.endIf(), r.if((0, Me._)`${o} !== undefined`, () => {
    r.assign(i, o), Dg(e, o);
  });
  function l(u) {
    switch (u) {
      case "string":
        r.elseIf((0, Me._)`${s} == "number" || ${s} == "boolean"`).assign(o, (0, Me._)`"" + ${i}`).elseIf((0, Me._)`${i} === null`).assign(o, (0, Me._)`""`);
        return;
      case "number":
        r.elseIf((0, Me._)`${s} == "boolean" || ${i} === null
              || (${s} == "string" && ${i} && ${i} == +${i})`).assign(o, (0, Me._)`+${i}`);
        return;
      case "integer":
        r.elseIf((0, Me._)`${s} === "boolean" || ${i} === null
              || (${s} === "string" && ${i} && ${i} == +${i} && !(${i} % 1))`).assign(o, (0, Me._)`+${i}`);
        return;
      case "boolean":
        r.elseIf((0, Me._)`${i} === "false" || ${i} === 0 || ${i} === null`).assign(o, !1).elseIf((0, Me._)`${i} === "true" || ${i} === 1`).assign(o, !0);
        return;
      case "null":
        r.elseIf((0, Me._)`${i} === "" || ${i} === 0 || ${i} === false`), r.assign(o, null);
        return;
      case "array":
        r.elseIf((0, Me._)`${s} === "string" || ${s} === "number"
              || ${s} === "boolean" || ${i} === null`).assign(o, (0, Me._)`[${i}]`);
    }
  }
}
function Dg({ gen: e, parentData: t, parentDataProperty: a }, r) {
  e.if((0, Me._)`${t} !== undefined`, () => e.assign((0, Me._)`${t}[${a}]`, r));
}
function Kl(e, t, a, r = dr.Correct) {
  const i = r === dr.Correct ? Me.operators.EQ : Me.operators.NEQ;
  let n;
  switch (e) {
    case "null":
      return (0, Me._)`${t} ${i} null`;
    case "array":
      n = (0, Me._)`Array.isArray(${t})`;
      break;
    case "object":
      n = (0, Me._)`${t} && typeof ${t} == "object" && !Array.isArray(${t})`;
      break;
    case "integer":
      n = s((0, Me._)`!(${t} % 1) && !isNaN(${t})`);
      break;
    case "number":
      n = s();
      break;
    default:
      return (0, Me._)`typeof ${t} ${i} ${e}`;
  }
  return r === dr.Correct ? n : (0, Me.not)(n);
  function s(o = Me.nil) {
    return (0, Me.and)((0, Me._)`typeof ${t} == "number"`, o, a ? (0, Me._)`isFinite(${t})` : Me.nil);
  }
}
bt.checkDataType = Kl;
function Wo(e, t, a, r) {
  if (e.length === 1)
    return Kl(e[0], t, a, r);
  let i;
  const n = (0, _m.toHash)(e);
  if (n.array && n.object) {
    const s = (0, Me._)`typeof ${t} != "object"`;
    i = n.null ? s : (0, Me._)`!${t} || ${s}`, delete n.null, delete n.array, delete n.object;
  } else
    i = Me.nil;
  n.number && delete n.integer;
  for (const s in n)
    i = (0, Me.and)(i, Kl(s, t, a, r));
  return i;
}
bt.checkDataTypes = Wo;
const Rg = {
  message: ({ schema: e }) => `must be ${e}`,
  params: ({ schema: e, schemaValue: t }) => typeof e == "string" ? (0, Me._)`{type: ${e}}` : (0, Me._)`{type: ${t}}`
};
function Go(e) {
  const t = Ng(e);
  (0, Eg.reportError)(t, Rg);
}
bt.reportTypeError = Go;
function Ng(e) {
  const { gen: t, data: a, schema: r } = e, i = (0, _m.schemaRefOrVal)(e, r, "type");
  return {
    gen: t,
    keyword: "type",
    data: a,
    schema: r.type,
    schemaCode: i,
    schemaValue: i,
    parentSchema: r,
    params: {},
    it: e
  };
}
var As = {};
Object.defineProperty(As, "__esModule", { value: !0 });
As.assignDefaults = void 0;
const ar = Ie, zg = he;
function Lg(e, t) {
  const { properties: a, items: r } = e.schema;
  if (t === "object" && a)
    for (const i in a)
      ad(e, i, a[i].default);
  else t === "array" && Array.isArray(r) && r.forEach((i, n) => ad(e, n, i.default));
}
As.assignDefaults = Lg;
function ad(e, t, a) {
  const { gen: r, compositeRule: i, data: n, opts: s } = e;
  if (a === void 0)
    return;
  const o = (0, ar._)`${n}${(0, ar.getProperty)(t)}`;
  if (i) {
    (0, zg.checkStrictMode)(e, `default is ignored for: ${o}`);
    return;
  }
  let l = (0, ar._)`${o} === undefined`;
  s.useDefaults === "empty" && (l = (0, ar._)`${l} || ${o} === null || ${o} === ""`), r.if(l, (0, ar._)`${o} = ${(0, ar.stringify)(a)}`);
}
var La = {}, Re = {};
Object.defineProperty(Re, "__esModule", { value: !0 });
Re.validateUnion = Re.validateArray = Re.usePattern = Re.callValidateCode = Re.schemaProperties = Re.allSchemaProperties = Re.noPropertyInData = Re.propertyInData = Re.isOwnProperty = Re.hasPropFunc = Re.reportMissingProp = Re.checkMissingProp = Re.checkReportMissingProp = void 0;
const et = Ie, Yo = he, un = Qt, Bg = he;
function Fg(e, t) {
  const { gen: a, data: r, it: i } = e;
  a.if(Zo(a, r, t, i.opts.ownProperties), () => {
    e.setParams({ missingProperty: (0, et._)`${t}` }, !0), e.error();
  });
}
Re.checkReportMissingProp = Fg;
function qg({ gen: e, data: t, it: { opts: a } }, r, i) {
  return (0, et.or)(...r.map((n) => (0, et.and)(Zo(e, t, n, a.ownProperties), (0, et._)`${i} = ${n}`)));
}
Re.checkMissingProp = qg;
function Kg(e, t) {
  e.setParams({ missingProperty: t }, !0), e.error();
}
Re.reportMissingProp = Kg;
function xm(e) {
  return e.scopeValue("func", {
    // eslint-disable-next-line @typescript-eslint/unbound-method
    ref: Object.prototype.hasOwnProperty,
    code: (0, et._)`Object.prototype.hasOwnProperty`
  });
}
Re.hasPropFunc = xm;
function Xo(e, t, a) {
  return (0, et._)`${xm(e)}.call(${t}, ${a})`;
}
Re.isOwnProperty = Xo;
function Hg(e, t, a, r) {
  const i = (0, et._)`${t}${(0, et.getProperty)(a)} !== undefined`;
  return r ? (0, et._)`${i} && ${Xo(e, t, a)}` : i;
}
Re.propertyInData = Hg;
function Zo(e, t, a, r) {
  const i = (0, et._)`${t}${(0, et.getProperty)(a)} === undefined`;
  return r ? (0, et.or)(i, (0, et.not)(Xo(e, t, a))) : i;
}
Re.noPropertyInData = Zo;
function Vm(e) {
  return e ? Object.keys(e).filter((t) => t !== "__proto__") : [];
}
Re.allSchemaProperties = Vm;
function Ug(e, t) {
  return Vm(t).filter((a) => !(0, Yo.alwaysValidSchema)(e, t[a]));
}
Re.schemaProperties = Ug;
function Wg({ schemaCode: e, data: t, it: { gen: a, topSchemaRef: r, schemaPath: i, errorPath: n }, it: s }, o, l, u) {
  const c = u ? (0, et._)`${e}, ${t}, ${r}${i}` : t, d = [
    [un.default.instancePath, (0, et.strConcat)(un.default.instancePath, n)],
    [un.default.parentData, s.parentData],
    [un.default.parentDataProperty, s.parentDataProperty],
    [un.default.rootData, un.default.rootData]
  ];
  s.opts.dynamicRef && d.push([un.default.dynamicAnchors, un.default.dynamicAnchors]);
  const m = (0, et._)`${c}, ${a.object(...d)}`;
  return l !== et.nil ? (0, et._)`${o}.call(${l}, ${m})` : (0, et._)`${o}(${m})`;
}
Re.callValidateCode = Wg;
const Gg = (0, et._)`new RegExp`;
function Yg({ gen: e, it: { opts: t } }, a) {
  const r = t.unicodeRegExp ? "u" : "", { regExp: i } = t.code, n = i(a, r);
  return e.scopeValue("pattern", {
    key: n.toString(),
    ref: n,
    code: (0, et._)`${i.code === "new RegExp" ? Gg : (0, Bg.useFunc)(e, i)}(${a}, ${r})`
  });
}
Re.usePattern = Yg;
function Xg(e) {
  const { gen: t, data: a, keyword: r, it: i } = e, n = t.name("valid");
  if (i.allErrors) {
    const o = t.let("valid", !0);
    return s(() => t.assign(o, !1)), o;
  }
  return t.var(n, !0), s(() => t.break()), n;
  function s(o) {
    const l = t.const("len", (0, et._)`${a}.length`);
    t.forRange("i", 0, l, (u) => {
      e.subschema({
        keyword: r,
        dataProp: u,
        dataPropType: Yo.Type.Num
      }, n), t.if((0, et.not)(n), o);
    });
  }
}
Re.validateArray = Xg;
function Zg(e) {
  const { gen: t, schema: a, keyword: r, it: i } = e;
  if (!Array.isArray(a))
    throw new Error("ajv implementation error");
  if (a.some((l) => (0, Yo.alwaysValidSchema)(i, l)) && !i.opts.unevaluated)
    return;
  const s = t.let("valid", !1), o = t.name("_valid");
  t.block(() => a.forEach((l, u) => {
    const c = e.subschema({
      keyword: r,
      schemaProp: u,
      compositeRule: !0
    }, o);
    t.assign(s, (0, et._)`${s} || ${o}`), e.mergeValidEvaluated(c, o) || t.if((0, et.not)(s));
  })), e.result(s, () => e.reset(), () => e.error(!0));
}
Re.validateUnion = Zg;
Object.defineProperty(La, "__esModule", { value: !0 });
La.validateKeywordUsage = La.validSchemaType = La.funcKeywordCode = La.macroKeywordCode = void 0;
const Rt = Ie, Pn = Qt, Jg = Re, Qg = Vr;
function eb(e, t) {
  const { gen: a, keyword: r, schema: i, parentSchema: n, it: s } = e, o = t.macro.call(s.self, i, n, s), l = Im(a, r, o);
  s.opts.validateSchema !== !1 && s.self.validateSchema(o, !0);
  const u = a.name("valid");
  e.subschema({
    schema: o,
    schemaPath: Rt.nil,
    errSchemaPath: `${s.errSchemaPath}/${r}`,
    topSchemaRef: l,
    compositeRule: !0
  }, u), e.pass(u, () => e.error(!0));
}
La.macroKeywordCode = eb;
function tb(e, t) {
  var a;
  const { gen: r, keyword: i, schema: n, parentSchema: s, $data: o, it: l } = e;
  nb(l, t);
  const u = !o && t.compile ? t.compile.call(l.self, n, s, l) : t.validate, c = Im(r, i, u), d = r.let("valid");
  e.block$data(d, m), e.ok((a = t.valid) !== null && a !== void 0 ? a : d);
  function m() {
    if (t.errors === !1)
      h(), t.modifying && nd(e), y(() => e.error());
    else {
      const f = t.async ? v() : p();
      t.modifying && nd(e), y(() => ab(e, f));
    }
  }
  function v() {
    const f = r.let("ruleErrs", null);
    return r.try(() => h((0, Rt._)`await `), (g) => r.assign(d, !1).if((0, Rt._)`${g} instanceof ${l.ValidationError}`, () => r.assign(f, (0, Rt._)`${g}.errors`), () => r.throw(g))), f;
  }
  function p() {
    const f = (0, Rt._)`${c}.errors`;
    return r.assign(f, null), h(Rt.nil), f;
  }
  function h(f = t.async ? (0, Rt._)`await ` : Rt.nil) {
    const g = l.opts.passContext ? Pn.default.this : Pn.default.self, P = !("compile" in t && !o || t.schema === !1);
    r.assign(d, (0, Rt._)`${f}${(0, Jg.callValidateCode)(e, c, g, P)}`, t.modifying);
  }
  function y(f) {
    var g;
    r.if((0, Rt.not)((g = t.valid) !== null && g !== void 0 ? g : d), f);
  }
}
La.funcKeywordCode = tb;
function nd(e) {
  const { gen: t, data: a, it: r } = e;
  t.if(r.parentData, () => t.assign(a, (0, Rt._)`${r.parentData}[${r.parentDataProperty}]`));
}
function ab(e, t) {
  const { gen: a } = e;
  a.if((0, Rt._)`Array.isArray(${t})`, () => {
    a.assign(Pn.default.vErrors, (0, Rt._)`${Pn.default.vErrors} === null ? ${t} : ${Pn.default.vErrors}.concat(${t})`).assign(Pn.default.errors, (0, Rt._)`${Pn.default.vErrors}.length`), (0, Qg.extendErrors)(e);
  }, () => e.error());
}
function nb({ schemaEnv: e }, t) {
  if (t.async && !e.$async)
    throw new Error("async keyword in sync schema");
}
function Im(e, t, a) {
  if (a === void 0)
    throw new Error(`keyword "${t}" failed to compile`);
  return e.scopeValue("keyword", typeof a == "function" ? { ref: a } : { ref: a, code: (0, Rt.stringify)(a) });
}
function rb(e, t, a = !1) {
  return !t.length || t.some((r) => r === "array" ? Array.isArray(e) : r === "object" ? e && typeof e == "object" && !Array.isArray(e) : typeof e == r || a && typeof e > "u");
}
La.validSchemaType = rb;
function ib({ schema: e, opts: t, self: a, errSchemaPath: r }, i, n) {
  if (Array.isArray(i.keyword) ? !i.keyword.includes(n) : i.keyword !== n)
    throw new Error("ajv implementation error");
  const s = i.dependencies;
  if (s != null && s.some((o) => !Object.prototype.hasOwnProperty.call(e, o)))
    throw new Error(`parent schema must have dependencies of ${n}: ${s.join(",")}`);
  if (i.validateSchema && !i.validateSchema(e[n])) {
    const l = `keyword "${n}" value is invalid at path "${r}": ` + a.errorsText(i.validateSchema.errors);
    if (t.validateSchema === "log")
      a.logger.error(l);
    else
      throw new Error(l);
  }
}
La.validateKeywordUsage = ib;
var vn = {};
Object.defineProperty(vn, "__esModule", { value: !0 });
vn.extendSubschemaMode = vn.extendSubschemaData = vn.getSubschema = void 0;
const za = Ie, Om = he;
function sb(e, { keyword: t, schemaProp: a, schema: r, schemaPath: i, errSchemaPath: n, topSchemaRef: s }) {
  if (t !== void 0 && r !== void 0)
    throw new Error('both "keyword" and "schema" passed, only one allowed');
  if (t !== void 0) {
    const o = e.schema[t];
    return a === void 0 ? {
      schema: o,
      schemaPath: (0, za._)`${e.schemaPath}${(0, za.getProperty)(t)}`,
      errSchemaPath: `${e.errSchemaPath}/${t}`
    } : {
      schema: o[a],
      schemaPath: (0, za._)`${e.schemaPath}${(0, za.getProperty)(t)}${(0, za.getProperty)(a)}`,
      errSchemaPath: `${e.errSchemaPath}/${t}/${(0, Om.escapeFragment)(a)}`
    };
  }
  if (r !== void 0) {
    if (i === void 0 || n === void 0 || s === void 0)
      throw new Error('"schemaPath", "errSchemaPath" and "topSchemaRef" are required with "schema"');
    return {
      schema: r,
      schemaPath: i,
      topSchemaRef: s,
      errSchemaPath: n
    };
  }
  throw new Error('either "keyword" or "schema" must be passed');
}
vn.getSubschema = sb;
function lb(e, t, { dataProp: a, dataPropType: r, data: i, dataTypes: n, propertyName: s }) {
  if (i !== void 0 && a !== void 0)
    throw new Error('both "data" and "dataProp" passed, only one allowed');
  const { gen: o } = t;
  if (a !== void 0) {
    const { errorPath: u, dataPathArr: c, opts: d } = t, m = o.let("data", (0, za._)`${t.data}${(0, za.getProperty)(a)}`, !0);
    l(m), e.errorPath = (0, za.str)`${u}${(0, Om.getErrorPath)(a, r, d.jsPropertySyntax)}`, e.parentDataProperty = (0, za._)`${a}`, e.dataPathArr = [...c, e.parentDataProperty];
  }
  if (i !== void 0) {
    const u = i instanceof za.Name ? i : o.let("data", i, !0);
    l(u), s !== void 0 && (e.propertyName = s);
  }
  n && (e.dataTypes = n);
  function l(u) {
    e.data = u, e.dataLevel = t.dataLevel + 1, e.dataTypes = [], t.definedProperties = /* @__PURE__ */ new Set(), e.parentData = t.data, e.dataNames = [...t.dataNames, u];
  }
}
vn.extendSubschemaData = lb;
function ob(e, { jtdDiscriminator: t, jtdMetadata: a, compositeRule: r, createErrors: i, allErrors: n }) {
  r !== void 0 && (e.compositeRule = r), i !== void 0 && (e.createErrors = i), n !== void 0 && (e.allErrors = n), e.jtdDiscriminator = t, e.jtdMetadata = a;
}
vn.extendSubschemaMode = ob;
var xt = {}, Em = function e(t, a) {
  if (t === a) return !0;
  if (t && a && typeof t == "object" && typeof a == "object") {
    if (t.constructor !== a.constructor) return !1;
    var r, i, n;
    if (Array.isArray(t)) {
      if (r = t.length, r != a.length) return !1;
      for (i = r; i-- !== 0; )
        if (!e(t[i], a[i])) return !1;
      return !0;
    }
    if (t.constructor === RegExp) return t.source === a.source && t.flags === a.flags;
    if (t.valueOf !== Object.prototype.valueOf) return t.valueOf() === a.valueOf();
    if (t.toString !== Object.prototype.toString) return t.toString() === a.toString();
    if (n = Object.keys(t), r = n.length, r !== Object.keys(a).length) return !1;
    for (i = r; i-- !== 0; )
      if (!Object.prototype.hasOwnProperty.call(a, n[i])) return !1;
    for (i = r; i-- !== 0; ) {
      var s = n[i];
      if (!e(t[s], a[s])) return !1;
    }
    return !0;
  }
  return t !== t && a !== a;
}, Am = { exports: {} }, mn = Am.exports = function(e, t, a) {
  typeof t == "function" && (a = t, t = {}), a = t.cb || a;
  var r = typeof a == "function" ? a : a.pre || function() {
  }, i = a.post || function() {
  };
  Zi(t, r, i, e, "", e);
};
mn.keywords = {
  additionalItems: !0,
  items: !0,
  contains: !0,
  additionalProperties: !0,
  propertyNames: !0,
  not: !0,
  if: !0,
  then: !0,
  else: !0
};
mn.arrayKeywords = {
  items: !0,
  allOf: !0,
  anyOf: !0,
  oneOf: !0
};
mn.propsKeywords = {
  $defs: !0,
  definitions: !0,
  properties: !0,
  patternProperties: !0,
  dependencies: !0
};
mn.skipKeywords = {
  default: !0,
  enum: !0,
  const: !0,
  required: !0,
  maximum: !0,
  minimum: !0,
  exclusiveMaximum: !0,
  exclusiveMinimum: !0,
  multipleOf: !0,
  maxLength: !0,
  minLength: !0,
  pattern: !0,
  format: !0,
  maxItems: !0,
  minItems: !0,
  uniqueItems: !0,
  maxProperties: !0,
  minProperties: !0
};
function Zi(e, t, a, r, i, n, s, o, l, u) {
  if (r && typeof r == "object" && !Array.isArray(r)) {
    t(r, i, n, s, o, l, u);
    for (var c in r) {
      var d = r[c];
      if (Array.isArray(d)) {
        if (c in mn.arrayKeywords)
          for (var m = 0; m < d.length; m++)
            Zi(e, t, a, d[m], i + "/" + c + "/" + m, n, i, c, r, m);
      } else if (c in mn.propsKeywords) {
        if (d && typeof d == "object")
          for (var v in d)
            Zi(e, t, a, d[v], i + "/" + c + "/" + ub(v), n, i, c, r, v);
      } else (c in mn.keywords || e.allKeys && !(c in mn.skipKeywords)) && Zi(e, t, a, d, i + "/" + c, n, i, c, r);
    }
    a(r, i, n, s, o, l, u);
  }
}
function ub(e) {
  return e.replace(/~/g, "~0").replace(/\//g, "~1");
}
var cb = Am.exports;
Object.defineProperty(xt, "__esModule", { value: !0 });
xt.getSchemaRefs = xt.resolveUrl = xt.normalizeId = xt._getFullPath = xt.getFullPath = xt.inlineRef = void 0;
const db = he, fb = Em, mb = cb, vb = /* @__PURE__ */ new Set([
  "type",
  "format",
  "pattern",
  "maxLength",
  "minLength",
  "maxProperties",
  "minProperties",
  "maxItems",
  "minItems",
  "maximum",
  "minimum",
  "uniqueItems",
  "multipleOf",
  "required",
  "enum",
  "const"
]);
function pb(e, t = !0) {
  return typeof e == "boolean" ? !0 : t === !0 ? !Hl(e) : t ? Tm(e) <= t : !1;
}
xt.inlineRef = pb;
const hb = /* @__PURE__ */ new Set([
  "$ref",
  "$recursiveRef",
  "$recursiveAnchor",
  "$dynamicRef",
  "$dynamicAnchor"
]);
function Hl(e) {
  for (const t in e) {
    if (hb.has(t))
      return !0;
    const a = e[t];
    if (Array.isArray(a) && a.some(Hl) || typeof a == "object" && Hl(a))
      return !0;
  }
  return !1;
}
function Tm(e) {
  let t = 0;
  for (const a in e) {
    if (a === "$ref")
      return 1 / 0;
    if (t++, !vb.has(a) && (typeof e[a] == "object" && (0, db.eachItem)(e[a], (r) => t += Tm(r)), t === 1 / 0))
      return 1 / 0;
  }
  return t;
}
function jm(e, t = "", a) {
  a !== !1 && (t = fr(t));
  const r = e.parse(t);
  return Mm(e, r);
}
xt.getFullPath = jm;
function Mm(e, t) {
  return e.serialize(t).split("#")[0] + "#";
}
xt._getFullPath = Mm;
const yb = /#\/?$/;
function fr(e) {
  return e ? e.replace(yb, "") : "";
}
xt.normalizeId = fr;
function gb(e, t, a) {
  return a = fr(a), e.resolve(t, a);
}
xt.resolveUrl = gb;
const bb = /^[a-z_][-a-z0-9._]*$/i;
function kb(e, t) {
  if (typeof e == "boolean")
    return {};
  const { schemaId: a, uriResolver: r } = this.opts, i = fr(e[a] || t), n = { "": i }, s = jm(r, i, !1), o = {}, l = /* @__PURE__ */ new Set();
  return mb(e, { allKeys: !0 }, (d, m, v, p) => {
    if (p === void 0)
      return;
    const h = s + m;
    let y = n[p];
    typeof d[a] == "string" && (y = f.call(this, d[a])), g.call(this, d.$anchor), g.call(this, d.$dynamicAnchor), n[m] = y;
    function f(P) {
      const S = this.opts.uriResolver.resolve;
      if (P = fr(y ? S(y, P) : P), l.has(P))
        throw c(P);
      l.add(P);
      let _ = this.refs[P];
      return typeof _ == "string" && (_ = this.refs[_]), typeof _ == "object" ? u(d, _.schema, P) : P !== fr(h) && (P[0] === "#" ? (u(d, o[P], P), o[P] = d) : this.refs[P] = h), P;
    }
    function g(P) {
      if (typeof P == "string") {
        if (!bb.test(P))
          throw new Error(`invalid anchor "${P}"`);
        f.call(this, `#${P}`);
      }
    }
  }), o;
  function u(d, m, v) {
    if (m !== void 0 && !fb(d, m))
      throw c(v);
  }
  function c(d) {
    return new Error(`reference "${d}" resolves to more than one schema`);
  }
}
xt.getSchemaRefs = kb;
Object.defineProperty(ra, "__esModule", { value: !0 });
ra.getData = ra.KeywordCxt = ra.validateFunctionCode = void 0;
const Dm = mr, rd = bt, Jo = Xa, ss = bt, wb = As, Jr = La, pl = vn, we = Ie, Oe = Qt, $b = xt, Za = he, Br = Vr;
function Sb(e) {
  if (zm(e) && (Lm(e), Nm(e))) {
    Cb(e);
    return;
  }
  Rm(e, () => (0, Dm.topBoolOrEmptySchema)(e));
}
ra.validateFunctionCode = Sb;
function Rm({ gen: e, validateName: t, schema: a, schemaEnv: r, opts: i }, n) {
  i.code.es5 ? e.func(t, (0, we._)`${Oe.default.data}, ${Oe.default.valCxt}`, r.$async, () => {
    e.code((0, we._)`"use strict"; ${id(a, i)}`), Pb(e, i), e.code(n);
  }) : e.func(t, (0, we._)`${Oe.default.data}, ${_b(i)}`, r.$async, () => e.code(id(a, i)).code(n));
}
function _b(e) {
  return (0, we._)`{${Oe.default.instancePath}="", ${Oe.default.parentData}, ${Oe.default.parentDataProperty}, ${Oe.default.rootData}=${Oe.default.data}${e.dynamicRef ? (0, we._)`, ${Oe.default.dynamicAnchors}={}` : we.nil}}={}`;
}
function Pb(e, t) {
  e.if(Oe.default.valCxt, () => {
    e.var(Oe.default.instancePath, (0, we._)`${Oe.default.valCxt}.${Oe.default.instancePath}`), e.var(Oe.default.parentData, (0, we._)`${Oe.default.valCxt}.${Oe.default.parentData}`), e.var(Oe.default.parentDataProperty, (0, we._)`${Oe.default.valCxt}.${Oe.default.parentDataProperty}`), e.var(Oe.default.rootData, (0, we._)`${Oe.default.valCxt}.${Oe.default.rootData}`), t.dynamicRef && e.var(Oe.default.dynamicAnchors, (0, we._)`${Oe.default.valCxt}.${Oe.default.dynamicAnchors}`);
  }, () => {
    e.var(Oe.default.instancePath, (0, we._)`""`), e.var(Oe.default.parentData, (0, we._)`undefined`), e.var(Oe.default.parentDataProperty, (0, we._)`undefined`), e.var(Oe.default.rootData, Oe.default.data), t.dynamicRef && e.var(Oe.default.dynamicAnchors, (0, we._)`{}`);
  });
}
function Cb(e) {
  const { schema: t, opts: a, gen: r } = e;
  Rm(e, () => {
    a.$comment && t.$comment && Fm(e), Eb(e), r.let(Oe.default.vErrors, null), r.let(Oe.default.errors, 0), a.unevaluated && xb(e), Bm(e), jb(e);
  });
}
function xb(e) {
  const { gen: t, validateName: a } = e;
  e.evaluated = t.const("evaluated", (0, we._)`${a}.evaluated`), t.if((0, we._)`${e.evaluated}.dynamicProps`, () => t.assign((0, we._)`${e.evaluated}.props`, (0, we._)`undefined`)), t.if((0, we._)`${e.evaluated}.dynamicItems`, () => t.assign((0, we._)`${e.evaluated}.items`, (0, we._)`undefined`));
}
function id(e, t) {
  const a = typeof e == "object" && e[t.schemaId];
  return a && (t.code.source || t.code.process) ? (0, we._)`/*# sourceURL=${a} */` : we.nil;
}
function Vb(e, t) {
  if (zm(e) && (Lm(e), Nm(e))) {
    Ib(e, t);
    return;
  }
  (0, Dm.boolOrEmptySchema)(e, t);
}
function Nm({ schema: e, self: t }) {
  if (typeof e == "boolean")
    return !e;
  for (const a in e)
    if (t.RULES.all[a])
      return !0;
  return !1;
}
function zm(e) {
  return typeof e.schema != "boolean";
}
function Ib(e, t) {
  const { schema: a, gen: r, opts: i } = e;
  i.$comment && a.$comment && Fm(e), Ab(e), Tb(e);
  const n = r.const("_errs", Oe.default.errors);
  Bm(e, n), r.var(t, (0, we._)`${n} === ${Oe.default.errors}`);
}
function Lm(e) {
  (0, Za.checkUnknownRules)(e), Ob(e);
}
function Bm(e, t) {
  if (e.opts.jtd)
    return sd(e, [], !1, t);
  const a = (0, rd.getSchemaTypes)(e.schema), r = (0, rd.coerceAndCheckDataType)(e, a);
  sd(e, a, !r, t);
}
function Ob(e) {
  const { schema: t, errSchemaPath: a, opts: r, self: i } = e;
  t.$ref && r.ignoreKeywordsWithRef && (0, Za.schemaHasRulesButRef)(t, i.RULES) && i.logger.warn(`$ref: keywords ignored in schema at path "${a}"`);
}
function Eb(e) {
  const { schema: t, opts: a } = e;
  t.default !== void 0 && a.useDefaults && a.strictSchema && (0, Za.checkStrictMode)(e, "default is ignored in the schema root");
}
function Ab(e) {
  const t = e.schema[e.opts.schemaId];
  t && (e.baseId = (0, $b.resolveUrl)(e.opts.uriResolver, e.baseId, t));
}
function Tb(e) {
  if (e.schema.$async && !e.schemaEnv.$async)
    throw new Error("async schema in sync schema");
}
function Fm({ gen: e, schemaEnv: t, schema: a, errSchemaPath: r, opts: i }) {
  const n = a.$comment;
  if (i.$comment === !0)
    e.code((0, we._)`${Oe.default.self}.logger.log(${n})`);
  else if (typeof i.$comment == "function") {
    const s = (0, we.str)`${r}/$comment`, o = e.scopeValue("root", { ref: t.root });
    e.code((0, we._)`${Oe.default.self}.opts.$comment(${n}, ${s}, ${o}.schema)`);
  }
}
function jb(e) {
  const { gen: t, schemaEnv: a, validateName: r, ValidationError: i, opts: n } = e;
  a.$async ? t.if((0, we._)`${Oe.default.errors} === 0`, () => t.return(Oe.default.data), () => t.throw((0, we._)`new ${i}(${Oe.default.vErrors})`)) : (t.assign((0, we._)`${r}.errors`, Oe.default.vErrors), n.unevaluated && Mb(e), t.return((0, we._)`${Oe.default.errors} === 0`));
}
function Mb({ gen: e, evaluated: t, props: a, items: r }) {
  a instanceof we.Name && e.assign((0, we._)`${t}.props`, a), r instanceof we.Name && e.assign((0, we._)`${t}.items`, r);
}
function sd(e, t, a, r) {
  const { gen: i, schema: n, data: s, allErrors: o, opts: l, self: u } = e, { RULES: c } = u;
  if (n.$ref && (l.ignoreKeywordsWithRef || !(0, Za.schemaHasRulesButRef)(n, c))) {
    i.block(() => Hm(e, "$ref", c.all.$ref.definition));
    return;
  }
  l.jtd || Db(e, t), i.block(() => {
    for (const m of c.rules)
      d(m);
    d(c.post);
  });
  function d(m) {
    (0, Jo.shouldUseGroup)(n, m) && (m.type ? (i.if((0, ss.checkDataType)(m.type, s, l.strictNumbers)), ld(e, m), t.length === 1 && t[0] === m.type && a && (i.else(), (0, ss.reportTypeError)(e)), i.endIf()) : ld(e, m), o || i.if((0, we._)`${Oe.default.errors} === ${r || 0}`));
  }
}
function ld(e, t) {
  const { gen: a, schema: r, opts: { useDefaults: i } } = e;
  i && (0, wb.assignDefaults)(e, t.type), a.block(() => {
    for (const n of t.rules)
      (0, Jo.shouldUseRule)(r, n) && Hm(e, n.keyword, n.definition, t.type);
  });
}
function Db(e, t) {
  e.schemaEnv.meta || !e.opts.strictTypes || (Rb(e, t), e.opts.allowUnionTypes || Nb(e, t), zb(e, e.dataTypes));
}
function Rb(e, t) {
  if (t.length) {
    if (!e.dataTypes.length) {
      e.dataTypes = t;
      return;
    }
    t.forEach((a) => {
      qm(e.dataTypes, a) || Qo(e, `type "${a}" not allowed by context "${e.dataTypes.join(",")}"`);
    }), Bb(e, t);
  }
}
function Nb(e, t) {
  t.length > 1 && !(t.length === 2 && t.includes("null")) && Qo(e, "use allowUnionTypes to allow union type keyword");
}
function zb(e, t) {
  const a = e.self.RULES.all;
  for (const r in a) {
    const i = a[r];
    if (typeof i == "object" && (0, Jo.shouldUseRule)(e.schema, i)) {
      const { type: n } = i.definition;
      n.length && !n.some((s) => Lb(t, s)) && Qo(e, `missing type "${n.join(",")}" for keyword "${r}"`);
    }
  }
}
function Lb(e, t) {
  return e.includes(t) || t === "number" && e.includes("integer");
}
function qm(e, t) {
  return e.includes(t) || t === "integer" && e.includes("number");
}
function Bb(e, t) {
  const a = [];
  for (const r of e.dataTypes)
    qm(t, r) ? a.push(r) : t.includes("integer") && r === "number" && a.push("integer");
  e.dataTypes = a;
}
function Qo(e, t) {
  const a = e.schemaEnv.baseId + e.errSchemaPath;
  t += ` at "${a}" (strictTypes)`, (0, Za.checkStrictMode)(e, t, e.opts.strictTypes);
}
class Km {
  constructor(t, a, r) {
    if ((0, Jr.validateKeywordUsage)(t, a, r), this.gen = t.gen, this.allErrors = t.allErrors, this.keyword = r, this.data = t.data, this.schema = t.schema[r], this.$data = a.$data && t.opts.$data && this.schema && this.schema.$data, this.schemaValue = (0, Za.schemaRefOrVal)(t, this.schema, r, this.$data), this.schemaType = a.schemaType, this.parentSchema = t.schema, this.params = {}, this.it = t, this.def = a, this.$data)
      this.schemaCode = t.gen.const("vSchema", Um(this.$data, t));
    else if (this.schemaCode = this.schemaValue, !(0, Jr.validSchemaType)(this.schema, a.schemaType, a.allowUndefined))
      throw new Error(`${r} value must be ${JSON.stringify(a.schemaType)}`);
    ("code" in a ? a.trackErrors : a.errors !== !1) && (this.errsCount = t.gen.const("_errs", Oe.default.errors));
  }
  result(t, a, r) {
    this.failResult((0, we.not)(t), a, r);
  }
  failResult(t, a, r) {
    this.gen.if(t), r ? r() : this.error(), a ? (this.gen.else(), a(), this.allErrors && this.gen.endIf()) : this.allErrors ? this.gen.endIf() : this.gen.else();
  }
  pass(t, a) {
    this.failResult((0, we.not)(t), void 0, a);
  }
  fail(t) {
    if (t === void 0) {
      this.error(), this.allErrors || this.gen.if(!1);
      return;
    }
    this.gen.if(t), this.error(), this.allErrors ? this.gen.endIf() : this.gen.else();
  }
  fail$data(t) {
    if (!this.$data)
      return this.fail(t);
    const { schemaCode: a } = this;
    this.fail((0, we._)`${a} !== undefined && (${(0, we.or)(this.invalid$data(), t)})`);
  }
  error(t, a, r) {
    if (a) {
      this.setParams(a), this._error(t, r), this.setParams({});
      return;
    }
    this._error(t, r);
  }
  _error(t, a) {
    (t ? Br.reportExtraError : Br.reportError)(this, this.def.error, a);
  }
  $dataError() {
    (0, Br.reportError)(this, this.def.$dataError || Br.keyword$DataError);
  }
  reset() {
    if (this.errsCount === void 0)
      throw new Error('add "trackErrors" to keyword definition');
    (0, Br.resetErrorsCount)(this.gen, this.errsCount);
  }
  ok(t) {
    this.allErrors || this.gen.if(t);
  }
  setParams(t, a) {
    a ? Object.assign(this.params, t) : this.params = t;
  }
  block$data(t, a, r = we.nil) {
    this.gen.block(() => {
      this.check$data(t, r), a();
    });
  }
  check$data(t = we.nil, a = we.nil) {
    if (!this.$data)
      return;
    const { gen: r, schemaCode: i, schemaType: n, def: s } = this;
    r.if((0, we.or)((0, we._)`${i} === undefined`, a)), t !== we.nil && r.assign(t, !0), (n.length || s.validateSchema) && (r.elseIf(this.invalid$data()), this.$dataError(), t !== we.nil && r.assign(t, !1)), r.else();
  }
  invalid$data() {
    const { gen: t, schemaCode: a, schemaType: r, def: i, it: n } = this;
    return (0, we.or)(s(), o());
    function s() {
      if (r.length) {
        if (!(a instanceof we.Name))
          throw new Error("ajv implementation error");
        const l = Array.isArray(r) ? r : [r];
        return (0, we._)`${(0, ss.checkDataTypes)(l, a, n.opts.strictNumbers, ss.DataType.Wrong)}`;
      }
      return we.nil;
    }
    function o() {
      if (i.validateSchema) {
        const l = t.scopeValue("validate$data", { ref: i.validateSchema });
        return (0, we._)`!${l}(${a})`;
      }
      return we.nil;
    }
  }
  subschema(t, a) {
    const r = (0, pl.getSubschema)(this.it, t);
    (0, pl.extendSubschemaData)(r, this.it, t), (0, pl.extendSubschemaMode)(r, t);
    const i = { ...this.it, ...r, items: void 0, props: void 0 };
    return Vb(i, a), i;
  }
  mergeEvaluated(t, a) {
    const { it: r, gen: i } = this;
    r.opts.unevaluated && (r.props !== !0 && t.props !== void 0 && (r.props = Za.mergeEvaluated.props(i, t.props, r.props, a)), r.items !== !0 && t.items !== void 0 && (r.items = Za.mergeEvaluated.items(i, t.items, r.items, a)));
  }
  mergeValidEvaluated(t, a) {
    const { it: r, gen: i } = this;
    if (r.opts.unevaluated && (r.props !== !0 || r.items !== !0))
      return i.if(a, () => this.mergeEvaluated(t, we.Name)), !0;
  }
}
ra.KeywordCxt = Km;
function Hm(e, t, a, r) {
  const i = new Km(e, a, t);
  "code" in a ? a.code(i, r) : i.$data && a.validate ? (0, Jr.funcKeywordCode)(i, a) : "macro" in a ? (0, Jr.macroKeywordCode)(i, a) : (a.compile || a.validate) && (0, Jr.funcKeywordCode)(i, a);
}
const Fb = /^\/(?:[^~]|~0|~1)*$/, qb = /^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;
function Um(e, { dataLevel: t, dataNames: a, dataPathArr: r }) {
  let i, n;
  if (e === "")
    return Oe.default.rootData;
  if (e[0] === "/") {
    if (!Fb.test(e))
      throw new Error(`Invalid JSON-pointer: ${e}`);
    i = e, n = Oe.default.rootData;
  } else {
    const u = qb.exec(e);
    if (!u)
      throw new Error(`Invalid JSON-pointer: ${e}`);
    const c = +u[1];
    if (i = u[2], i === "#") {
      if (c >= t)
        throw new Error(l("property/index", c));
      return r[t - c];
    }
    if (c > t)
      throw new Error(l("data", c));
    if (n = a[t - c], !i)
      return n;
  }
  let s = n;
  const o = i.split("/");
  for (const u of o)
    u && (n = (0, we._)`${n}${(0, we.getProperty)((0, Za.unescapeJsonPointer)(u))}`, s = (0, we._)`${s} && ${n}`);
  return s;
  function l(u, c) {
    return `Cannot access ${u} ${c} levels up, current level is ${t}`;
  }
}
ra.getData = Um;
var Ir = {};
Object.defineProperty(Ir, "__esModule", { value: !0 });
class Kb extends Error {
  constructor(t) {
    super("validation failed"), this.errors = t, this.ajv = this.validation = !0;
  }
}
Ir.default = Kb;
var Kn = {};
Object.defineProperty(Kn, "__esModule", { value: !0 });
const hl = xt;
class Hb extends Error {
  constructor(t, a, r, i) {
    super(i || `can't resolve reference ${r} from id ${a}`), this.missingRef = (0, hl.resolveUrl)(t, a, r), this.missingSchema = (0, hl.normalizeId)((0, hl.getFullPath)(t, this.missingRef));
  }
}
Kn.default = Hb;
var Nt = {};
Object.defineProperty(Nt, "__esModule", { value: !0 });
Nt.resolveSchema = Nt.getCompilingSchema = Nt.resolveRef = Nt.compileSchema = Nt.SchemaEnv = void 0;
const wa = Ie, Ub = Ir, bn = Qt, _a = xt, od = he, Wb = ra;
class Ts {
  constructor(t) {
    var a;
    this.refs = {}, this.dynamicAnchors = {};
    let r;
    typeof t.schema == "object" && (r = t.schema), this.schema = t.schema, this.schemaId = t.schemaId, this.root = t.root || this, this.baseId = (a = t.baseId) !== null && a !== void 0 ? a : (0, _a.normalizeId)(r == null ? void 0 : r[t.schemaId || "$id"]), this.schemaPath = t.schemaPath, this.localRefs = t.localRefs, this.meta = t.meta, this.$async = r == null ? void 0 : r.$async, this.refs = {};
  }
}
Nt.SchemaEnv = Ts;
function eu(e) {
  const t = Wm.call(this, e);
  if (t)
    return t;
  const a = (0, _a.getFullPath)(this.opts.uriResolver, e.root.baseId), { es5: r, lines: i } = this.opts.code, { ownProperties: n } = this.opts, s = new wa.CodeGen(this.scope, { es5: r, lines: i, ownProperties: n });
  let o;
  e.$async && (o = s.scopeValue("Error", {
    ref: Ub.default,
    code: (0, wa._)`require("ajv/dist/runtime/validation_error").default`
  }));
  const l = s.scopeName("validate");
  e.validateName = l;
  const u = {
    gen: s,
    allErrors: this.opts.allErrors,
    data: bn.default.data,
    parentData: bn.default.parentData,
    parentDataProperty: bn.default.parentDataProperty,
    dataNames: [bn.default.data],
    dataPathArr: [wa.nil],
    // TODO can its length be used as dataLevel if nil is removed?
    dataLevel: 0,
    dataTypes: [],
    definedProperties: /* @__PURE__ */ new Set(),
    topSchemaRef: s.scopeValue("schema", this.opts.code.source === !0 ? { ref: e.schema, code: (0, wa.stringify)(e.schema) } : { ref: e.schema }),
    validateName: l,
    ValidationError: o,
    schema: e.schema,
    schemaEnv: e,
    rootId: a,
    baseId: e.baseId || a,
    schemaPath: wa.nil,
    errSchemaPath: e.schemaPath || (this.opts.jtd ? "" : "#"),
    errorPath: (0, wa._)`""`,
    opts: this.opts,
    self: this
  };
  let c;
  try {
    this._compilations.add(e), (0, Wb.validateFunctionCode)(u), s.optimize(this.opts.code.optimize);
    const d = s.toString();
    c = `${s.scopeRefs(bn.default.scope)}return ${d}`, this.opts.code.process && (c = this.opts.code.process(c, e));
    const v = new Function(`${bn.default.self}`, `${bn.default.scope}`, c)(this, this.scope.get());
    if (this.scope.value(l, { ref: v }), v.errors = null, v.schema = e.schema, v.schemaEnv = e, e.$async && (v.$async = !0), this.opts.code.source === !0 && (v.source = { validateName: l, validateCode: d, scopeValues: s._values }), this.opts.unevaluated) {
      const { props: p, items: h } = u;
      v.evaluated = {
        props: p instanceof wa.Name ? void 0 : p,
        items: h instanceof wa.Name ? void 0 : h,
        dynamicProps: p instanceof wa.Name,
        dynamicItems: h instanceof wa.Name
      }, v.source && (v.source.evaluated = (0, wa.stringify)(v.evaluated));
    }
    return e.validate = v, e;
  } catch (d) {
    throw delete e.validate, delete e.validateName, c && this.logger.error("Error compiling schema, function code:", c), d;
  } finally {
    this._compilations.delete(e);
  }
}
Nt.compileSchema = eu;
function Gb(e, t, a) {
  var r;
  a = (0, _a.resolveUrl)(this.opts.uriResolver, t, a);
  const i = e.refs[a];
  if (i)
    return i;
  let n = Zb.call(this, e, a);
  if (n === void 0) {
    const s = (r = e.localRefs) === null || r === void 0 ? void 0 : r[a], { schemaId: o } = this.opts;
    s && (n = new Ts({ schema: s, schemaId: o, root: e, baseId: t }));
  }
  if (n !== void 0)
    return e.refs[a] = Yb.call(this, n);
}
Nt.resolveRef = Gb;
function Yb(e) {
  return (0, _a.inlineRef)(e.schema, this.opts.inlineRefs) ? e.schema : e.validate ? e : eu.call(this, e);
}
function Wm(e) {
  for (const t of this._compilations)
    if (Xb(t, e))
      return t;
}
Nt.getCompilingSchema = Wm;
function Xb(e, t) {
  return e.schema === t.schema && e.root === t.root && e.baseId === t.baseId;
}
function Zb(e, t) {
  let a;
  for (; typeof (a = this.refs[t]) == "string"; )
    t = a;
  return a || this.schemas[t] || js.call(this, e, t);
}
function js(e, t) {
  const a = this.opts.uriResolver.parse(t), r = (0, _a._getFullPath)(this.opts.uriResolver, a);
  let i = (0, _a.getFullPath)(this.opts.uriResolver, e.baseId, void 0);
  if (Object.keys(e.schema).length > 0 && r === i)
    return yl.call(this, a, e);
  const n = (0, _a.normalizeId)(r), s = this.refs[n] || this.schemas[n];
  if (typeof s == "string") {
    const o = js.call(this, e, s);
    return typeof (o == null ? void 0 : o.schema) != "object" ? void 0 : yl.call(this, a, o);
  }
  if (typeof (s == null ? void 0 : s.schema) == "object") {
    if (s.validate || eu.call(this, s), n === (0, _a.normalizeId)(t)) {
      const { schema: o } = s, { schemaId: l } = this.opts, u = o[l];
      return u && (i = (0, _a.resolveUrl)(this.opts.uriResolver, i, u)), new Ts({ schema: o, schemaId: l, root: e, baseId: i });
    }
    return yl.call(this, a, s);
  }
}
Nt.resolveSchema = js;
const Jb = /* @__PURE__ */ new Set([
  "properties",
  "patternProperties",
  "enum",
  "dependencies",
  "definitions"
]);
function yl(e, { baseId: t, schema: a, root: r }) {
  var i;
  if (((i = e.fragment) === null || i === void 0 ? void 0 : i[0]) !== "/")
    return;
  for (const o of e.fragment.slice(1).split("/")) {
    if (typeof a == "boolean")
      return;
    const l = a[(0, od.unescapeFragment)(o)];
    if (l === void 0)
      return;
    a = l;
    const u = typeof a == "object" && a[this.opts.schemaId];
    !Jb.has(o) && u && (t = (0, _a.resolveUrl)(this.opts.uriResolver, t, u));
  }
  let n;
  if (typeof a != "boolean" && a.$ref && !(0, od.schemaHasRulesButRef)(a, this.RULES)) {
    const o = (0, _a.resolveUrl)(this.opts.uriResolver, t, a.$ref);
    n = js.call(this, r, o);
  }
  const { schemaId: s } = this.opts;
  if (n = n || new Ts({ schema: a, schemaId: s, root: r, baseId: t }), n.schema !== n.root.schema)
    return n;
}
const Qb = "https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#", ek = "Meta-schema for $data reference (JSON AnySchema extension proposal)", tk = "object", ak = [
  "$data"
], nk = {
  $data: {
    type: "string",
    anyOf: [
      {
        format: "relative-json-pointer"
      },
      {
        format: "json-pointer"
      }
    ]
  }
}, rk = !1, ik = {
  $id: Qb,
  description: ek,
  type: tk,
  required: ak,
  properties: nk,
  additionalProperties: rk
};
var tu = {}, Ms = { exports: {} };
const sk = {
  0: 0,
  1: 1,
  2: 2,
  3: 3,
  4: 4,
  5: 5,
  6: 6,
  7: 7,
  8: 8,
  9: 9,
  a: 10,
  A: 10,
  b: 11,
  B: 11,
  c: 12,
  C: 12,
  d: 13,
  D: 13,
  e: 14,
  E: 14,
  f: 15,
  F: 15
};
var lk = {
  HEX: sk
};
const { HEX: ok } = lk, uk = /^(?:(?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)$/u;
function Gm(e) {
  if (Xm(e, ".") < 3)
    return { host: e, isIPV4: !1 };
  const t = e.match(uk) || [], [a] = t;
  return a ? { host: dk(a, "."), isIPV4: !0 } : { host: e, isIPV4: !1 };
}
function ud(e, t = !1) {
  let a = "", r = !0;
  for (const i of e) {
    if (ok[i] === void 0) return;
    i !== "0" && r === !0 && (r = !1), r || (a += i);
  }
  return t && a.length === 0 && (a = "0"), a;
}
function ck(e) {
  let t = 0;
  const a = { error: !1, address: "", zone: "" }, r = [], i = [];
  let n = !1, s = !1, o = !1;
  function l() {
    if (i.length) {
      if (n === !1) {
        const u = ud(i);
        if (u !== void 0)
          r.push(u);
        else
          return a.error = !0, !1;
      }
      i.length = 0;
    }
    return !0;
  }
  for (let u = 0; u < e.length; u++) {
    const c = e[u];
    if (!(c === "[" || c === "]"))
      if (c === ":") {
        if (s === !0 && (o = !0), !l())
          break;
        if (t++, r.push(":"), t > 7) {
          a.error = !0;
          break;
        }
        u - 1 >= 0 && e[u - 1] === ":" && (s = !0);
        continue;
      } else if (c === "%") {
        if (!l())
          break;
        n = !0;
      } else {
        i.push(c);
        continue;
      }
  }
  return i.length && (n ? a.zone = i.join("") : o ? r.push(i.join("")) : r.push(ud(i))), a.address = r.join(""), a;
}
function Ym(e) {
  if (Xm(e, ":") < 2)
    return { host: e, isIPV6: !1 };
  const t = ck(e);
  if (t.error)
    return { host: e, isIPV6: !1 };
  {
    let a = t.address, r = t.address;
    return t.zone && (a += "%" + t.zone, r += "%25" + t.zone), { host: a, escapedHost: r, isIPV6: !0 };
  }
}
function dk(e, t) {
  let a = "", r = !0;
  const i = e.length;
  for (let n = 0; n < i; n++) {
    const s = e[n];
    s === "0" && r ? (n + 1 <= i && e[n + 1] === t || n + 1 === i) && (a += s, r = !1) : (s === t ? r = !0 : r = !1, a += s);
  }
  return a;
}
function Xm(e, t) {
  let a = 0;
  for (let r = 0; r < e.length; r++)
    e[r] === t && a++;
  return a;
}
const cd = /^\.\.?\//u, dd = /^\/\.(?:\/|$)/u, fd = /^\/\.\.(?:\/|$)/u, fk = /^\/?(?:.|\n)*?(?=\/|$)/u;
function mk(e) {
  const t = [];
  for (; e.length; )
    if (e.match(cd))
      e = e.replace(cd, "");
    else if (e.match(dd))
      e = e.replace(dd, "/");
    else if (e.match(fd))
      e = e.replace(fd, "/"), t.pop();
    else if (e === "." || e === "..")
      e = "";
    else {
      const a = e.match(fk);
      if (a) {
        const r = a[0];
        e = e.slice(r.length), t.push(r);
      } else
        throw new Error("Unexpected dot segment condition");
    }
  return t.join("");
}
function vk(e, t) {
  const a = t !== !0 ? escape : unescape;
  return e.scheme !== void 0 && (e.scheme = a(e.scheme)), e.userinfo !== void 0 && (e.userinfo = a(e.userinfo)), e.host !== void 0 && (e.host = a(e.host)), e.path !== void 0 && (e.path = a(e.path)), e.query !== void 0 && (e.query = a(e.query)), e.fragment !== void 0 && (e.fragment = a(e.fragment)), e;
}
function pk(e) {
  const t = [];
  if (e.userinfo !== void 0 && (t.push(e.userinfo), t.push("@")), e.host !== void 0) {
    let a = unescape(e.host);
    const r = Gm(a);
    if (r.isIPV4)
      a = r.host;
    else {
      const i = Ym(r.host);
      i.isIPV6 === !0 ? a = `[${i.escapedHost}]` : a = e.host;
    }
    t.push(a);
  }
  return (typeof e.port == "number" || typeof e.port == "string") && (t.push(":"), t.push(String(e.port))), t.length ? t.join("") : void 0;
}
var hk = {
  recomposeAuthority: pk,
  normalizeComponentEncoding: vk,
  removeDotSegments: mk,
  normalizeIPv4: Gm,
  normalizeIPv6: Ym
};
const yk = /^[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}$/iu, gk = /([\da-z][\d\-a-z]{0,31}):((?:[\w!$'()*+,\-.:;=@]|%[\da-f]{2})+)/iu;
function Zm(e) {
  return typeof e.secure == "boolean" ? e.secure : String(e.scheme).toLowerCase() === "wss";
}
function Jm(e) {
  return e.host || (e.error = e.error || "HTTP URIs must have a host."), e;
}
function Qm(e) {
  const t = String(e.scheme).toLowerCase() === "https";
  return (e.port === (t ? 443 : 80) || e.port === "") && (e.port = void 0), e.path || (e.path = "/"), e;
}
function bk(e) {
  return e.secure = Zm(e), e.resourceName = (e.path || "/") + (e.query ? "?" + e.query : ""), e.path = void 0, e.query = void 0, e;
}
function kk(e) {
  if ((e.port === (Zm(e) ? 443 : 80) || e.port === "") && (e.port = void 0), typeof e.secure == "boolean" && (e.scheme = e.secure ? "wss" : "ws", e.secure = void 0), e.resourceName) {
    const [t, a] = e.resourceName.split("?");
    e.path = t && t !== "/" ? t : void 0, e.query = a, e.resourceName = void 0;
  }
  return e.fragment = void 0, e;
}
function wk(e, t) {
  if (!e.path)
    return e.error = "URN can not be parsed", e;
  const a = e.path.match(gk);
  if (a) {
    const r = t.scheme || e.scheme || "urn";
    e.nid = a[1].toLowerCase(), e.nss = a[2];
    const i = `${r}:${t.nid || e.nid}`, n = au[i];
    e.path = void 0, n && (e = n.parse(e, t));
  } else
    e.error = e.error || "URN can not be parsed.";
  return e;
}
function $k(e, t) {
  const a = t.scheme || e.scheme || "urn", r = e.nid.toLowerCase(), i = `${a}:${t.nid || r}`, n = au[i];
  n && (e = n.serialize(e, t));
  const s = e, o = e.nss;
  return s.path = `${r || t.nid}:${o}`, t.skipEscape = !0, s;
}
function Sk(e, t) {
  const a = e;
  return a.uuid = a.nss, a.nss = void 0, !t.tolerant && (!a.uuid || !yk.test(a.uuid)) && (a.error = a.error || "UUID is not valid."), a;
}
function _k(e) {
  const t = e;
  return t.nss = (e.uuid || "").toLowerCase(), t;
}
const ev = {
  scheme: "http",
  domainHost: !0,
  parse: Jm,
  serialize: Qm
}, Pk = {
  scheme: "https",
  domainHost: ev.domainHost,
  parse: Jm,
  serialize: Qm
}, Ji = {
  scheme: "ws",
  domainHost: !0,
  parse: bk,
  serialize: kk
}, Ck = {
  scheme: "wss",
  domainHost: Ji.domainHost,
  parse: Ji.parse,
  serialize: Ji.serialize
}, xk = {
  scheme: "urn",
  parse: wk,
  serialize: $k,
  skipNormalize: !0
}, Vk = {
  scheme: "urn:uuid",
  parse: Sk,
  serialize: _k,
  skipNormalize: !0
}, au = {
  http: ev,
  https: Pk,
  ws: Ji,
  wss: Ck,
  urn: xk,
  "urn:uuid": Vk
};
var Ik = au;
const { normalizeIPv6: Ok, normalizeIPv4: Ek, removeDotSegments: Ur, recomposeAuthority: Ak, normalizeComponentEncoding: Di } = hk, nu = Ik;
function Tk(e, t) {
  return typeof e == "string" ? e = Ba(an(e, t), t) : typeof e == "object" && (e = an(Ba(e, t), t)), e;
}
function jk(e, t, a) {
  const r = Object.assign({ scheme: "null" }, a), i = tv(an(e, r), an(t, r), r, !0);
  return Ba(i, { ...r, skipEscape: !0 });
}
function tv(e, t, a, r) {
  const i = {};
  return r || (e = an(Ba(e, a), a), t = an(Ba(t, a), a)), a = a || {}, !a.tolerant && t.scheme ? (i.scheme = t.scheme, i.userinfo = t.userinfo, i.host = t.host, i.port = t.port, i.path = Ur(t.path || ""), i.query = t.query) : (t.userinfo !== void 0 || t.host !== void 0 || t.port !== void 0 ? (i.userinfo = t.userinfo, i.host = t.host, i.port = t.port, i.path = Ur(t.path || ""), i.query = t.query) : (t.path ? (t.path.charAt(0) === "/" ? i.path = Ur(t.path) : ((e.userinfo !== void 0 || e.host !== void 0 || e.port !== void 0) && !e.path ? i.path = "/" + t.path : e.path ? i.path = e.path.slice(0, e.path.lastIndexOf("/") + 1) + t.path : i.path = t.path, i.path = Ur(i.path)), i.query = t.query) : (i.path = e.path, t.query !== void 0 ? i.query = t.query : i.query = e.query), i.userinfo = e.userinfo, i.host = e.host, i.port = e.port), i.scheme = e.scheme), i.fragment = t.fragment, i;
}
function Mk(e, t, a) {
  return typeof e == "string" ? (e = unescape(e), e = Ba(Di(an(e, a), !0), { ...a, skipEscape: !0 })) : typeof e == "object" && (e = Ba(Di(e, !0), { ...a, skipEscape: !0 })), typeof t == "string" ? (t = unescape(t), t = Ba(Di(an(t, a), !0), { ...a, skipEscape: !0 })) : typeof t == "object" && (t = Ba(Di(t, !0), { ...a, skipEscape: !0 })), e.toLowerCase() === t.toLowerCase();
}
function Ba(e, t) {
  const a = {
    host: e.host,
    scheme: e.scheme,
    userinfo: e.userinfo,
    port: e.port,
    path: e.path,
    query: e.query,
    nid: e.nid,
    nss: e.nss,
    uuid: e.uuid,
    fragment: e.fragment,
    reference: e.reference,
    resourceName: e.resourceName,
    secure: e.secure,
    error: ""
  }, r = Object.assign({}, t), i = [], n = nu[(r.scheme || a.scheme || "").toLowerCase()];
  n && n.serialize && n.serialize(a, r), a.path !== void 0 && (r.skipEscape ? a.path = unescape(a.path) : (a.path = escape(a.path), a.scheme !== void 0 && (a.path = a.path.split("%3A").join(":")))), r.reference !== "suffix" && a.scheme && i.push(a.scheme, ":");
  const s = Ak(a);
  if (s !== void 0 && (r.reference !== "suffix" && i.push("//"), i.push(s), a.path && a.path.charAt(0) !== "/" && i.push("/")), a.path !== void 0) {
    let o = a.path;
    !r.absolutePath && (!n || !n.absolutePath) && (o = Ur(o)), s === void 0 && (o = o.replace(/^\/\//u, "/%2F")), i.push(o);
  }
  return a.query !== void 0 && i.push("?", a.query), a.fragment !== void 0 && i.push("#", a.fragment), i.join("");
}
const Dk = Array.from({ length: 127 }, (e, t) => /[^!"$&'()*+,\-.;=_`a-z{}~]/u.test(String.fromCharCode(t)));
function Rk(e) {
  let t = 0;
  for (let a = 0, r = e.length; a < r; ++a)
    if (t = e.charCodeAt(a), t > 126 || Dk[t])
      return !0;
  return !1;
}
const Nk = /^(?:([^#/:?]+):)?(?:\/\/((?:([^#/?@]*)@)?(\[[^#/?\]]+\]|[^#/:?]*)(?::(\d*))?))?([^#?]*)(?:\?([^#]*))?(?:#((?:.|[\n\r])*))?/u;
function an(e, t) {
  const a = Object.assign({}, t), r = {
    scheme: void 0,
    userinfo: void 0,
    host: "",
    port: void 0,
    path: "",
    query: void 0,
    fragment: void 0
  }, i = e.indexOf("%") !== -1;
  let n = !1;
  a.reference === "suffix" && (e = (a.scheme ? a.scheme + ":" : "") + "//" + e);
  const s = e.match(Nk);
  if (s) {
    if (r.scheme = s[1], r.userinfo = s[3], r.host = s[4], r.port = parseInt(s[5], 10), r.path = s[6] || "", r.query = s[7], r.fragment = s[8], isNaN(r.port) && (r.port = s[5]), r.host) {
      const l = Ek(r.host);
      if (l.isIPV4 === !1) {
        const u = Ok(l.host);
        r.host = u.host.toLowerCase(), n = u.isIPV6;
      } else
        r.host = l.host, n = !0;
    }
    r.scheme === void 0 && r.userinfo === void 0 && r.host === void 0 && r.port === void 0 && r.query === void 0 && !r.path ? r.reference = "same-document" : r.scheme === void 0 ? r.reference = "relative" : r.fragment === void 0 ? r.reference = "absolute" : r.reference = "uri", a.reference && a.reference !== "suffix" && a.reference !== r.reference && (r.error = r.error || "URI is not a " + a.reference + " reference.");
    const o = nu[(a.scheme || r.scheme || "").toLowerCase()];
    if (!a.unicodeSupport && (!o || !o.unicodeSupport) && r.host && (a.domainHost || o && o.domainHost) && n === !1 && Rk(r.host))
      try {
        r.host = URL.domainToASCII(r.host.toLowerCase());
      } catch (l) {
        r.error = r.error || "Host's domain name can not be converted to ASCII: " + l;
      }
    (!o || o && !o.skipNormalize) && (i && r.scheme !== void 0 && (r.scheme = unescape(r.scheme)), i && r.host !== void 0 && (r.host = unescape(r.host)), r.path && (r.path = escape(unescape(r.path))), r.fragment && (r.fragment = encodeURI(decodeURIComponent(r.fragment)))), o && o.parse && o.parse(r, a);
  } else
    r.error = r.error || "URI can not be parsed.";
  return r;
}
const ru = {
  SCHEMES: nu,
  normalize: Tk,
  resolve: jk,
  resolveComponents: tv,
  equal: Mk,
  serialize: Ba,
  parse: an
};
Ms.exports = ru;
Ms.exports.default = ru;
Ms.exports.fastUri = ru;
var zk = Ms.exports;
Object.defineProperty(tu, "__esModule", { value: !0 });
const av = zk;
av.code = 'require("ajv/dist/runtime/uri").default';
tu.default = av;
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.CodeGen = e.Name = e.nil = e.stringify = e.str = e._ = e.KeywordCxt = void 0;
  var t = ra;
  Object.defineProperty(e, "KeywordCxt", { enumerable: !0, get: function() {
    return t.KeywordCxt;
  } });
  var a = Ie;
  Object.defineProperty(e, "_", { enumerable: !0, get: function() {
    return a._;
  } }), Object.defineProperty(e, "str", { enumerable: !0, get: function() {
    return a.str;
  } }), Object.defineProperty(e, "stringify", { enumerable: !0, get: function() {
    return a.stringify;
  } }), Object.defineProperty(e, "nil", { enumerable: !0, get: function() {
    return a.nil;
  } }), Object.defineProperty(e, "Name", { enumerable: !0, get: function() {
    return a.Name;
  } }), Object.defineProperty(e, "CodeGen", { enumerable: !0, get: function() {
    return a.CodeGen;
  } });
  const r = Ir, i = Kn, n = Dn, s = Nt, o = Ie, l = xt, u = bt, c = he, d = ik, m = tu, v = (A, x) => new RegExp(A, x);
  v.code = "new RegExp";
  const p = ["removeAdditional", "useDefaults", "coerceTypes"], h = /* @__PURE__ */ new Set([
    "validate",
    "serialize",
    "parse",
    "wrapper",
    "root",
    "schema",
    "keyword",
    "pattern",
    "formats",
    "validate$data",
    "func",
    "obj",
    "Error"
  ]), y = {
    errorDataPath: "",
    format: "`validateFormats: false` can be used instead.",
    nullable: '"nullable" keyword is supported by default.',
    jsonPointers: "Deprecated jsPropertySyntax can be used instead.",
    extendRefs: "Deprecated ignoreKeywordsWithRef can be used instead.",
    missingRefs: "Pass empty schema with $id that should be ignored to ajv.addSchema.",
    processCode: "Use option `code: {process: (code, schemaEnv: object) => string}`",
    sourceCode: "Use option `code: {source: true}`",
    strictDefaults: "It is default now, see option `strict`.",
    strictKeywords: "It is default now, see option `strict`.",
    uniqueItems: '"uniqueItems" keyword is always validated.',
    unknownFormats: "Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).",
    cache: "Map is used as cache, schema object as key.",
    serialize: "Map is used as cache, schema object as key.",
    ajvErrors: "It is default now."
  }, f = {
    ignoreKeywordsWithRef: "",
    jsPropertySyntax: "",
    unicode: '"minLength"/"maxLength" account for unicode characters by default.'
  }, g = 200;
  function P(A) {
    var x, V, $, b, I, k, E, M, K, Y, le, se, Q, ue, G, de, $e, ke, Ve, Se, je, be, st, tt, ca;
    const Wt = A.strict, Gt = (x = A.code) === null || x === void 0 ? void 0 : x.optimize, Ma = Gt === !0 || Gt === void 0 ? 1 : Gt || 0, Da = ($ = (V = A.code) === null || V === void 0 ? void 0 : V.regExp) !== null && $ !== void 0 ? $ : v, Qn = (b = A.uriResolver) !== null && b !== void 0 ? b : m.default;
    return {
      strictSchema: (k = (I = A.strictSchema) !== null && I !== void 0 ? I : Wt) !== null && k !== void 0 ? k : !0,
      strictNumbers: (M = (E = A.strictNumbers) !== null && E !== void 0 ? E : Wt) !== null && M !== void 0 ? M : !0,
      strictTypes: (Y = (K = A.strictTypes) !== null && K !== void 0 ? K : Wt) !== null && Y !== void 0 ? Y : "log",
      strictTuples: (se = (le = A.strictTuples) !== null && le !== void 0 ? le : Wt) !== null && se !== void 0 ? se : "log",
      strictRequired: (ue = (Q = A.strictRequired) !== null && Q !== void 0 ? Q : Wt) !== null && ue !== void 0 ? ue : !1,
      code: A.code ? { ...A.code, optimize: Ma, regExp: Da } : { optimize: Ma, regExp: Da },
      loopRequired: (G = A.loopRequired) !== null && G !== void 0 ? G : g,
      loopEnum: (de = A.loopEnum) !== null && de !== void 0 ? de : g,
      meta: ($e = A.meta) !== null && $e !== void 0 ? $e : !0,
      messages: (ke = A.messages) !== null && ke !== void 0 ? ke : !0,
      inlineRefs: (Ve = A.inlineRefs) !== null && Ve !== void 0 ? Ve : !0,
      schemaId: (Se = A.schemaId) !== null && Se !== void 0 ? Se : "$id",
      addUsedSchema: (je = A.addUsedSchema) !== null && je !== void 0 ? je : !0,
      validateSchema: (be = A.validateSchema) !== null && be !== void 0 ? be : !0,
      validateFormats: (st = A.validateFormats) !== null && st !== void 0 ? st : !0,
      unicodeRegExp: (tt = A.unicodeRegExp) !== null && tt !== void 0 ? tt : !0,
      int32range: (ca = A.int32range) !== null && ca !== void 0 ? ca : !0,
      uriResolver: Qn
    };
  }
  class S {
    constructor(x = {}) {
      this.schemas = {}, this.refs = {}, this.formats = {}, this._compilations = /* @__PURE__ */ new Set(), this._loading = {}, this._cache = /* @__PURE__ */ new Map(), x = this.opts = { ...x, ...P(x) };
      const { es5: V, lines: $ } = this.opts.code;
      this.scope = new o.ValueScope({ scope: {}, prefixes: h, es5: V, lines: $ }), this.logger = O(x.logger);
      const b = x.validateFormats;
      x.validateFormats = !1, this.RULES = (0, n.getRules)(), _.call(this, y, x, "NOT SUPPORTED"), _.call(this, f, x, "DEPRECATED", "warn"), this._metaOpts = W.call(this), x.formats && R.call(this), this._addVocabularies(), this._addDefaultMetaSchema(), x.keywords && U.call(this, x.keywords), typeof x.meta == "object" && this.addMetaSchema(x.meta), F.call(this), x.validateFormats = b;
    }
    _addVocabularies() {
      this.addKeyword("$async");
    }
    _addDefaultMetaSchema() {
      const { $data: x, meta: V, schemaId: $ } = this.opts;
      let b = d;
      $ === "id" && (b = { ...d }, b.id = b.$id, delete b.$id), V && x && this.addMetaSchema(b, b[$], !1);
    }
    defaultMeta() {
      const { meta: x, schemaId: V } = this.opts;
      return this.opts.defaultMeta = typeof x == "object" ? x[V] || x : void 0;
    }
    validate(x, V) {
      let $;
      if (typeof x == "string") {
        if ($ = this.getSchema(x), !$)
          throw new Error(`no schema with key or ref "${x}"`);
      } else
        $ = this.compile(x);
      const b = $(V);
      return "$async" in $ || (this.errors = $.errors), b;
    }
    compile(x, V) {
      const $ = this._addSchema(x, V);
      return $.validate || this._compileSchemaEnv($);
    }
    compileAsync(x, V) {
      if (typeof this.opts.loadSchema != "function")
        throw new Error("options.loadSchema should be a function");
      const { loadSchema: $ } = this.opts;
      return b.call(this, x, V);
      async function b(Y, le) {
        await I.call(this, Y.$schema);
        const se = this._addSchema(Y, le);
        return se.validate || k.call(this, se);
      }
      async function I(Y) {
        Y && !this.getSchema(Y) && await b.call(this, { $ref: Y }, !0);
      }
      async function k(Y) {
        try {
          return this._compileSchemaEnv(Y);
        } catch (le) {
          if (!(le instanceof i.default))
            throw le;
          return E.call(this, le), await M.call(this, le.missingSchema), k.call(this, Y);
        }
      }
      function E({ missingSchema: Y, missingRef: le }) {
        if (this.refs[Y])
          throw new Error(`AnySchema ${Y} is loaded but ${le} cannot be resolved`);
      }
      async function M(Y) {
        const le = await K.call(this, Y);
        this.refs[Y] || await I.call(this, le.$schema), this.refs[Y] || this.addSchema(le, Y, V);
      }
      async function K(Y) {
        const le = this._loading[Y];
        if (le)
          return le;
        try {
          return await (this._loading[Y] = $(Y));
        } finally {
          delete this._loading[Y];
        }
      }
    }
    // Adds schema to the instance
    addSchema(x, V, $, b = this.opts.validateSchema) {
      if (Array.isArray(x)) {
        for (const k of x)
          this.addSchema(k, void 0, $, b);
        return this;
      }
      let I;
      if (typeof x == "object") {
        const { schemaId: k } = this.opts;
        if (I = x[k], I !== void 0 && typeof I != "string")
          throw new Error(`schema ${k} must be string`);
      }
      return V = (0, l.normalizeId)(V || I), this._checkUnique(V), this.schemas[V] = this._addSchema(x, $, V, b, !0), this;
    }
    // Add schema that will be used to validate other schemas
    // options in META_IGNORE_OPTIONS are alway set to false
    addMetaSchema(x, V, $ = this.opts.validateSchema) {
      return this.addSchema(x, V, !0, $), this;
    }
    //  Validate schema against its meta-schema
    validateSchema(x, V) {
      if (typeof x == "boolean")
        return !0;
      let $;
      if ($ = x.$schema, $ !== void 0 && typeof $ != "string")
        throw new Error("$schema must be a string");
      if ($ = $ || this.opts.defaultMeta || this.defaultMeta(), !$)
        return this.logger.warn("meta-schema not available"), this.errors = null, !0;
      const b = this.validate($, x);
      if (!b && V) {
        const I = "schema is invalid: " + this.errorsText();
        if (this.opts.validateSchema === "log")
          this.logger.error(I);
        else
          throw new Error(I);
      }
      return b;
    }
    // Get compiled schema by `key` or `ref`.
    // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)
    getSchema(x) {
      let V;
      for (; typeof (V = j.call(this, x)) == "string"; )
        x = V;
      if (V === void 0) {
        const { schemaId: $ } = this.opts, b = new s.SchemaEnv({ schema: {}, schemaId: $ });
        if (V = s.resolveSchema.call(this, b, x), !V)
          return;
        this.refs[x] = V;
      }
      return V.validate || this._compileSchemaEnv(V);
    }
    // Remove cached schema(s).
    // If no parameter is passed all schemas but meta-schemas are removed.
    // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.
    // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.
    removeSchema(x) {
      if (x instanceof RegExp)
        return this._removeAllSchemas(this.schemas, x), this._removeAllSchemas(this.refs, x), this;
      switch (typeof x) {
        case "undefined":
          return this._removeAllSchemas(this.schemas), this._removeAllSchemas(this.refs), this._cache.clear(), this;
        case "string": {
          const V = j.call(this, x);
          return typeof V == "object" && this._cache.delete(V.schema), delete this.schemas[x], delete this.refs[x], this;
        }
        case "object": {
          const V = x;
          this._cache.delete(V);
          let $ = x[this.opts.schemaId];
          return $ && ($ = (0, l.normalizeId)($), delete this.schemas[$], delete this.refs[$]), this;
        }
        default:
          throw new Error("ajv.removeSchema: invalid parameter");
      }
    }
    // add "vocabulary" - a collection of keywords
    addVocabulary(x) {
      for (const V of x)
        this.addKeyword(V);
      return this;
    }
    addKeyword(x, V) {
      let $;
      if (typeof x == "string")
        $ = x, typeof V == "object" && (this.logger.warn("these parameters are deprecated, see docs for addKeyword"), V.keyword = $);
      else if (typeof x == "object" && V === void 0) {
        if (V = x, $ = V.keyword, Array.isArray($) && !$.length)
          throw new Error("addKeywords: keyword must be string or non-empty array");
      } else
        throw new Error("invalid addKeywords parameters");
      if (N.call(this, $, V), !V)
        return (0, c.eachItem)($, (I) => z.call(this, I)), this;
      ae.call(this, V);
      const b = {
        ...V,
        type: (0, u.getJSONTypes)(V.type),
        schemaType: (0, u.getJSONTypes)(V.schemaType)
      };
      return (0, c.eachItem)($, b.type.length === 0 ? (I) => z.call(this, I, b) : (I) => b.type.forEach((k) => z.call(this, I, b, k))), this;
    }
    getKeyword(x) {
      const V = this.RULES.all[x];
      return typeof V == "object" ? V.definition : !!V;
    }
    // Remove keyword
    removeKeyword(x) {
      const { RULES: V } = this;
      delete V.keywords[x], delete V.all[x];
      for (const $ of V.rules) {
        const b = $.rules.findIndex((I) => I.keyword === x);
        b >= 0 && $.rules.splice(b, 1);
      }
      return this;
    }
    // Add format
    addFormat(x, V) {
      return typeof V == "string" && (V = new RegExp(V)), this.formats[x] = V, this;
    }
    errorsText(x = this.errors, { separator: V = ", ", dataVar: $ = "data" } = {}) {
      return !x || x.length === 0 ? "No errors" : x.map((b) => `${$}${b.instancePath} ${b.message}`).reduce((b, I) => b + V + I);
    }
    $dataMetaSchema(x, V) {
      const $ = this.RULES.all;
      x = JSON.parse(JSON.stringify(x));
      for (const b of V) {
        const I = b.split("/").slice(1);
        let k = x;
        for (const E of I)
          k = k[E];
        for (const E in $) {
          const M = $[E];
          if (typeof M != "object")
            continue;
          const { $data: K } = M.definition, Y = k[E];
          K && Y && (k[E] = L(Y));
        }
      }
      return x;
    }
    _removeAllSchemas(x, V) {
      for (const $ in x) {
        const b = x[$];
        (!V || V.test($)) && (typeof b == "string" ? delete x[$] : b && !b.meta && (this._cache.delete(b.schema), delete x[$]));
      }
    }
    _addSchema(x, V, $, b = this.opts.validateSchema, I = this.opts.addUsedSchema) {
      let k;
      const { schemaId: E } = this.opts;
      if (typeof x == "object")
        k = x[E];
      else {
        if (this.opts.jtd)
          throw new Error("schema must be object");
        if (typeof x != "boolean")
          throw new Error("schema must be object or boolean");
      }
      let M = this._cache.get(x);
      if (M !== void 0)
        return M;
      $ = (0, l.normalizeId)(k || $);
      const K = l.getSchemaRefs.call(this, x, $);
      return M = new s.SchemaEnv({ schema: x, schemaId: E, meta: V, baseId: $, localRefs: K }), this._cache.set(M.schema, M), I && !$.startsWith("#") && ($ && this._checkUnique($), this.refs[$] = M), b && this.validateSchema(x, !0), M;
    }
    _checkUnique(x) {
      if (this.schemas[x] || this.refs[x])
        throw new Error(`schema with key or id "${x}" already exists`);
    }
    _compileSchemaEnv(x) {
      if (x.meta ? this._compileMetaSchema(x) : s.compileSchema.call(this, x), !x.validate)
        throw new Error("ajv implementation error");
      return x.validate;
    }
    _compileMetaSchema(x) {
      const V = this.opts;
      this.opts = this._metaOpts;
      try {
        s.compileSchema.call(this, x);
      } finally {
        this.opts = V;
      }
    }
  }
  S.ValidationError = r.default, S.MissingRefError = i.default, e.default = S;
  function _(A, x, V, $ = "error") {
    for (const b in A) {
      const I = b;
      I in x && this.logger[$](`${V}: option ${b}. ${A[I]}`);
    }
  }
  function j(A) {
    return A = (0, l.normalizeId)(A), this.schemas[A] || this.refs[A];
  }
  function F() {
    const A = this.opts.schemas;
    if (A)
      if (Array.isArray(A))
        this.addSchema(A);
      else
        for (const x in A)
          this.addSchema(A[x], x);
  }
  function R() {
    for (const A in this.opts.formats) {
      const x = this.opts.formats[A];
      x && this.addFormat(A, x);
    }
  }
  function U(A) {
    if (Array.isArray(A)) {
      this.addVocabulary(A);
      return;
    }
    this.logger.warn("keywords option as map is deprecated, pass array");
    for (const x in A) {
      const V = A[x];
      V.keyword || (V.keyword = x), this.addKeyword(V);
    }
  }
  function W() {
    const A = { ...this.opts };
    for (const x of p)
      delete A[x];
    return A;
  }
  const D = { log() {
  }, warn() {
  }, error() {
  } };
  function O(A) {
    if (A === !1)
      return D;
    if (A === void 0)
      return console;
    if (A.log && A.warn && A.error)
      return A;
    throw new Error("logger must implement log, warn and error methods");
  }
  const B = /^[a-z_$][a-z0-9_$:-]*$/i;
  function N(A, x) {
    const { RULES: V } = this;
    if ((0, c.eachItem)(A, ($) => {
      if (V.keywords[$])
        throw new Error(`Keyword ${$} is already defined`);
      if (!B.test($))
        throw new Error(`Keyword ${$} has invalid name`);
    }), !!x && x.$data && !("code" in x || "validate" in x))
      throw new Error('$data keyword must have "code" or "validate" function');
  }
  function z(A, x, V) {
    var $;
    const b = x == null ? void 0 : x.post;
    if (V && b)
      throw new Error('keyword with "post" flag cannot have "type"');
    const { RULES: I } = this;
    let k = b ? I.post : I.rules.find(({ type: M }) => M === V);
    if (k || (k = { type: V, rules: [] }, I.rules.push(k)), I.keywords[A] = !0, !x)
      return;
    const E = {
      keyword: A,
      definition: {
        ...x,
        type: (0, u.getJSONTypes)(x.type),
        schemaType: (0, u.getJSONTypes)(x.schemaType)
      }
    };
    x.before ? J.call(this, k, E, x.before) : k.rules.push(E), I.all[A] = E, ($ = x.implements) === null || $ === void 0 || $.forEach((M) => this.addKeyword(M));
  }
  function J(A, x, V) {
    const $ = A.rules.findIndex((b) => b.keyword === V);
    $ >= 0 ? A.rules.splice($, 0, x) : (A.rules.push(x), this.logger.warn(`rule ${V} is not defined`));
  }
  function ae(A) {
    let { metaSchema: x } = A;
    x !== void 0 && (A.$data && this.opts.$data && (x = L(x)), A.validateSchema = this.compile(x, !0));
  }
  const X = {
    $ref: "https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#"
  };
  function L(A) {
    return { anyOf: [A, X] };
  }
})(Ko);
var Ds = {}, iu = {}, su = {};
Object.defineProperty(su, "__esModule", { value: !0 });
const Lk = {
  keyword: "id",
  code() {
    throw new Error('NOT SUPPORTED: keyword "id", use "$id" for schema ID');
  }
};
su.default = Lk;
var nn = {};
Object.defineProperty(nn, "__esModule", { value: !0 });
nn.callRef = nn.getValidate = void 0;
const Bk = Kn, md = Re, Yt = Ie, nr = Qt, vd = Nt, Ri = he, Fk = {
  keyword: "$ref",
  schemaType: "string",
  code(e) {
    const { gen: t, schema: a, it: r } = e, { baseId: i, schemaEnv: n, validateName: s, opts: o, self: l } = r, { root: u } = n;
    if ((a === "#" || a === "#/") && i === u.baseId)
      return d();
    const c = vd.resolveRef.call(l, u, i, a);
    if (c === void 0)
      throw new Bk.default(r.opts.uriResolver, i, a);
    if (c instanceof vd.SchemaEnv)
      return m(c);
    return v(c);
    function d() {
      if (n === u)
        return Qi(e, s, n, n.$async);
      const p = t.scopeValue("root", { ref: u });
      return Qi(e, (0, Yt._)`${p}.validate`, u, u.$async);
    }
    function m(p) {
      const h = nv(e, p);
      Qi(e, h, p, p.$async);
    }
    function v(p) {
      const h = t.scopeValue("schema", o.code.source === !0 ? { ref: p, code: (0, Yt.stringify)(p) } : { ref: p }), y = t.name("valid"), f = e.subschema({
        schema: p,
        dataTypes: [],
        schemaPath: Yt.nil,
        topSchemaRef: h,
        errSchemaPath: a
      }, y);
      e.mergeEvaluated(f), e.ok(y);
    }
  }
};
function nv(e, t) {
  const { gen: a } = e;
  return t.validate ? a.scopeValue("validate", { ref: t.validate }) : (0, Yt._)`${a.scopeValue("wrapper", { ref: t })}.validate`;
}
nn.getValidate = nv;
function Qi(e, t, a, r) {
  const { gen: i, it: n } = e, { allErrors: s, schemaEnv: o, opts: l } = n, u = l.passContext ? nr.default.this : Yt.nil;
  r ? c() : d();
  function c() {
    if (!o.$async)
      throw new Error("async schema referenced by sync schema");
    const p = i.let("valid");
    i.try(() => {
      i.code((0, Yt._)`await ${(0, md.callValidateCode)(e, t, u)}`), v(t), s || i.assign(p, !0);
    }, (h) => {
      i.if((0, Yt._)`!(${h} instanceof ${n.ValidationError})`, () => i.throw(h)), m(h), s || i.assign(p, !1);
    }), e.ok(p);
  }
  function d() {
    e.result((0, md.callValidateCode)(e, t, u), () => v(t), () => m(t));
  }
  function m(p) {
    const h = (0, Yt._)`${p}.errors`;
    i.assign(nr.default.vErrors, (0, Yt._)`${nr.default.vErrors} === null ? ${h} : ${nr.default.vErrors}.concat(${h})`), i.assign(nr.default.errors, (0, Yt._)`${nr.default.vErrors}.length`);
  }
  function v(p) {
    var h;
    if (!n.opts.unevaluated)
      return;
    const y = (h = a == null ? void 0 : a.validate) === null || h === void 0 ? void 0 : h.evaluated;
    if (n.props !== !0)
      if (y && !y.dynamicProps)
        y.props !== void 0 && (n.props = Ri.mergeEvaluated.props(i, y.props, n.props));
      else {
        const f = i.var("props", (0, Yt._)`${p}.evaluated.props`);
        n.props = Ri.mergeEvaluated.props(i, f, n.props, Yt.Name);
      }
    if (n.items !== !0)
      if (y && !y.dynamicItems)
        y.items !== void 0 && (n.items = Ri.mergeEvaluated.items(i, y.items, n.items));
      else {
        const f = i.var("items", (0, Yt._)`${p}.evaluated.items`);
        n.items = Ri.mergeEvaluated.items(i, f, n.items, Yt.Name);
      }
  }
}
nn.callRef = Qi;
nn.default = Fk;
Object.defineProperty(iu, "__esModule", { value: !0 });
const qk = su, Kk = nn, Hk = [
  "$schema",
  "$id",
  "$defs",
  "$vocabulary",
  { keyword: "$comment" },
  "definitions",
  qk.default,
  Kk.default
];
iu.default = Hk;
var lu = {}, ou = {};
Object.defineProperty(ou, "__esModule", { value: !0 });
const ls = Ie, cn = ls.operators, os = {
  maximum: { okStr: "<=", ok: cn.LTE, fail: cn.GT },
  minimum: { okStr: ">=", ok: cn.GTE, fail: cn.LT },
  exclusiveMaximum: { okStr: "<", ok: cn.LT, fail: cn.GTE },
  exclusiveMinimum: { okStr: ">", ok: cn.GT, fail: cn.LTE }
}, Uk = {
  message: ({ keyword: e, schemaCode: t }) => (0, ls.str)`must be ${os[e].okStr} ${t}`,
  params: ({ keyword: e, schemaCode: t }) => (0, ls._)`{comparison: ${os[e].okStr}, limit: ${t}}`
}, Wk = {
  keyword: Object.keys(os),
  type: "number",
  schemaType: "number",
  $data: !0,
  error: Uk,
  code(e) {
    const { keyword: t, data: a, schemaCode: r } = e;
    e.fail$data((0, ls._)`${a} ${os[t].fail} ${r} || isNaN(${a})`);
  }
};
ou.default = Wk;
var uu = {};
Object.defineProperty(uu, "__esModule", { value: !0 });
const Qr = Ie, Gk = {
  message: ({ schemaCode: e }) => (0, Qr.str)`must be multiple of ${e}`,
  params: ({ schemaCode: e }) => (0, Qr._)`{multipleOf: ${e}}`
}, Yk = {
  keyword: "multipleOf",
  type: "number",
  schemaType: "number",
  $data: !0,
  error: Gk,
  code(e) {
    const { gen: t, data: a, schemaCode: r, it: i } = e, n = i.opts.multipleOfPrecision, s = t.let("res"), o = n ? (0, Qr._)`Math.abs(Math.round(${s}) - ${s}) > 1e-${n}` : (0, Qr._)`${s} !== parseInt(${s})`;
    e.fail$data((0, Qr._)`(${r} === 0 || (${s} = ${a}/${r}, ${o}))`);
  }
};
uu.default = Yk;
var cu = {}, du = {};
Object.defineProperty(du, "__esModule", { value: !0 });
function rv(e) {
  const t = e.length;
  let a = 0, r = 0, i;
  for (; r < t; )
    a++, i = e.charCodeAt(r++), i >= 55296 && i <= 56319 && r < t && (i = e.charCodeAt(r), (i & 64512) === 56320 && r++);
  return a;
}
du.default = rv;
rv.code = 'require("ajv/dist/runtime/ucs2length").default';
Object.defineProperty(cu, "__esModule", { value: !0 });
const Cn = Ie, Xk = he, Zk = du, Jk = {
  message({ keyword: e, schemaCode: t }) {
    const a = e === "maxLength" ? "more" : "fewer";
    return (0, Cn.str)`must NOT have ${a} than ${t} characters`;
  },
  params: ({ schemaCode: e }) => (0, Cn._)`{limit: ${e}}`
}, Qk = {
  keyword: ["maxLength", "minLength"],
  type: "string",
  schemaType: "number",
  $data: !0,
  error: Jk,
  code(e) {
    const { keyword: t, data: a, schemaCode: r, it: i } = e, n = t === "maxLength" ? Cn.operators.GT : Cn.operators.LT, s = i.opts.unicode === !1 ? (0, Cn._)`${a}.length` : (0, Cn._)`${(0, Xk.useFunc)(e.gen, Zk.default)}(${a})`;
    e.fail$data((0, Cn._)`${s} ${n} ${r}`);
  }
};
cu.default = Qk;
var fu = {};
Object.defineProperty(fu, "__esModule", { value: !0 });
const e0 = Re, us = Ie, t0 = {
  message: ({ schemaCode: e }) => (0, us.str)`must match pattern "${e}"`,
  params: ({ schemaCode: e }) => (0, us._)`{pattern: ${e}}`
}, a0 = {
  keyword: "pattern",
  type: "string",
  schemaType: "string",
  $data: !0,
  error: t0,
  code(e) {
    const { data: t, $data: a, schema: r, schemaCode: i, it: n } = e, s = n.opts.unicodeRegExp ? "u" : "", o = a ? (0, us._)`(new RegExp(${i}, ${s}))` : (0, e0.usePattern)(e, r);
    e.fail$data((0, us._)`!${o}.test(${t})`);
  }
};
fu.default = a0;
var mu = {};
Object.defineProperty(mu, "__esModule", { value: !0 });
const ei = Ie, n0 = {
  message({ keyword: e, schemaCode: t }) {
    const a = e === "maxProperties" ? "more" : "fewer";
    return (0, ei.str)`must NOT have ${a} than ${t} properties`;
  },
  params: ({ schemaCode: e }) => (0, ei._)`{limit: ${e}}`
}, r0 = {
  keyword: ["maxProperties", "minProperties"],
  type: "object",
  schemaType: "number",
  $data: !0,
  error: n0,
  code(e) {
    const { keyword: t, data: a, schemaCode: r } = e, i = t === "maxProperties" ? ei.operators.GT : ei.operators.LT;
    e.fail$data((0, ei._)`Object.keys(${a}).length ${i} ${r}`);
  }
};
mu.default = r0;
var vu = {};
Object.defineProperty(vu, "__esModule", { value: !0 });
const Fr = Re, ti = Ie, i0 = he, s0 = {
  message: ({ params: { missingProperty: e } }) => (0, ti.str)`must have required property '${e}'`,
  params: ({ params: { missingProperty: e } }) => (0, ti._)`{missingProperty: ${e}}`
}, l0 = {
  keyword: "required",
  type: "object",
  schemaType: "array",
  $data: !0,
  error: s0,
  code(e) {
    const { gen: t, schema: a, schemaCode: r, data: i, $data: n, it: s } = e, { opts: o } = s;
    if (!n && a.length === 0)
      return;
    const l = a.length >= o.loopRequired;
    if (s.allErrors ? u() : c(), o.strictRequired) {
      const v = e.parentSchema.properties, { definedProperties: p } = e.it;
      for (const h of a)
        if ((v == null ? void 0 : v[h]) === void 0 && !p.has(h)) {
          const y = s.schemaEnv.baseId + s.errSchemaPath, f = `required property "${h}" is not defined at "${y}" (strictRequired)`;
          (0, i0.checkStrictMode)(s, f, s.opts.strictRequired);
        }
    }
    function u() {
      if (l || n)
        e.block$data(ti.nil, d);
      else
        for (const v of a)
          (0, Fr.checkReportMissingProp)(e, v);
    }
    function c() {
      const v = t.let("missing");
      if (l || n) {
        const p = t.let("valid", !0);
        e.block$data(p, () => m(v, p)), e.ok(p);
      } else
        t.if((0, Fr.checkMissingProp)(e, a, v)), (0, Fr.reportMissingProp)(e, v), t.else();
    }
    function d() {
      t.forOf("prop", r, (v) => {
        e.setParams({ missingProperty: v }), t.if((0, Fr.noPropertyInData)(t, i, v, o.ownProperties), () => e.error());
      });
    }
    function m(v, p) {
      e.setParams({ missingProperty: v }), t.forOf(v, r, () => {
        t.assign(p, (0, Fr.propertyInData)(t, i, v, o.ownProperties)), t.if((0, ti.not)(p), () => {
          e.error(), t.break();
        });
      }, ti.nil);
    }
  }
};
vu.default = l0;
var pu = {};
Object.defineProperty(pu, "__esModule", { value: !0 });
const ai = Ie, o0 = {
  message({ keyword: e, schemaCode: t }) {
    const a = e === "maxItems" ? "more" : "fewer";
    return (0, ai.str)`must NOT have ${a} than ${t} items`;
  },
  params: ({ schemaCode: e }) => (0, ai._)`{limit: ${e}}`
}, u0 = {
  keyword: ["maxItems", "minItems"],
  type: "array",
  schemaType: "number",
  $data: !0,
  error: o0,
  code(e) {
    const { keyword: t, data: a, schemaCode: r } = e, i = t === "maxItems" ? ai.operators.GT : ai.operators.LT;
    e.fail$data((0, ai._)`${a}.length ${i} ${r}`);
  }
};
pu.default = u0;
var hu = {}, ki = {};
Object.defineProperty(ki, "__esModule", { value: !0 });
const iv = Em;
iv.code = 'require("ajv/dist/runtime/equal").default';
ki.default = iv;
Object.defineProperty(hu, "__esModule", { value: !0 });
const gl = bt, Ct = Ie, c0 = he, d0 = ki, f0 = {
  message: ({ params: { i: e, j: t } }) => (0, Ct.str)`must NOT have duplicate items (items ## ${t} and ${e} are identical)`,
  params: ({ params: { i: e, j: t } }) => (0, Ct._)`{i: ${e}, j: ${t}}`
}, m0 = {
  keyword: "uniqueItems",
  type: "array",
  schemaType: "boolean",
  $data: !0,
  error: f0,
  code(e) {
    const { gen: t, data: a, $data: r, schema: i, parentSchema: n, schemaCode: s, it: o } = e;
    if (!r && !i)
      return;
    const l = t.let("valid"), u = n.items ? (0, gl.getSchemaTypes)(n.items) : [];
    e.block$data(l, c, (0, Ct._)`${s} === false`), e.ok(l);
    function c() {
      const p = t.let("i", (0, Ct._)`${a}.length`), h = t.let("j");
      e.setParams({ i: p, j: h }), t.assign(l, !0), t.if((0, Ct._)`${p} > 1`, () => (d() ? m : v)(p, h));
    }
    function d() {
      return u.length > 0 && !u.some((p) => p === "object" || p === "array");
    }
    function m(p, h) {
      const y = t.name("item"), f = (0, gl.checkDataTypes)(u, y, o.opts.strictNumbers, gl.DataType.Wrong), g = t.const("indices", (0, Ct._)`{}`);
      t.for((0, Ct._)`;${p}--;`, () => {
        t.let(y, (0, Ct._)`${a}[${p}]`), t.if(f, (0, Ct._)`continue`), u.length > 1 && t.if((0, Ct._)`typeof ${y} == "string"`, (0, Ct._)`${y} += "_"`), t.if((0, Ct._)`typeof ${g}[${y}] == "number"`, () => {
          t.assign(h, (0, Ct._)`${g}[${y}]`), e.error(), t.assign(l, !1).break();
        }).code((0, Ct._)`${g}[${y}] = ${p}`);
      });
    }
    function v(p, h) {
      const y = (0, c0.useFunc)(t, d0.default), f = t.name("outer");
      t.label(f).for((0, Ct._)`;${p}--;`, () => t.for((0, Ct._)`${h} = ${p}; ${h}--;`, () => t.if((0, Ct._)`${y}(${a}[${p}], ${a}[${h}])`, () => {
        e.error(), t.assign(l, !1).break(f);
      })));
    }
  }
};
hu.default = m0;
var yu = {};
Object.defineProperty(yu, "__esModule", { value: !0 });
const Ul = Ie, v0 = he, p0 = ki, h0 = {
  message: "must be equal to constant",
  params: ({ schemaCode: e }) => (0, Ul._)`{allowedValue: ${e}}`
}, y0 = {
  keyword: "const",
  $data: !0,
  error: h0,
  code(e) {
    const { gen: t, data: a, $data: r, schemaCode: i, schema: n } = e;
    r || n && typeof n == "object" ? e.fail$data((0, Ul._)`!${(0, v0.useFunc)(t, p0.default)}(${a}, ${i})`) : e.fail((0, Ul._)`${n} !== ${a}`);
  }
};
yu.default = y0;
var gu = {};
Object.defineProperty(gu, "__esModule", { value: !0 });
const Wr = Ie, g0 = he, b0 = ki, k0 = {
  message: "must be equal to one of the allowed values",
  params: ({ schemaCode: e }) => (0, Wr._)`{allowedValues: ${e}}`
}, w0 = {
  keyword: "enum",
  schemaType: "array",
  $data: !0,
  error: k0,
  code(e) {
    const { gen: t, data: a, $data: r, schema: i, schemaCode: n, it: s } = e;
    if (!r && i.length === 0)
      throw new Error("enum must have non-empty array");
    const o = i.length >= s.opts.loopEnum;
    let l;
    const u = () => l ?? (l = (0, g0.useFunc)(t, b0.default));
    let c;
    if (o || r)
      c = t.let("valid"), e.block$data(c, d);
    else {
      if (!Array.isArray(i))
        throw new Error("ajv implementation error");
      const v = t.const("vSchema", n);
      c = (0, Wr.or)(...i.map((p, h) => m(v, h)));
    }
    e.pass(c);
    function d() {
      t.assign(c, !1), t.forOf("v", n, (v) => t.if((0, Wr._)`${u()}(${a}, ${v})`, () => t.assign(c, !0).break()));
    }
    function m(v, p) {
      const h = i[p];
      return typeof h == "object" && h !== null ? (0, Wr._)`${u()}(${a}, ${v}[${p}])` : (0, Wr._)`${a} === ${h}`;
    }
  }
};
gu.default = w0;
Object.defineProperty(lu, "__esModule", { value: !0 });
const $0 = ou, S0 = uu, _0 = cu, P0 = fu, C0 = mu, x0 = vu, V0 = pu, I0 = hu, O0 = yu, E0 = gu, A0 = [
  // number
  $0.default,
  S0.default,
  // string
  _0.default,
  P0.default,
  // object
  C0.default,
  x0.default,
  // array
  V0.default,
  I0.default,
  // any
  { keyword: "type", schemaType: ["string", "array"] },
  { keyword: "nullable", schemaType: "boolean" },
  O0.default,
  E0.default
];
lu.default = A0;
var bu = {}, Or = {};
Object.defineProperty(Or, "__esModule", { value: !0 });
Or.validateAdditionalItems = void 0;
const xn = Ie, Wl = he, T0 = {
  message: ({ params: { len: e } }) => (0, xn.str)`must NOT have more than ${e} items`,
  params: ({ params: { len: e } }) => (0, xn._)`{limit: ${e}}`
}, j0 = {
  keyword: "additionalItems",
  type: "array",
  schemaType: ["boolean", "object"],
  before: "uniqueItems",
  error: T0,
  code(e) {
    const { parentSchema: t, it: a } = e, { items: r } = t;
    if (!Array.isArray(r)) {
      (0, Wl.checkStrictMode)(a, '"additionalItems" is ignored when "items" is not an array of schemas');
      return;
    }
    sv(e, r);
  }
};
function sv(e, t) {
  const { gen: a, schema: r, data: i, keyword: n, it: s } = e;
  s.items = !0;
  const o = a.const("len", (0, xn._)`${i}.length`);
  if (r === !1)
    e.setParams({ len: t.length }), e.pass((0, xn._)`${o} <= ${t.length}`);
  else if (typeof r == "object" && !(0, Wl.alwaysValidSchema)(s, r)) {
    const u = a.var("valid", (0, xn._)`${o} <= ${t.length}`);
    a.if((0, xn.not)(u), () => l(u)), e.ok(u);
  }
  function l(u) {
    a.forRange("i", t.length, o, (c) => {
      e.subschema({ keyword: n, dataProp: c, dataPropType: Wl.Type.Num }, u), s.allErrors || a.if((0, xn.not)(u), () => a.break());
    });
  }
}
Or.validateAdditionalItems = sv;
Or.default = j0;
var ku = {}, Er = {};
Object.defineProperty(Er, "__esModule", { value: !0 });
Er.validateTuple = void 0;
const pd = Ie, es = he, M0 = Re, D0 = {
  keyword: "items",
  type: "array",
  schemaType: ["object", "array", "boolean"],
  before: "uniqueItems",
  code(e) {
    const { schema: t, it: a } = e;
    if (Array.isArray(t))
      return lv(e, "additionalItems", t);
    a.items = !0, !(0, es.alwaysValidSchema)(a, t) && e.ok((0, M0.validateArray)(e));
  }
};
function lv(e, t, a = e.schema) {
  const { gen: r, parentSchema: i, data: n, keyword: s, it: o } = e;
  c(i), o.opts.unevaluated && a.length && o.items !== !0 && (o.items = es.mergeEvaluated.items(r, a.length, o.items));
  const l = r.name("valid"), u = r.const("len", (0, pd._)`${n}.length`);
  a.forEach((d, m) => {
    (0, es.alwaysValidSchema)(o, d) || (r.if((0, pd._)`${u} > ${m}`, () => e.subschema({
      keyword: s,
      schemaProp: m,
      dataProp: m
    }, l)), e.ok(l));
  });
  function c(d) {
    const { opts: m, errSchemaPath: v } = o, p = a.length, h = p === d.minItems && (p === d.maxItems || d[t] === !1);
    if (m.strictTuples && !h) {
      const y = `"${s}" is ${p}-tuple, but minItems or maxItems/${t} are not specified or different at path "${v}"`;
      (0, es.checkStrictMode)(o, y, m.strictTuples);
    }
  }
}
Er.validateTuple = lv;
Er.default = D0;
Object.defineProperty(ku, "__esModule", { value: !0 });
const R0 = Er, N0 = {
  keyword: "prefixItems",
  type: "array",
  schemaType: ["array"],
  before: "uniqueItems",
  code: (e) => (0, R0.validateTuple)(e, "items")
};
ku.default = N0;
var wu = {};
Object.defineProperty(wu, "__esModule", { value: !0 });
const hd = Ie, z0 = he, L0 = Re, B0 = Or, F0 = {
  message: ({ params: { len: e } }) => (0, hd.str)`must NOT have more than ${e} items`,
  params: ({ params: { len: e } }) => (0, hd._)`{limit: ${e}}`
}, q0 = {
  keyword: "items",
  type: "array",
  schemaType: ["object", "boolean"],
  before: "uniqueItems",
  error: F0,
  code(e) {
    const { schema: t, parentSchema: a, it: r } = e, { prefixItems: i } = a;
    r.items = !0, !(0, z0.alwaysValidSchema)(r, t) && (i ? (0, B0.validateAdditionalItems)(e, i) : e.ok((0, L0.validateArray)(e)));
  }
};
wu.default = q0;
var $u = {};
Object.defineProperty($u, "__esModule", { value: !0 });
const da = Ie, Ni = he, K0 = {
  message: ({ params: { min: e, max: t } }) => t === void 0 ? (0, da.str)`must contain at least ${e} valid item(s)` : (0, da.str)`must contain at least ${e} and no more than ${t} valid item(s)`,
  params: ({ params: { min: e, max: t } }) => t === void 0 ? (0, da._)`{minContains: ${e}}` : (0, da._)`{minContains: ${e}, maxContains: ${t}}`
}, H0 = {
  keyword: "contains",
  type: "array",
  schemaType: ["object", "boolean"],
  before: "uniqueItems",
  trackErrors: !0,
  error: K0,
  code(e) {
    const { gen: t, schema: a, parentSchema: r, data: i, it: n } = e;
    let s, o;
    const { minContains: l, maxContains: u } = r;
    n.opts.next ? (s = l === void 0 ? 1 : l, o = u) : s = 1;
    const c = t.const("len", (0, da._)`${i}.length`);
    if (e.setParams({ min: s, max: o }), o === void 0 && s === 0) {
      (0, Ni.checkStrictMode)(n, '"minContains" == 0 without "maxContains": "contains" keyword ignored');
      return;
    }
    if (o !== void 0 && s > o) {
      (0, Ni.checkStrictMode)(n, '"minContains" > "maxContains" is always invalid'), e.fail();
      return;
    }
    if ((0, Ni.alwaysValidSchema)(n, a)) {
      let h = (0, da._)`${c} >= ${s}`;
      o !== void 0 && (h = (0, da._)`${h} && ${c} <= ${o}`), e.pass(h);
      return;
    }
    n.items = !0;
    const d = t.name("valid");
    o === void 0 && s === 1 ? v(d, () => t.if(d, () => t.break())) : s === 0 ? (t.let(d, !0), o !== void 0 && t.if((0, da._)`${i}.length > 0`, m)) : (t.let(d, !1), m()), e.result(d, () => e.reset());
    function m() {
      const h = t.name("_valid"), y = t.let("count", 0);
      v(h, () => t.if(h, () => p(y)));
    }
    function v(h, y) {
      t.forRange("i", 0, c, (f) => {
        e.subschema({
          keyword: "contains",
          dataProp: f,
          dataPropType: Ni.Type.Num,
          compositeRule: !0
        }, h), y();
      });
    }
    function p(h) {
      t.code((0, da._)`${h}++`), o === void 0 ? t.if((0, da._)`${h} >= ${s}`, () => t.assign(d, !0).break()) : (t.if((0, da._)`${h} > ${o}`, () => t.assign(d, !1).break()), s === 1 ? t.assign(d, !0) : t.if((0, da._)`${h} >= ${s}`, () => t.assign(d, !0)));
    }
  }
};
$u.default = H0;
var Rs = {};
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.validateSchemaDeps = e.validatePropertyDeps = e.error = void 0;
  const t = Ie, a = he, r = Re;
  e.error = {
    message: ({ params: { property: l, depsCount: u, deps: c } }) => {
      const d = u === 1 ? "property" : "properties";
      return (0, t.str)`must have ${d} ${c} when property ${l} is present`;
    },
    params: ({ params: { property: l, depsCount: u, deps: c, missingProperty: d } }) => (0, t._)`{property: ${l},
    missingProperty: ${d},
    depsCount: ${u},
    deps: ${c}}`
    // TODO change to reference
  };
  const i = {
    keyword: "dependencies",
    type: "object",
    schemaType: "object",
    error: e.error,
    code(l) {
      const [u, c] = n(l);
      s(l, u), o(l, c);
    }
  };
  function n({ schema: l }) {
    const u = {}, c = {};
    for (const d in l) {
      if (d === "__proto__")
        continue;
      const m = Array.isArray(l[d]) ? u : c;
      m[d] = l[d];
    }
    return [u, c];
  }
  function s(l, u = l.schema) {
    const { gen: c, data: d, it: m } = l;
    if (Object.keys(u).length === 0)
      return;
    const v = c.let("missing");
    for (const p in u) {
      const h = u[p];
      if (h.length === 0)
        continue;
      const y = (0, r.propertyInData)(c, d, p, m.opts.ownProperties);
      l.setParams({
        property: p,
        depsCount: h.length,
        deps: h.join(", ")
      }), m.allErrors ? c.if(y, () => {
        for (const f of h)
          (0, r.checkReportMissingProp)(l, f);
      }) : (c.if((0, t._)`${y} && (${(0, r.checkMissingProp)(l, h, v)})`), (0, r.reportMissingProp)(l, v), c.else());
    }
  }
  e.validatePropertyDeps = s;
  function o(l, u = l.schema) {
    const { gen: c, data: d, keyword: m, it: v } = l, p = c.name("valid");
    for (const h in u)
      (0, a.alwaysValidSchema)(v, u[h]) || (c.if(
        (0, r.propertyInData)(c, d, h, v.opts.ownProperties),
        () => {
          const y = l.subschema({ keyword: m, schemaProp: h }, p);
          l.mergeValidEvaluated(y, p);
        },
        () => c.var(p, !0)
        // TODO var
      ), l.ok(p));
  }
  e.validateSchemaDeps = o, e.default = i;
})(Rs);
var Su = {};
Object.defineProperty(Su, "__esModule", { value: !0 });
const ov = Ie, U0 = he, W0 = {
  message: "property name must be valid",
  params: ({ params: e }) => (0, ov._)`{propertyName: ${e.propertyName}}`
}, G0 = {
  keyword: "propertyNames",
  type: "object",
  schemaType: ["object", "boolean"],
  error: W0,
  code(e) {
    const { gen: t, schema: a, data: r, it: i } = e;
    if ((0, U0.alwaysValidSchema)(i, a))
      return;
    const n = t.name("valid");
    t.forIn("key", r, (s) => {
      e.setParams({ propertyName: s }), e.subschema({
        keyword: "propertyNames",
        data: s,
        dataTypes: ["string"],
        propertyName: s,
        compositeRule: !0
      }, n), t.if((0, ov.not)(n), () => {
        e.error(!0), i.allErrors || t.break();
      });
    }), e.ok(n);
  }
};
Su.default = G0;
var Ns = {};
Object.defineProperty(Ns, "__esModule", { value: !0 });
const zi = Re, $a = Ie, Y0 = Qt, Li = he, X0 = {
  message: "must NOT have additional properties",
  params: ({ params: e }) => (0, $a._)`{additionalProperty: ${e.additionalProperty}}`
}, Z0 = {
  keyword: "additionalProperties",
  type: ["object"],
  schemaType: ["boolean", "object"],
  allowUndefined: !0,
  trackErrors: !0,
  error: X0,
  code(e) {
    const { gen: t, schema: a, parentSchema: r, data: i, errsCount: n, it: s } = e;
    if (!n)
      throw new Error("ajv implementation error");
    const { allErrors: o, opts: l } = s;
    if (s.props = !0, l.removeAdditional !== "all" && (0, Li.alwaysValidSchema)(s, a))
      return;
    const u = (0, zi.allSchemaProperties)(r.properties), c = (0, zi.allSchemaProperties)(r.patternProperties);
    d(), e.ok((0, $a._)`${n} === ${Y0.default.errors}`);
    function d() {
      t.forIn("key", i, (y) => {
        !u.length && !c.length ? p(y) : t.if(m(y), () => p(y));
      });
    }
    function m(y) {
      let f;
      if (u.length > 8) {
        const g = (0, Li.schemaRefOrVal)(s, r.properties, "properties");
        f = (0, zi.isOwnProperty)(t, g, y);
      } else u.length ? f = (0, $a.or)(...u.map((g) => (0, $a._)`${y} === ${g}`)) : f = $a.nil;
      return c.length && (f = (0, $a.or)(f, ...c.map((g) => (0, $a._)`${(0, zi.usePattern)(e, g)}.test(${y})`))), (0, $a.not)(f);
    }
    function v(y) {
      t.code((0, $a._)`delete ${i}[${y}]`);
    }
    function p(y) {
      if (l.removeAdditional === "all" || l.removeAdditional && a === !1) {
        v(y);
        return;
      }
      if (a === !1) {
        e.setParams({ additionalProperty: y }), e.error(), o || t.break();
        return;
      }
      if (typeof a == "object" && !(0, Li.alwaysValidSchema)(s, a)) {
        const f = t.name("valid");
        l.removeAdditional === "failing" ? (h(y, f, !1), t.if((0, $a.not)(f), () => {
          e.reset(), v(y);
        })) : (h(y, f), o || t.if((0, $a.not)(f), () => t.break()));
      }
    }
    function h(y, f, g) {
      const P = {
        keyword: "additionalProperties",
        dataProp: y,
        dataPropType: Li.Type.Str
      };
      g === !1 && Object.assign(P, {
        compositeRule: !0,
        createErrors: !1,
        allErrors: !1
      }), e.subschema(P, f);
    }
  }
};
Ns.default = Z0;
var _u = {};
Object.defineProperty(_u, "__esModule", { value: !0 });
const J0 = ra, yd = Re, bl = he, gd = Ns, Q0 = {
  keyword: "properties",
  type: "object",
  schemaType: "object",
  code(e) {
    const { gen: t, schema: a, parentSchema: r, data: i, it: n } = e;
    n.opts.removeAdditional === "all" && r.additionalProperties === void 0 && gd.default.code(new J0.KeywordCxt(n, gd.default, "additionalProperties"));
    const s = (0, yd.allSchemaProperties)(a);
    for (const d of s)
      n.definedProperties.add(d);
    n.opts.unevaluated && s.length && n.props !== !0 && (n.props = bl.mergeEvaluated.props(t, (0, bl.toHash)(s), n.props));
    const o = s.filter((d) => !(0, bl.alwaysValidSchema)(n, a[d]));
    if (o.length === 0)
      return;
    const l = t.name("valid");
    for (const d of o)
      u(d) ? c(d) : (t.if((0, yd.propertyInData)(t, i, d, n.opts.ownProperties)), c(d), n.allErrors || t.else().var(l, !0), t.endIf()), e.it.definedProperties.add(d), e.ok(l);
    function u(d) {
      return n.opts.useDefaults && !n.compositeRule && a[d].default !== void 0;
    }
    function c(d) {
      e.subschema({
        keyword: "properties",
        schemaProp: d,
        dataProp: d
      }, l);
    }
  }
};
_u.default = Q0;
var Pu = {};
Object.defineProperty(Pu, "__esModule", { value: !0 });
const bd = Re, Bi = Ie, kd = he, wd = he, ew = {
  keyword: "patternProperties",
  type: "object",
  schemaType: "object",
  code(e) {
    const { gen: t, schema: a, data: r, parentSchema: i, it: n } = e, { opts: s } = n, o = (0, bd.allSchemaProperties)(a), l = o.filter((h) => (0, kd.alwaysValidSchema)(n, a[h]));
    if (o.length === 0 || l.length === o.length && (!n.opts.unevaluated || n.props === !0))
      return;
    const u = s.strictSchema && !s.allowMatchingProperties && i.properties, c = t.name("valid");
    n.props !== !0 && !(n.props instanceof Bi.Name) && (n.props = (0, wd.evaluatedPropsToName)(t, n.props));
    const { props: d } = n;
    m();
    function m() {
      for (const h of o)
        u && v(h), n.allErrors ? p(h) : (t.var(c, !0), p(h), t.if(c));
    }
    function v(h) {
      for (const y in u)
        new RegExp(h).test(y) && (0, kd.checkStrictMode)(n, `property ${y} matches pattern ${h} (use allowMatchingProperties)`);
    }
    function p(h) {
      t.forIn("key", r, (y) => {
        t.if((0, Bi._)`${(0, bd.usePattern)(e, h)}.test(${y})`, () => {
          const f = l.includes(h);
          f || e.subschema({
            keyword: "patternProperties",
            schemaProp: h,
            dataProp: y,
            dataPropType: wd.Type.Str
          }, c), n.opts.unevaluated && d !== !0 ? t.assign((0, Bi._)`${d}[${y}]`, !0) : !f && !n.allErrors && t.if((0, Bi.not)(c), () => t.break());
        });
      });
    }
  }
};
Pu.default = ew;
var Cu = {};
Object.defineProperty(Cu, "__esModule", { value: !0 });
const tw = he, aw = {
  keyword: "not",
  schemaType: ["object", "boolean"],
  trackErrors: !0,
  code(e) {
    const { gen: t, schema: a, it: r } = e;
    if ((0, tw.alwaysValidSchema)(r, a)) {
      e.fail();
      return;
    }
    const i = t.name("valid");
    e.subschema({
      keyword: "not",
      compositeRule: !0,
      createErrors: !1,
      allErrors: !1
    }, i), e.failResult(i, () => e.reset(), () => e.error());
  },
  error: { message: "must NOT be valid" }
};
Cu.default = aw;
var xu = {};
Object.defineProperty(xu, "__esModule", { value: !0 });
const nw = Re, rw = {
  keyword: "anyOf",
  schemaType: "array",
  trackErrors: !0,
  code: nw.validateUnion,
  error: { message: "must match a schema in anyOf" }
};
xu.default = rw;
var Vu = {};
Object.defineProperty(Vu, "__esModule", { value: !0 });
const ts = Ie, iw = he, sw = {
  message: "must match exactly one schema in oneOf",
  params: ({ params: e }) => (0, ts._)`{passingSchemas: ${e.passing}}`
}, lw = {
  keyword: "oneOf",
  schemaType: "array",
  trackErrors: !0,
  error: sw,
  code(e) {
    const { gen: t, schema: a, parentSchema: r, it: i } = e;
    if (!Array.isArray(a))
      throw new Error("ajv implementation error");
    if (i.opts.discriminator && r.discriminator)
      return;
    const n = a, s = t.let("valid", !1), o = t.let("passing", null), l = t.name("_valid");
    e.setParams({ passing: o }), t.block(u), e.result(s, () => e.reset(), () => e.error(!0));
    function u() {
      n.forEach((c, d) => {
        let m;
        (0, iw.alwaysValidSchema)(i, c) ? t.var(l, !0) : m = e.subschema({
          keyword: "oneOf",
          schemaProp: d,
          compositeRule: !0
        }, l), d > 0 && t.if((0, ts._)`${l} && ${s}`).assign(s, !1).assign(o, (0, ts._)`[${o}, ${d}]`).else(), t.if(l, () => {
          t.assign(s, !0), t.assign(o, d), m && e.mergeEvaluated(m, ts.Name);
        });
      });
    }
  }
};
Vu.default = lw;
var Iu = {};
Object.defineProperty(Iu, "__esModule", { value: !0 });
const ow = he, uw = {
  keyword: "allOf",
  schemaType: "array",
  code(e) {
    const { gen: t, schema: a, it: r } = e;
    if (!Array.isArray(a))
      throw new Error("ajv implementation error");
    const i = t.name("valid");
    a.forEach((n, s) => {
      if ((0, ow.alwaysValidSchema)(r, n))
        return;
      const o = e.subschema({ keyword: "allOf", schemaProp: s }, i);
      e.ok(i), e.mergeEvaluated(o);
    });
  }
};
Iu.default = uw;
var Ou = {};
Object.defineProperty(Ou, "__esModule", { value: !0 });
const cs = Ie, uv = he, cw = {
  message: ({ params: e }) => (0, cs.str)`must match "${e.ifClause}" schema`,
  params: ({ params: e }) => (0, cs._)`{failingKeyword: ${e.ifClause}}`
}, dw = {
  keyword: "if",
  schemaType: ["object", "boolean"],
  trackErrors: !0,
  error: cw,
  code(e) {
    const { gen: t, parentSchema: a, it: r } = e;
    a.then === void 0 && a.else === void 0 && (0, uv.checkStrictMode)(r, '"if" without "then" and "else" is ignored');
    const i = $d(r, "then"), n = $d(r, "else");
    if (!i && !n)
      return;
    const s = t.let("valid", !0), o = t.name("_valid");
    if (l(), e.reset(), i && n) {
      const c = t.let("ifClause");
      e.setParams({ ifClause: c }), t.if(o, u("then", c), u("else", c));
    } else i ? t.if(o, u("then")) : t.if((0, cs.not)(o), u("else"));
    e.pass(s, () => e.error(!0));
    function l() {
      const c = e.subschema({
        keyword: "if",
        compositeRule: !0,
        createErrors: !1,
        allErrors: !1
      }, o);
      e.mergeEvaluated(c);
    }
    function u(c, d) {
      return () => {
        const m = e.subschema({ keyword: c }, o);
        t.assign(s, o), e.mergeValidEvaluated(m, s), d ? t.assign(d, (0, cs._)`${c}`) : e.setParams({ ifClause: c });
      };
    }
  }
};
function $d(e, t) {
  const a = e.schema[t];
  return a !== void 0 && !(0, uv.alwaysValidSchema)(e, a);
}
Ou.default = dw;
var Eu = {};
Object.defineProperty(Eu, "__esModule", { value: !0 });
const fw = he, mw = {
  keyword: ["then", "else"],
  schemaType: ["object", "boolean"],
  code({ keyword: e, parentSchema: t, it: a }) {
    t.if === void 0 && (0, fw.checkStrictMode)(a, `"${e}" without "if" is ignored`);
  }
};
Eu.default = mw;
Object.defineProperty(bu, "__esModule", { value: !0 });
const vw = Or, pw = ku, hw = Er, yw = wu, gw = $u, bw = Rs, kw = Su, ww = Ns, $w = _u, Sw = Pu, _w = Cu, Pw = xu, Cw = Vu, xw = Iu, Vw = Ou, Iw = Eu;
function Ow(e = !1) {
  const t = [
    // any
    _w.default,
    Pw.default,
    Cw.default,
    xw.default,
    Vw.default,
    Iw.default,
    // object
    kw.default,
    ww.default,
    bw.default,
    $w.default,
    Sw.default
  ];
  return e ? t.push(pw.default, yw.default) : t.push(vw.default, hw.default), t.push(gw.default), t;
}
bu.default = Ow;
var Au = {}, Tu = {};
Object.defineProperty(Tu, "__esModule", { value: !0 });
const ct = Ie, Ew = {
  message: ({ schemaCode: e }) => (0, ct.str)`must match format "${e}"`,
  params: ({ schemaCode: e }) => (0, ct._)`{format: ${e}}`
}, Aw = {
  keyword: "format",
  type: ["number", "string"],
  schemaType: "string",
  $data: !0,
  error: Ew,
  code(e, t) {
    const { gen: a, data: r, $data: i, schema: n, schemaCode: s, it: o } = e, { opts: l, errSchemaPath: u, schemaEnv: c, self: d } = o;
    if (!l.validateFormats)
      return;
    i ? m() : v();
    function m() {
      const p = a.scopeValue("formats", {
        ref: d.formats,
        code: l.code.formats
      }), h = a.const("fDef", (0, ct._)`${p}[${s}]`), y = a.let("fType"), f = a.let("format");
      a.if((0, ct._)`typeof ${h} == "object" && !(${h} instanceof RegExp)`, () => a.assign(y, (0, ct._)`${h}.type || "string"`).assign(f, (0, ct._)`${h}.validate`), () => a.assign(y, (0, ct._)`"string"`).assign(f, h)), e.fail$data((0, ct.or)(g(), P()));
      function g() {
        return l.strictSchema === !1 ? ct.nil : (0, ct._)`${s} && !${f}`;
      }
      function P() {
        const S = c.$async ? (0, ct._)`(${h}.async ? await ${f}(${r}) : ${f}(${r}))` : (0, ct._)`${f}(${r})`, _ = (0, ct._)`(typeof ${f} == "function" ? ${S} : ${f}.test(${r}))`;
        return (0, ct._)`${f} && ${f} !== true && ${y} === ${t} && !${_}`;
      }
    }
    function v() {
      const p = d.formats[n];
      if (!p) {
        g();
        return;
      }
      if (p === !0)
        return;
      const [h, y, f] = P(p);
      h === t && e.pass(S());
      function g() {
        if (l.strictSchema === !1) {
          d.logger.warn(_());
          return;
        }
        throw new Error(_());
        function _() {
          return `unknown format "${n}" ignored in schema at path "${u}"`;
        }
      }
      function P(_) {
        const j = _ instanceof RegExp ? (0, ct.regexpCode)(_) : l.code.formats ? (0, ct._)`${l.code.formats}${(0, ct.getProperty)(n)}` : void 0, F = a.scopeValue("formats", { key: n, ref: _, code: j });
        return typeof _ == "object" && !(_ instanceof RegExp) ? [_.type || "string", _.validate, (0, ct._)`${F}.validate`] : ["string", _, F];
      }
      function S() {
        if (typeof p == "object" && !(p instanceof RegExp) && p.async) {
          if (!c.$async)
            throw new Error("async format in sync schema");
          return (0, ct._)`await ${f}(${r})`;
        }
        return typeof y == "function" ? (0, ct._)`${f}(${r})` : (0, ct._)`${f}.test(${r})`;
      }
    }
  }
};
Tu.default = Aw;
Object.defineProperty(Au, "__esModule", { value: !0 });
const Tw = Tu, jw = [Tw.default];
Au.default = jw;
var pr = {};
Object.defineProperty(pr, "__esModule", { value: !0 });
pr.contentVocabulary = pr.metadataVocabulary = void 0;
pr.metadataVocabulary = [
  "title",
  "description",
  "default",
  "deprecated",
  "readOnly",
  "writeOnly",
  "examples"
];
pr.contentVocabulary = [
  "contentMediaType",
  "contentEncoding",
  "contentSchema"
];
Object.defineProperty(Ds, "__esModule", { value: !0 });
const Mw = iu, Dw = lu, Rw = bu, Nw = Au, Sd = pr, zw = [
  Mw.default,
  Dw.default,
  (0, Rw.default)(),
  Nw.default,
  Sd.metadataVocabulary,
  Sd.contentVocabulary
];
Ds.default = zw;
var ju = {}, Ar = {};
Object.defineProperty(Ar, "__esModule", { value: !0 });
Ar.dynamicAnchor = void 0;
const kl = Ie, Lw = Qt, _d = Nt, Bw = nn, Fw = {
  keyword: "$dynamicAnchor",
  schemaType: "string",
  code: (e) => cv(e, e.schema)
};
function cv(e, t) {
  const { gen: a, it: r } = e;
  r.schemaEnv.root.dynamicAnchors[t] = !0;
  const i = (0, kl._)`${Lw.default.dynamicAnchors}${(0, kl.getProperty)(t)}`, n = r.errSchemaPath === "#" ? r.validateName : qw(e);
  a.if((0, kl._)`!${i}`, () => a.assign(i, n));
}
Ar.dynamicAnchor = cv;
function qw(e) {
  const { schemaEnv: t, schema: a, self: r } = e.it, { root: i, baseId: n, localRefs: s, meta: o } = t.root, { schemaId: l } = r.opts, u = new _d.SchemaEnv({ schema: a, schemaId: l, root: i, baseId: n, localRefs: s, meta: o });
  return _d.compileSchema.call(r, u), (0, Bw.getValidate)(e, u);
}
Ar.default = Fw;
var Tr = {};
Object.defineProperty(Tr, "__esModule", { value: !0 });
Tr.dynamicRef = void 0;
const Pd = Ie, Kw = Qt, Cd = nn, Hw = {
  keyword: "$dynamicRef",
  schemaType: "string",
  code: (e) => dv(e, e.schema)
};
function dv(e, t) {
  const { gen: a, keyword: r, it: i } = e;
  if (t[0] !== "#")
    throw new Error(`"${r}" only supports hash fragment reference`);
  const n = t.slice(1);
  if (i.allErrors)
    s();
  else {
    const l = a.let("valid", !1);
    s(l), e.ok(l);
  }
  function s(l) {
    if (i.schemaEnv.root.dynamicAnchors[n]) {
      const u = a.let("_v", (0, Pd._)`${Kw.default.dynamicAnchors}${(0, Pd.getProperty)(n)}`);
      a.if(u, o(u, l), o(i.validateName, l));
    } else
      o(i.validateName, l)();
  }
  function o(l, u) {
    return u ? () => a.block(() => {
      (0, Cd.callRef)(e, l), a.let(u, !0);
    }) : () => (0, Cd.callRef)(e, l);
  }
}
Tr.dynamicRef = dv;
Tr.default = Hw;
var Mu = {};
Object.defineProperty(Mu, "__esModule", { value: !0 });
const Uw = Ar, Ww = he, Gw = {
  keyword: "$recursiveAnchor",
  schemaType: "boolean",
  code(e) {
    e.schema ? (0, Uw.dynamicAnchor)(e, "") : (0, Ww.checkStrictMode)(e.it, "$recursiveAnchor: false is ignored");
  }
};
Mu.default = Gw;
var Du = {};
Object.defineProperty(Du, "__esModule", { value: !0 });
const Yw = Tr, Xw = {
  keyword: "$recursiveRef",
  schemaType: "string",
  code: (e) => (0, Yw.dynamicRef)(e, e.schema)
};
Du.default = Xw;
Object.defineProperty(ju, "__esModule", { value: !0 });
const Zw = Ar, Jw = Tr, Qw = Mu, e$ = Du, t$ = [Zw.default, Jw.default, Qw.default, e$.default];
ju.default = t$;
var Ru = {}, Nu = {};
Object.defineProperty(Nu, "__esModule", { value: !0 });
const xd = Rs, a$ = {
  keyword: "dependentRequired",
  type: "object",
  schemaType: "object",
  error: xd.error,
  code: (e) => (0, xd.validatePropertyDeps)(e)
};
Nu.default = a$;
var zu = {};
Object.defineProperty(zu, "__esModule", { value: !0 });
const n$ = Rs, r$ = {
  keyword: "dependentSchemas",
  type: "object",
  schemaType: "object",
  code: (e) => (0, n$.validateSchemaDeps)(e)
};
zu.default = r$;
var Lu = {};
Object.defineProperty(Lu, "__esModule", { value: !0 });
const i$ = he, s$ = {
  keyword: ["maxContains", "minContains"],
  type: "array",
  schemaType: "number",
  code({ keyword: e, parentSchema: t, it: a }) {
    t.contains === void 0 && (0, i$.checkStrictMode)(a, `"${e}" without "contains" is ignored`);
  }
};
Lu.default = s$;
Object.defineProperty(Ru, "__esModule", { value: !0 });
const l$ = Nu, o$ = zu, u$ = Lu, c$ = [l$.default, o$.default, u$.default];
Ru.default = c$;
var Bu = {}, Fu = {};
Object.defineProperty(Fu, "__esModule", { value: !0 });
const fn = Ie, Vd = he, d$ = Qt, f$ = {
  message: "must NOT have unevaluated properties",
  params: ({ params: e }) => (0, fn._)`{unevaluatedProperty: ${e.unevaluatedProperty}}`
}, m$ = {
  keyword: "unevaluatedProperties",
  type: "object",
  schemaType: ["boolean", "object"],
  trackErrors: !0,
  error: f$,
  code(e) {
    const { gen: t, schema: a, data: r, errsCount: i, it: n } = e;
    if (!i)
      throw new Error("ajv implementation error");
    const { allErrors: s, props: o } = n;
    o instanceof fn.Name ? t.if((0, fn._)`${o} !== true`, () => t.forIn("key", r, (d) => t.if(u(o, d), () => l(d)))) : o !== !0 && t.forIn("key", r, (d) => o === void 0 ? l(d) : t.if(c(o, d), () => l(d))), n.props = !0, e.ok((0, fn._)`${i} === ${d$.default.errors}`);
    function l(d) {
      if (a === !1) {
        e.setParams({ unevaluatedProperty: d }), e.error(), s || t.break();
        return;
      }
      if (!(0, Vd.alwaysValidSchema)(n, a)) {
        const m = t.name("valid");
        e.subschema({
          keyword: "unevaluatedProperties",
          dataProp: d,
          dataPropType: Vd.Type.Str
        }, m), s || t.if((0, fn.not)(m), () => t.break());
      }
    }
    function u(d, m) {
      return (0, fn._)`!${d} || !${d}[${m}]`;
    }
    function c(d, m) {
      const v = [];
      for (const p in d)
        d[p] === !0 && v.push((0, fn._)`${m} !== ${p}`);
      return (0, fn.and)(...v);
    }
  }
};
Fu.default = m$;
var qu = {};
Object.defineProperty(qu, "__esModule", { value: !0 });
const Vn = Ie, Id = he, v$ = {
  message: ({ params: { len: e } }) => (0, Vn.str)`must NOT have more than ${e} items`,
  params: ({ params: { len: e } }) => (0, Vn._)`{limit: ${e}}`
}, p$ = {
  keyword: "unevaluatedItems",
  type: "array",
  schemaType: ["boolean", "object"],
  error: v$,
  code(e) {
    const { gen: t, schema: a, data: r, it: i } = e, n = i.items || 0;
    if (n === !0)
      return;
    const s = t.const("len", (0, Vn._)`${r}.length`);
    if (a === !1)
      e.setParams({ len: n }), e.fail((0, Vn._)`${s} > ${n}`);
    else if (typeof a == "object" && !(0, Id.alwaysValidSchema)(i, a)) {
      const l = t.var("valid", (0, Vn._)`${s} <= ${n}`);
      t.if((0, Vn.not)(l), () => o(l, n)), e.ok(l);
    }
    i.items = !0;
    function o(l, u) {
      t.forRange("i", u, s, (c) => {
        e.subschema({ keyword: "unevaluatedItems", dataProp: c, dataPropType: Id.Type.Num }, l), i.allErrors || t.if((0, Vn.not)(l), () => t.break());
      });
    }
  }
};
qu.default = p$;
Object.defineProperty(Bu, "__esModule", { value: !0 });
const h$ = Fu, y$ = qu, g$ = [h$.default, y$.default];
Bu.default = g$;
var zs = {}, Ls = {};
Object.defineProperty(Ls, "__esModule", { value: !0 });
Ls.DiscrError = void 0;
var Od;
(function(e) {
  e.Tag = "tag", e.Mapping = "mapping";
})(Od || (Ls.DiscrError = Od = {}));
Object.defineProperty(zs, "__esModule", { value: !0 });
const lr = Ie, Gl = Ls, Ed = Nt, b$ = Kn, k$ = he, w$ = {
  message: ({ params: { discrError: e, tagName: t } }) => e === Gl.DiscrError.Tag ? `tag "${t}" must be string` : `value of tag "${t}" must be in oneOf`,
  params: ({ params: { discrError: e, tag: t, tagName: a } }) => (0, lr._)`{error: ${e}, tag: ${a}, tagValue: ${t}}`
}, $$ = {
  keyword: "discriminator",
  type: "object",
  schemaType: "object",
  error: w$,
  code(e) {
    const { gen: t, data: a, schema: r, parentSchema: i, it: n } = e, { oneOf: s } = i;
    if (!n.opts.discriminator)
      throw new Error("discriminator: requires discriminator option");
    const o = r.propertyName;
    if (typeof o != "string")
      throw new Error("discriminator: requires propertyName");
    if (r.mapping)
      throw new Error("discriminator: mapping is not supported");
    if (!s)
      throw new Error("discriminator: requires oneOf keyword");
    const l = t.let("valid", !1), u = t.const("tag", (0, lr._)`${a}${(0, lr.getProperty)(o)}`);
    t.if((0, lr._)`typeof ${u} == "string"`, () => c(), () => e.error(!1, { discrError: Gl.DiscrError.Tag, tag: u, tagName: o })), e.ok(l);
    function c() {
      const v = m();
      t.if(!1);
      for (const p in v)
        t.elseIf((0, lr._)`${u} === ${p}`), t.assign(l, d(v[p]));
      t.else(), e.error(!1, { discrError: Gl.DiscrError.Mapping, tag: u, tagName: o }), t.endIf();
    }
    function d(v) {
      const p = t.name("valid"), h = e.subschema({ keyword: "oneOf", schemaProp: v }, p);
      return e.mergeEvaluated(h, lr.Name), p;
    }
    function m() {
      var v;
      const p = {}, h = f(i);
      let y = !0;
      for (let S = 0; S < s.length; S++) {
        let _ = s[S];
        if (_ != null && _.$ref && !(0, k$.schemaHasRulesButRef)(_, n.self.RULES)) {
          const F = _.$ref;
          if (_ = Ed.resolveRef.call(n.self, n.schemaEnv.root, n.baseId, F), _ instanceof Ed.SchemaEnv && (_ = _.schema), _ === void 0)
            throw new b$.default(n.opts.uriResolver, n.baseId, F);
        }
        const j = (v = _ == null ? void 0 : _.properties) === null || v === void 0 ? void 0 : v[o];
        if (typeof j != "object")
          throw new Error(`discriminator: oneOf subschemas (or referenced schemas) must have "properties/${o}"`);
        y = y && (h || f(_)), g(j, S);
      }
      if (!y)
        throw new Error(`discriminator: "${o}" must be required`);
      return p;
      function f({ required: S }) {
        return Array.isArray(S) && S.includes(o);
      }
      function g(S, _) {
        if (S.const)
          P(S.const, _);
        else if (S.enum)
          for (const j of S.enum)
            P(j, _);
        else
          throw new Error(`discriminator: "properties/${o}" must have "const" or "enum"`);
      }
      function P(S, _) {
        if (typeof S != "string" || S in p)
          throw new Error(`discriminator: "${o}" values must be unique strings`);
        p[S] = _;
      }
    }
  }
};
zs.default = $$;
var Ku = {};
const S$ = "https://json-schema.org/draft/2019-09/schema", _$ = "https://json-schema.org/draft/2019-09/schema", P$ = {
  "https://json-schema.org/draft/2019-09/vocab/core": !0,
  "https://json-schema.org/draft/2019-09/vocab/applicator": !0,
  "https://json-schema.org/draft/2019-09/vocab/validation": !0,
  "https://json-schema.org/draft/2019-09/vocab/meta-data": !0,
  "https://json-schema.org/draft/2019-09/vocab/format": !1,
  "https://json-schema.org/draft/2019-09/vocab/content": !0
}, C$ = !0, x$ = "Core and Validation specifications meta-schema", V$ = [
  {
    $ref: "meta/core"
  },
  {
    $ref: "meta/applicator"
  },
  {
    $ref: "meta/validation"
  },
  {
    $ref: "meta/meta-data"
  },
  {
    $ref: "meta/format"
  },
  {
    $ref: "meta/content"
  }
], I$ = [
  "object",
  "boolean"
], O$ = {
  definitions: {
    $comment: "While no longer an official keyword as it is replaced by $defs, this keyword is retained in the meta-schema to prevent incompatible extensions as it remains in common use.",
    type: "object",
    additionalProperties: {
      $recursiveRef: "#"
    },
    default: {}
  },
  dependencies: {
    $comment: '"dependencies" is no longer a keyword, but schema authors should avoid redefining it to facilitate a smooth transition to "dependentSchemas" and "dependentRequired"',
    type: "object",
    additionalProperties: {
      anyOf: [
        {
          $recursiveRef: "#"
        },
        {
          $ref: "meta/validation#/$defs/stringArray"
        }
      ]
    }
  }
}, E$ = {
  $schema: S$,
  $id: _$,
  $vocabulary: P$,
  $recursiveAnchor: C$,
  title: x$,
  allOf: V$,
  type: I$,
  properties: O$
}, A$ = "https://json-schema.org/draft/2019-09/schema", T$ = "https://json-schema.org/draft/2019-09/meta/applicator", j$ = {
  "https://json-schema.org/draft/2019-09/vocab/applicator": !0
}, M$ = !0, D$ = "Applicator vocabulary meta-schema", R$ = [
  "object",
  "boolean"
], N$ = {
  additionalItems: {
    $recursiveRef: "#"
  },
  unevaluatedItems: {
    $recursiveRef: "#"
  },
  items: {
    anyOf: [
      {
        $recursiveRef: "#"
      },
      {
        $ref: "#/$defs/schemaArray"
      }
    ]
  },
  contains: {
    $recursiveRef: "#"
  },
  additionalProperties: {
    $recursiveRef: "#"
  },
  unevaluatedProperties: {
    $recursiveRef: "#"
  },
  properties: {
    type: "object",
    additionalProperties: {
      $recursiveRef: "#"
    },
    default: {}
  },
  patternProperties: {
    type: "object",
    additionalProperties: {
      $recursiveRef: "#"
    },
    propertyNames: {
      format: "regex"
    },
    default: {}
  },
  dependentSchemas: {
    type: "object",
    additionalProperties: {
      $recursiveRef: "#"
    }
  },
  propertyNames: {
    $recursiveRef: "#"
  },
  if: {
    $recursiveRef: "#"
  },
  then: {
    $recursiveRef: "#"
  },
  else: {
    $recursiveRef: "#"
  },
  allOf: {
    $ref: "#/$defs/schemaArray"
  },
  anyOf: {
    $ref: "#/$defs/schemaArray"
  },
  oneOf: {
    $ref: "#/$defs/schemaArray"
  },
  not: {
    $recursiveRef: "#"
  }
}, z$ = {
  schemaArray: {
    type: "array",
    minItems: 1,
    items: {
      $recursiveRef: "#"
    }
  }
}, L$ = {
  $schema: A$,
  $id: T$,
  $vocabulary: j$,
  $recursiveAnchor: M$,
  title: D$,
  type: R$,
  properties: N$,
  $defs: z$
}, B$ = "https://json-schema.org/draft/2019-09/schema", F$ = "https://json-schema.org/draft/2019-09/meta/content", q$ = {
  "https://json-schema.org/draft/2019-09/vocab/content": !0
}, K$ = !0, H$ = "Content vocabulary meta-schema", U$ = [
  "object",
  "boolean"
], W$ = {
  contentMediaType: {
    type: "string"
  },
  contentEncoding: {
    type: "string"
  },
  contentSchema: {
    $recursiveRef: "#"
  }
}, G$ = {
  $schema: B$,
  $id: F$,
  $vocabulary: q$,
  $recursiveAnchor: K$,
  title: H$,
  type: U$,
  properties: W$
}, Y$ = "https://json-schema.org/draft/2019-09/schema", X$ = "https://json-schema.org/draft/2019-09/meta/core", Z$ = {
  "https://json-schema.org/draft/2019-09/vocab/core": !0
}, J$ = !0, Q$ = "Core vocabulary meta-schema", e1 = [
  "object",
  "boolean"
], t1 = {
  $id: {
    type: "string",
    format: "uri-reference",
    $comment: "Non-empty fragments not allowed.",
    pattern: "^[^#]*#?$"
  },
  $schema: {
    type: "string",
    format: "uri"
  },
  $anchor: {
    type: "string",
    pattern: "^[A-Za-z][-A-Za-z0-9.:_]*$"
  },
  $ref: {
    type: "string",
    format: "uri-reference"
  },
  $recursiveRef: {
    type: "string",
    format: "uri-reference"
  },
  $recursiveAnchor: {
    type: "boolean",
    default: !1
  },
  $vocabulary: {
    type: "object",
    propertyNames: {
      type: "string",
      format: "uri"
    },
    additionalProperties: {
      type: "boolean"
    }
  },
  $comment: {
    type: "string"
  },
  $defs: {
    type: "object",
    additionalProperties: {
      $recursiveRef: "#"
    },
    default: {}
  }
}, a1 = {
  $schema: Y$,
  $id: X$,
  $vocabulary: Z$,
  $recursiveAnchor: J$,
  title: Q$,
  type: e1,
  properties: t1
}, n1 = "https://json-schema.org/draft/2019-09/schema", r1 = "https://json-schema.org/draft/2019-09/meta/format", i1 = {
  "https://json-schema.org/draft/2019-09/vocab/format": !0
}, s1 = !0, l1 = "Format vocabulary meta-schema", o1 = [
  "object",
  "boolean"
], u1 = {
  format: {
    type: "string"
  }
}, c1 = {
  $schema: n1,
  $id: r1,
  $vocabulary: i1,
  $recursiveAnchor: s1,
  title: l1,
  type: o1,
  properties: u1
}, d1 = "https://json-schema.org/draft/2019-09/schema", f1 = "https://json-schema.org/draft/2019-09/meta/meta-data", m1 = {
  "https://json-schema.org/draft/2019-09/vocab/meta-data": !0
}, v1 = !0, p1 = "Meta-data vocabulary meta-schema", h1 = [
  "object",
  "boolean"
], y1 = {
  title: {
    type: "string"
  },
  description: {
    type: "string"
  },
  default: !0,
  deprecated: {
    type: "boolean",
    default: !1
  },
  readOnly: {
    type: "boolean",
    default: !1
  },
  writeOnly: {
    type: "boolean",
    default: !1
  },
  examples: {
    type: "array",
    items: !0
  }
}, g1 = {
  $schema: d1,
  $id: f1,
  $vocabulary: m1,
  $recursiveAnchor: v1,
  title: p1,
  type: h1,
  properties: y1
}, b1 = "https://json-schema.org/draft/2019-09/schema", k1 = "https://json-schema.org/draft/2019-09/meta/validation", w1 = {
  "https://json-schema.org/draft/2019-09/vocab/validation": !0
}, $1 = !0, S1 = "Validation vocabulary meta-schema", _1 = [
  "object",
  "boolean"
], P1 = {
  multipleOf: {
    type: "number",
    exclusiveMinimum: 0
  },
  maximum: {
    type: "number"
  },
  exclusiveMaximum: {
    type: "number"
  },
  minimum: {
    type: "number"
  },
  exclusiveMinimum: {
    type: "number"
  },
  maxLength: {
    $ref: "#/$defs/nonNegativeInteger"
  },
  minLength: {
    $ref: "#/$defs/nonNegativeIntegerDefault0"
  },
  pattern: {
    type: "string",
    format: "regex"
  },
  maxItems: {
    $ref: "#/$defs/nonNegativeInteger"
  },
  minItems: {
    $ref: "#/$defs/nonNegativeIntegerDefault0"
  },
  uniqueItems: {
    type: "boolean",
    default: !1
  },
  maxContains: {
    $ref: "#/$defs/nonNegativeInteger"
  },
  minContains: {
    $ref: "#/$defs/nonNegativeInteger",
    default: 1
  },
  maxProperties: {
    $ref: "#/$defs/nonNegativeInteger"
  },
  minProperties: {
    $ref: "#/$defs/nonNegativeIntegerDefault0"
  },
  required: {
    $ref: "#/$defs/stringArray"
  },
  dependentRequired: {
    type: "object",
    additionalProperties: {
      $ref: "#/$defs/stringArray"
    }
  },
  const: !0,
  enum: {
    type: "array",
    items: !0
  },
  type: {
    anyOf: [
      {
        $ref: "#/$defs/simpleTypes"
      },
      {
        type: "array",
        items: {
          $ref: "#/$defs/simpleTypes"
        },
        minItems: 1,
        uniqueItems: !0
      }
    ]
  }
}, C1 = {
  nonNegativeInteger: {
    type: "integer",
    minimum: 0
  },
  nonNegativeIntegerDefault0: {
    $ref: "#/$defs/nonNegativeInteger",
    default: 0
  },
  simpleTypes: {
    enum: [
      "array",
      "boolean",
      "integer",
      "null",
      "number",
      "object",
      "string"
    ]
  },
  stringArray: {
    type: "array",
    items: {
      type: "string"
    },
    uniqueItems: !0,
    default: []
  }
}, x1 = {
  $schema: b1,
  $id: k1,
  $vocabulary: w1,
  $recursiveAnchor: $1,
  title: S1,
  type: _1,
  properties: P1,
  $defs: C1
};
Object.defineProperty(Ku, "__esModule", { value: !0 });
const V1 = E$, I1 = L$, O1 = G$, E1 = a1, A1 = c1, T1 = g1, j1 = x1, M1 = ["/properties"];
function D1(e) {
  return [
    V1,
    I1,
    O1,
    E1,
    t(this, A1),
    T1,
    t(this, j1)
  ].forEach((a) => this.addMetaSchema(a, void 0, !1)), this;
  function t(a, r) {
    return e ? a.$dataMetaSchema(r, M1) : r;
  }
}
Ku.default = D1;
(function(e, t) {
  Object.defineProperty(t, "__esModule", { value: !0 }), t.MissingRefError = t.ValidationError = t.CodeGen = t.Name = t.nil = t.stringify = t.str = t._ = t.KeywordCxt = t.Ajv2019 = void 0;
  const a = Ko, r = Ds, i = ju, n = Ru, s = Bu, o = zs, l = Ku, u = "https://json-schema.org/draft/2019-09/schema";
  class c extends a.default {
    constructor(y = {}) {
      super({
        ...y,
        dynamicRef: !0,
        next: !0,
        unevaluated: !0
      });
    }
    _addVocabularies() {
      super._addVocabularies(), this.addVocabulary(i.default), r.default.forEach((y) => this.addVocabulary(y)), this.addVocabulary(n.default), this.addVocabulary(s.default), this.opts.discriminator && this.addKeyword(o.default);
    }
    _addDefaultMetaSchema() {
      super._addDefaultMetaSchema();
      const { $data: y, meta: f } = this.opts;
      f && (l.default.call(this, y), this.refs["http://json-schema.org/schema"] = u);
    }
    defaultMeta() {
      return this.opts.defaultMeta = super.defaultMeta() || (this.getSchema(u) ? u : void 0);
    }
  }
  t.Ajv2019 = c, e.exports = t = c, e.exports.Ajv2019 = c, Object.defineProperty(t, "__esModule", { value: !0 }), t.default = c;
  var d = ra;
  Object.defineProperty(t, "KeywordCxt", { enumerable: !0, get: function() {
    return d.KeywordCxt;
  } });
  var m = Ie;
  Object.defineProperty(t, "_", { enumerable: !0, get: function() {
    return m._;
  } }), Object.defineProperty(t, "str", { enumerable: !0, get: function() {
    return m.str;
  } }), Object.defineProperty(t, "stringify", { enumerable: !0, get: function() {
    return m.stringify;
  } }), Object.defineProperty(t, "nil", { enumerable: !0, get: function() {
    return m.nil;
  } }), Object.defineProperty(t, "Name", { enumerable: !0, get: function() {
    return m.Name;
  } }), Object.defineProperty(t, "CodeGen", { enumerable: !0, get: function() {
    return m.CodeGen;
  } });
  var v = Ir;
  Object.defineProperty(t, "ValidationError", { enumerable: !0, get: function() {
    return v.default;
  } });
  var p = Kn;
  Object.defineProperty(t, "MissingRefError", { enumerable: !0, get: function() {
    return p.default;
  } });
})(Bl, Bl.exports);
var R1 = Bl.exports;
const fv = /* @__PURE__ */ xr(R1);
var Yl = { exports: {} }, mv = {};
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.formatNames = e.fastFormats = e.fullFormats = void 0;
  function t(D, O) {
    return { validate: D, compare: O };
  }
  e.fullFormats = {
    // date: http://tools.ietf.org/html/rfc3339#section-5.6
    date: t(n, s),
    // date-time: http://tools.ietf.org/html/rfc3339#section-5.6
    time: t(l(!0), u),
    "date-time": t(m(!0), v),
    "iso-time": t(l(), c),
    "iso-date-time": t(m(), p),
    // duration: https://tools.ietf.org/html/rfc3339#appendix-A
    duration: /^P(?!$)((\d+Y)?(\d+M)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?|(\d+W)?)$/,
    uri: f,
    "uri-reference": /^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,
    // uri-template: https://tools.ietf.org/html/rfc6570
    "uri-template": /^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i,
    // For the source: https://gist.github.com/dperini/729294
    // For test cases: https://mathiasbynens.be/demo/url-regex
    url: /^(?:https?|ftp):\/\/(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)(?:\.(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)*(?:\.(?:[a-z\u{00a1}-\u{ffff}]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/iu,
    email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,
    hostname: /^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/i,
    // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html
    ipv4: /^(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)$/,
    ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))$/i,
    regex: W,
    // uuid: http://tools.ietf.org/html/rfc4122
    uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,
    // JSON-pointer: https://tools.ietf.org/html/rfc6901
    // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A
    "json-pointer": /^(?:\/(?:[^~/]|~0|~1)*)*$/,
    "json-pointer-uri-fragment": /^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,
    // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00
    "relative-json-pointer": /^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/,
    // the following formats are used by the openapi specification: https://spec.openapis.org/oas/v3.0.0#data-types
    // byte: https://github.com/miguelmota/is-base64
    byte: P,
    // signed 32 bit integer
    int32: { type: "number", validate: j },
    // signed 64 bit integer
    int64: { type: "number", validate: F },
    // C-type float
    float: { type: "number", validate: R },
    // C-type double
    double: { type: "number", validate: R },
    // hint to the UI to hide input strings
    password: !0,
    // unchecked string payload
    binary: !0
  }, e.fastFormats = {
    ...e.fullFormats,
    date: t(/^\d\d\d\d-[0-1]\d-[0-3]\d$/, s),
    time: t(/^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i, u),
    "date-time": t(/^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i, v),
    "iso-time": t(/^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i, c),
    "iso-date-time": t(/^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i, p),
    // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js
    uri: /^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/)?[^\s]*$/i,
    "uri-reference": /^(?:(?:[a-z][a-z0-9+\-.]*:)?\/?\/)?(?:[^\\\s#][^\s#]*)?(?:#[^\\\s]*)?$/i,
    // email (sources from jsen validator):
    // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363
    // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'wilful violation')
    email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i
  }, e.formatNames = Object.keys(e.fullFormats);
  function a(D) {
    return D % 4 === 0 && (D % 100 !== 0 || D % 400 === 0);
  }
  const r = /^(\d\d\d\d)-(\d\d)-(\d\d)$/, i = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  function n(D) {
    const O = r.exec(D);
    if (!O)
      return !1;
    const B = +O[1], N = +O[2], z = +O[3];
    return N >= 1 && N <= 12 && z >= 1 && z <= (N === 2 && a(B) ? 29 : i[N]);
  }
  function s(D, O) {
    if (D && O)
      return D > O ? 1 : D < O ? -1 : 0;
  }
  const o = /^(\d\d):(\d\d):(\d\d(?:\.\d+)?)(z|([+-])(\d\d)(?::?(\d\d))?)?$/i;
  function l(D) {
    return function(B) {
      const N = o.exec(B);
      if (!N)
        return !1;
      const z = +N[1], J = +N[2], ae = +N[3], X = N[4], L = N[5] === "-" ? -1 : 1, A = +(N[6] || 0), x = +(N[7] || 0);
      if (A > 23 || x > 59 || D && !X)
        return !1;
      if (z <= 23 && J <= 59 && ae < 60)
        return !0;
      const V = J - x * L, $ = z - A * L - (V < 0 ? 1 : 0);
      return ($ === 23 || $ === -1) && (V === 59 || V === -1) && ae < 61;
    };
  }
  function u(D, O) {
    if (!(D && O))
      return;
    const B = (/* @__PURE__ */ new Date("2020-01-01T" + D)).valueOf(), N = (/* @__PURE__ */ new Date("2020-01-01T" + O)).valueOf();
    if (B && N)
      return B - N;
  }
  function c(D, O) {
    if (!(D && O))
      return;
    const B = o.exec(D), N = o.exec(O);
    if (B && N)
      return D = B[1] + B[2] + B[3], O = N[1] + N[2] + N[3], D > O ? 1 : D < O ? -1 : 0;
  }
  const d = /t|\s/i;
  function m(D) {
    const O = l(D);
    return function(N) {
      const z = N.split(d);
      return z.length === 2 && n(z[0]) && O(z[1]);
    };
  }
  function v(D, O) {
    if (!(D && O))
      return;
    const B = new Date(D).valueOf(), N = new Date(O).valueOf();
    if (B && N)
      return B - N;
  }
  function p(D, O) {
    if (!(D && O))
      return;
    const [B, N] = D.split(d), [z, J] = O.split(d), ae = s(B, z);
    if (ae !== void 0)
      return ae || u(N, J);
  }
  const h = /\/|:/, y = /^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;
  function f(D) {
    return h.test(D) && y.test(D);
  }
  const g = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm;
  function P(D) {
    return g.lastIndex = 0, g.test(D);
  }
  const S = -2147483648, _ = 2 ** 31 - 1;
  function j(D) {
    return Number.isInteger(D) && D <= _ && D >= S;
  }
  function F(D) {
    return Number.isInteger(D);
  }
  function R() {
    return !0;
  }
  const U = /[^\\]\\Z/;
  function W(D) {
    if (U.test(D))
      return !1;
    try {
      return new RegExp(D), !0;
    } catch {
      return !1;
    }
  }
})(mv);
var vv = {}, Xl = { exports: {} };
const N1 = "http://json-schema.org/draft-07/schema#", z1 = "http://json-schema.org/draft-07/schema#", L1 = "Core schema meta-schema", B1 = {
  schemaArray: {
    type: "array",
    minItems: 1,
    items: {
      $ref: "#"
    }
  },
  nonNegativeInteger: {
    type: "integer",
    minimum: 0
  },
  nonNegativeIntegerDefault0: {
    allOf: [
      {
        $ref: "#/definitions/nonNegativeInteger"
      },
      {
        default: 0
      }
    ]
  },
  simpleTypes: {
    enum: [
      "array",
      "boolean",
      "integer",
      "null",
      "number",
      "object",
      "string"
    ]
  },
  stringArray: {
    type: "array",
    items: {
      type: "string"
    },
    uniqueItems: !0,
    default: []
  }
}, F1 = [
  "object",
  "boolean"
], q1 = {
  $id: {
    type: "string",
    format: "uri-reference"
  },
  $schema: {
    type: "string",
    format: "uri"
  },
  $ref: {
    type: "string",
    format: "uri-reference"
  },
  $comment: {
    type: "string"
  },
  title: {
    type: "string"
  },
  description: {
    type: "string"
  },
  default: !0,
  readOnly: {
    type: "boolean",
    default: !1
  },
  examples: {
    type: "array",
    items: !0
  },
  multipleOf: {
    type: "number",
    exclusiveMinimum: 0
  },
  maximum: {
    type: "number"
  },
  exclusiveMaximum: {
    type: "number"
  },
  minimum: {
    type: "number"
  },
  exclusiveMinimum: {
    type: "number"
  },
  maxLength: {
    $ref: "#/definitions/nonNegativeInteger"
  },
  minLength: {
    $ref: "#/definitions/nonNegativeIntegerDefault0"
  },
  pattern: {
    type: "string",
    format: "regex"
  },
  additionalItems: {
    $ref: "#"
  },
  items: {
    anyOf: [
      {
        $ref: "#"
      },
      {
        $ref: "#/definitions/schemaArray"
      }
    ],
    default: !0
  },
  maxItems: {
    $ref: "#/definitions/nonNegativeInteger"
  },
  minItems: {
    $ref: "#/definitions/nonNegativeIntegerDefault0"
  },
  uniqueItems: {
    type: "boolean",
    default: !1
  },
  contains: {
    $ref: "#"
  },
  maxProperties: {
    $ref: "#/definitions/nonNegativeInteger"
  },
  minProperties: {
    $ref: "#/definitions/nonNegativeIntegerDefault0"
  },
  required: {
    $ref: "#/definitions/stringArray"
  },
  additionalProperties: {
    $ref: "#"
  },
  definitions: {
    type: "object",
    additionalProperties: {
      $ref: "#"
    },
    default: {}
  },
  properties: {
    type: "object",
    additionalProperties: {
      $ref: "#"
    },
    default: {}
  },
  patternProperties: {
    type: "object",
    additionalProperties: {
      $ref: "#"
    },
    propertyNames: {
      format: "regex"
    },
    default: {}
  },
  dependencies: {
    type: "object",
    additionalProperties: {
      anyOf: [
        {
          $ref: "#"
        },
        {
          $ref: "#/definitions/stringArray"
        }
      ]
    }
  },
  propertyNames: {
    $ref: "#"
  },
  const: !0,
  enum: {
    type: "array",
    items: !0,
    minItems: 1,
    uniqueItems: !0
  },
  type: {
    anyOf: [
      {
        $ref: "#/definitions/simpleTypes"
      },
      {
        type: "array",
        items: {
          $ref: "#/definitions/simpleTypes"
        },
        minItems: 1,
        uniqueItems: !0
      }
    ]
  },
  format: {
    type: "string"
  },
  contentMediaType: {
    type: "string"
  },
  contentEncoding: {
    type: "string"
  },
  if: {
    $ref: "#"
  },
  then: {
    $ref: "#"
  },
  else: {
    $ref: "#"
  },
  allOf: {
    $ref: "#/definitions/schemaArray"
  },
  anyOf: {
    $ref: "#/definitions/schemaArray"
  },
  oneOf: {
    $ref: "#/definitions/schemaArray"
  },
  not: {
    $ref: "#"
  }
}, K1 = {
  $schema: N1,
  $id: z1,
  title: L1,
  definitions: B1,
  type: F1,
  properties: q1,
  default: !0
};
(function(e, t) {
  Object.defineProperty(t, "__esModule", { value: !0 }), t.MissingRefError = t.ValidationError = t.CodeGen = t.Name = t.nil = t.stringify = t.str = t._ = t.KeywordCxt = t.Ajv = void 0;
  const a = Ko, r = Ds, i = zs, n = K1, s = ["/properties"], o = "http://json-schema.org/draft-07/schema";
  class l extends a.default {
    _addVocabularies() {
      super._addVocabularies(), r.default.forEach((p) => this.addVocabulary(p)), this.opts.discriminator && this.addKeyword(i.default);
    }
    _addDefaultMetaSchema() {
      if (super._addDefaultMetaSchema(), !this.opts.meta)
        return;
      const p = this.opts.$data ? this.$dataMetaSchema(n, s) : n;
      this.addMetaSchema(p, o, !1), this.refs["http://json-schema.org/schema"] = o;
    }
    defaultMeta() {
      return this.opts.defaultMeta = super.defaultMeta() || (this.getSchema(o) ? o : void 0);
    }
  }
  t.Ajv = l, e.exports = t = l, e.exports.Ajv = l, Object.defineProperty(t, "__esModule", { value: !0 }), t.default = l;
  var u = ra;
  Object.defineProperty(t, "KeywordCxt", { enumerable: !0, get: function() {
    return u.KeywordCxt;
  } });
  var c = Ie;
  Object.defineProperty(t, "_", { enumerable: !0, get: function() {
    return c._;
  } }), Object.defineProperty(t, "str", { enumerable: !0, get: function() {
    return c.str;
  } }), Object.defineProperty(t, "stringify", { enumerable: !0, get: function() {
    return c.stringify;
  } }), Object.defineProperty(t, "nil", { enumerable: !0, get: function() {
    return c.nil;
  } }), Object.defineProperty(t, "Name", { enumerable: !0, get: function() {
    return c.Name;
  } }), Object.defineProperty(t, "CodeGen", { enumerable: !0, get: function() {
    return c.CodeGen;
  } });
  var d = Ir;
  Object.defineProperty(t, "ValidationError", { enumerable: !0, get: function() {
    return d.default;
  } });
  var m = Kn;
  Object.defineProperty(t, "MissingRefError", { enumerable: !0, get: function() {
    return m.default;
  } });
})(Xl, Xl.exports);
var Hu = Xl.exports;
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.formatLimitDefinition = void 0;
  const t = Hu, a = Ie, r = a.operators, i = {
    formatMaximum: { okStr: "<=", ok: r.LTE, fail: r.GT },
    formatMinimum: { okStr: ">=", ok: r.GTE, fail: r.LT },
    formatExclusiveMaximum: { okStr: "<", ok: r.LT, fail: r.GTE },
    formatExclusiveMinimum: { okStr: ">", ok: r.GT, fail: r.LTE }
  }, n = {
    message: ({ keyword: o, schemaCode: l }) => (0, a.str)`should be ${i[o].okStr} ${l}`,
    params: ({ keyword: o, schemaCode: l }) => (0, a._)`{comparison: ${i[o].okStr}, limit: ${l}}`
  };
  e.formatLimitDefinition = {
    keyword: Object.keys(i),
    type: "string",
    schemaType: "string",
    $data: !0,
    error: n,
    code(o) {
      const { gen: l, data: u, schemaCode: c, keyword: d, it: m } = o, { opts: v, self: p } = m;
      if (!v.validateFormats)
        return;
      const h = new t.KeywordCxt(m, p.RULES.all.format.definition, "format");
      h.$data ? y() : f();
      function y() {
        const P = l.scopeValue("formats", {
          ref: p.formats,
          code: v.code.formats
        }), S = l.const("fmt", (0, a._)`${P}[${h.schemaCode}]`);
        o.fail$data((0, a.or)((0, a._)`typeof ${S} != "object"`, (0, a._)`${S} instanceof RegExp`, (0, a._)`typeof ${S}.compare != "function"`, g(S)));
      }
      function f() {
        const P = h.schema, S = p.formats[P];
        if (!S || S === !0)
          return;
        if (typeof S != "object" || S instanceof RegExp || typeof S.compare != "function")
          throw new Error(`"${d}": format "${P}" does not define "compare" function`);
        const _ = l.scopeValue("formats", {
          key: P,
          ref: S,
          code: v.code.formats ? (0, a._)`${v.code.formats}${(0, a.getProperty)(P)}` : void 0
        });
        o.fail$data(g(_));
      }
      function g(P) {
        return (0, a._)`${P}.compare(${u}, ${c}) ${i[d].fail} 0`;
      }
    },
    dependencies: ["format"]
  };
  const s = (o) => (o.addKeyword(e.formatLimitDefinition), o);
  e.default = s;
})(vv);
(function(e, t) {
  Object.defineProperty(t, "__esModule", { value: !0 });
  const a = mv, r = vv, i = Ie, n = new i.Name("fullFormats"), s = new i.Name("fastFormats"), o = (u, c = { keywords: !0 }) => {
    if (Array.isArray(c))
      return l(u, c, a.fullFormats, n), u;
    const [d, m] = c.mode === "fast" ? [a.fastFormats, s] : [a.fullFormats, n], v = c.formats || a.formatNames;
    return l(u, v, d, m), c.keywords && (0, r.default)(u), u;
  };
  o.get = (u, c = "full") => {
    const m = (c === "fast" ? a.fastFormats : a.fullFormats)[u];
    if (!m)
      throw new Error(`Unknown format "${u}"`);
    return m;
  };
  function l(u, c, d, m) {
    var v, p;
    (v = (p = u.opts.code).formats) !== null && v !== void 0 || (p.formats = (0, i._)`require("ajv-formats/dist/formats").${m}`);
    for (const h of c)
      u.addFormat(h, d[h]);
  }
  e.exports = t = o, Object.defineProperty(t, "__esModule", { value: !0 }), t.default = o;
})(Yl, Yl.exports);
var H1 = Yl.exports;
const U1 = /* @__PURE__ */ xr(H1);
var Zl = { exports: {} };
(function(e, t) {
  Object.defineProperty(t, "__esModule", { value: !0 });
  const a = Hu, r = Ie, i = vr, n = ra, s = Vr, o = Qt, l = "errorMessage", u = new a.Name("emUsed"), c = {
    required: "missingProperty",
    dependencies: "property",
    dependentRequired: "property"
  }, d = /\$\{[^}]+\}/, m = /\$\{([^}]+)\}/g, v = /^""\s*\+\s*|\s*\+\s*""$/g;
  function p(y) {
    return {
      keyword: l,
      schemaType: ["string", "object"],
      post: !0,
      code(f) {
        const { gen: g, data: P, schema: S, schemaValue: _, it: j } = f;
        if (j.createErrors === !1)
          return;
        const F = S, R = r.strConcat(o.default.instancePath, j.errorPath);
        g.if(a._`${o.default.errors} > 0`, () => {
          if (typeof F == "object") {
            const [$, b] = W(F);
            b && D(b), $ && O($), B(U(F));
          }
          const V = typeof F == "string" ? F : F._;
          V && N(V), y.keepErrors || z();
        });
        function U({ properties: V, items: $ }) {
          const b = {};
          if (V) {
            b.props = {};
            for (const I in V)
              b.props[I] = [];
          }
          if ($) {
            b.items = {};
            for (let I = 0; I < $.length; I++)
              b.items[I] = [];
          }
          return b;
        }
        function W(V) {
          let $, b;
          for (const I in V) {
            if (I === "properties" || I === "items")
              continue;
            const k = V[I];
            if (typeof k == "object") {
              $ || ($ = {});
              const E = $[I] = {};
              for (const M in k)
                E[M] = [];
            } else
              b || (b = {}), b[I] = [];
          }
          return [$, b];
        }
        function D(V) {
          const $ = g.const("emErrors", a.stringify(V)), b = g.const("templates", L(V, S));
          g.forOf("err", o.default.vErrors, (M) => g.if(J(M, $), () => g.code(a._`${$}[${M}.keyword].push(${M})`).assign(a._`${M}.${u}`, !0)));
          const { singleError: I } = y;
          if (I) {
            const M = g.let("message", a._`""`), K = g.let("paramsErrors", a._`[]`);
            k((Y) => {
              g.if(M, () => g.code(a._`${M} += ${typeof I == "string" ? I : ";"}`)), g.code(a._`${M} += ${E(Y)}`), g.assign(K, a._`${K}.concat(${$}[${Y}])`);
            }), s.reportError(f, { message: M, params: a._`{errors: ${K}}` });
          } else
            k((M) => s.reportError(f, {
              message: E(M),
              params: a._`{errors: ${$}[${M}]}`
            }));
          function k(M) {
            g.forIn("key", $, (K) => g.if(a._`${$}[${K}].length`, () => M(K)));
          }
          function E(M) {
            return a._`${M} in ${b} ? ${b}[${M}]() : ${_}[${M}]`;
          }
        }
        function O(V) {
          const $ = g.const("emErrors", a.stringify(V)), b = [];
          for (const K in V)
            b.push([
              K,
              L(V[K], S[K])
            ]);
          const I = g.const("templates", g.object(...b)), k = g.scopeValue("obj", {
            ref: c,
            code: a.stringify(c)
          }), E = g.let("emPropParams"), M = g.let("emParamsErrors");
          g.forOf("err", o.default.vErrors, (K) => g.if(J(K, $), () => {
            g.assign(E, a._`${k}[${K}.keyword]`), g.assign(M, a._`${$}[${K}.keyword][${K}.params[${E}]]`), g.if(M, () => g.code(a._`${M}.push(${K})`).assign(a._`${K}.${u}`, !0));
          })), g.forIn("key", $, (K) => g.forIn("keyProp", a._`${$}[${K}]`, (Y) => {
            g.assign(M, a._`${$}[${K}][${Y}]`), g.if(a._`${M}.length`, () => {
              const le = g.const("tmpl", a._`${I}[${K}] && ${I}[${K}][${Y}]`);
              s.reportError(f, {
                message: a._`${le} ? ${le}() : ${_}[${K}][${Y}]`,
                params: a._`{errors: ${M}}`
              });
            });
          }));
        }
        function B(V) {
          const { props: $, items: b } = V;
          if (!$ && !b)
            return;
          const I = a._`typeof ${P} == "object"`, k = a._`Array.isArray(${P})`, E = g.let("emErrors");
          let M, K;
          const Y = g.let("templates");
          $ && b ? (M = g.let("emChildKwd"), g.if(I), g.if(k, () => {
            le(b, S.items), g.assign(M, a.str`items`);
          }, () => {
            le($, S.properties), g.assign(M, a.str`properties`);
          }), K = a._`[${M}]`) : b ? (g.if(k), le(b, S.items), K = a._`.items`) : $ && (g.if(r.and(I, r.not(k))), le($, S.properties), K = a._`.properties`), g.forOf("err", o.default.vErrors, (se) => ae(se, E, (Q) => g.code(a._`${E}[${Q}].push(${se})`).assign(a._`${se}.${u}`, !0))), g.forIn("key", E, (se) => g.if(a._`${E}[${se}].length`, () => {
            s.reportError(f, {
              message: a._`${se} in ${Y} ? ${Y}[${se}]() : ${_}${K}[${se}]`,
              params: a._`{errors: ${E}[${se}]}`
            }), g.assign(a._`${o.default.vErrors}[${o.default.errors}-1].instancePath`, a._`${R} + "/" + ${se}.replace(/~/g, "~0").replace(/\\//g, "~1")`);
          })), g.endIf();
          function le(se, Q) {
            g.assign(E, a.stringify(se)), g.assign(Y, L(se, Q));
          }
        }
        function N(V) {
          const $ = g.const("emErrs", a._`[]`);
          g.forOf("err", o.default.vErrors, (b) => g.if(X(b), () => g.code(a._`${$}.push(${b})`).assign(a._`${b}.${u}`, !0))), g.if(a._`${$}.length`, () => s.reportError(f, {
            message: A(V),
            params: a._`{errors: ${$}}`
          }));
        }
        function z() {
          const V = g.const("emErrs", a._`[]`);
          g.forOf("err", o.default.vErrors, ($) => g.if(a._`!${$}.${u}`, () => g.code(a._`${V}.push(${$})`))), g.assign(o.default.vErrors, V).assign(o.default.errors, a._`${V}.length`);
        }
        function J(V, $) {
          return r.and(
            a._`${V}.keyword !== ${l}`,
            a._`!${V}.${u}`,
            a._`${V}.instancePath === ${R}`,
            a._`${V}.keyword in ${$}`,
            // TODO match the end of the string?
            a._`${V}.schemaPath.indexOf(${j.errSchemaPath}) === 0`,
            a._`/^\\/[^\\/]*$/.test(${V}.schemaPath.slice(${j.errSchemaPath.length}))`
          );
        }
        function ae(V, $, b) {
          g.if(r.and(a._`${V}.keyword !== ${l}`, a._`!${V}.${u}`, a._`${V}.instancePath.indexOf(${R}) === 0`), () => {
            const I = g.scopeValue("pattern", {
              ref: /^\/([^/]*)(?:\/|$)/,
              code: a._`new RegExp("^\\\/([^/]*)(?:\\\/|$)")`
            }), k = g.const("emMatches", a._`${I}.exec(${V}.instancePath.slice(${R}.length))`), E = g.const("emChild", a._`${k} && ${k}[1].replace(/~1/g, "/").replace(/~0/g, "~")`);
            g.if(a._`${E} !== undefined && ${E} in ${$}`, () => b(E));
          });
        }
        function X(V) {
          return r.and(a._`${V}.keyword !== ${l}`, a._`!${V}.${u}`, r.or(a._`${V}.instancePath === ${R}`, r.and(a._`${V}.instancePath.indexOf(${R}) === 0`, a._`${V}.instancePath[${R}.length] === "/"`)), a._`${V}.schemaPath.indexOf(${j.errSchemaPath}) === 0`, a._`${V}.schemaPath[${j.errSchemaPath}.length] === "/"`);
        }
        function L(V, $) {
          const b = [];
          for (const I in V) {
            const k = $[I];
            d.test(k) && b.push([I, x(k)]);
          }
          return g.object(...b);
        }
        function A(V) {
          return d.test(V) ? new i._Code(i.safeStringify(V).replace(m, ($, b) => `" + JSON.stringify(${n.getData(b, j)}) + "`).replace(v, "")) : a.stringify(V);
        }
        function x(V) {
          return a._`function(){return ${A(V)}}`;
        }
      },
      metaSchema: {
        anyOf: [
          { type: "string" },
          {
            type: "object",
            properties: {
              properties: { $ref: "#/$defs/stringMap" },
              items: { $ref: "#/$defs/stringList" },
              required: { $ref: "#/$defs/stringOrMap" },
              dependencies: { $ref: "#/$defs/stringOrMap" }
            },
            additionalProperties: { type: "string" }
          }
        ],
        $defs: {
          stringMap: {
            type: "object",
            additionalProperties: { type: "string" }
          },
          stringOrMap: {
            anyOf: [{ type: "string" }, { $ref: "#/$defs/stringMap" }]
          },
          stringList: { type: "array", items: { type: "string" } }
        }
      }
    };
  }
  const h = (y, f = {}) => {
    if (!y.opts.allErrors)
      throw new Error("ajv-errors: Ajv option allErrors must be true");
    if (y.opts.jsPropertySyntax)
      throw new Error("ajv-errors: ajv option jsPropertySyntax is not supported");
    return y.addKeyword(p(f));
  };
  t.default = h, e.exports = h, e.exports.default = h;
})(Zl, Zl.exports);
var W1 = Zl.exports;
const pv = /* @__PURE__ */ xr(W1), hv = {
  $id: "https://json-layout.github.io/normalized-layout-keyword",
  $defs: {
    "normalized-layout": {
      title: "normalized layout",
      type: "object",
      unevaluatedProperties: !1,
      oneOf: [
        {
          $ref: "#/$defs/switch-struct"
        },
        {
          $ref: "#/$defs/base-comp-object"
        }
      ]
    },
    "switch-struct": {
      type: "object",
      required: [
        "switch"
      ],
      additionalProperties: !1,
      properties: {
        switch: {
          type: "array",
          items: {
            $ref: "#/$defs/base-comp-object"
          }
        }
      }
    },
    "base-comp-object": {
      type: "object",
      required: [
        "comp"
      ],
      properties: {
        comp: {
          type: "string"
        },
        if: {
          $ref: "#/$defs/expression"
        },
        options: {
          $ref: "#/$defs/state-node-options-base"
        },
        getOptions: {
          $ref: "#/$defs/expression"
        },
        defaultData: {},
        getDefaultData: {
          $ref: "#/$defs/expression"
        },
        constData: {},
        getConstData: {
          $ref: "#/$defs/expression"
        },
        transformData: {
          $ref: "#/$defs/expression"
        },
        nullable: {
          type: "boolean"
        },
        help: {
          type: "string"
        },
        warning: {
          type: "string"
        },
        cols: {
          $ref: "#/$defs/cols-obj"
        },
        props: {
          $ref: "#/$defs/state-node-props-lib"
        },
        getProps: {
          $ref: "#/$defs/expression"
        },
        slots: {
          $ref: "#/$defs/slots"
        }
      }
    },
    "composite-comp-object": {
      allOf: [
        {
          $ref: "#/$defs/base-comp-object"
        },
        {
          type: "object",
          required: [
            "children",
            "comp"
          ],
          properties: {
            comp: {
              type: "string"
            },
            title: {
              type: [
                "string",
                "null"
              ]
            },
            subtitle: {
              type: [
                "string",
                "null"
              ]
            },
            children: {
              $ref: "#/$defs/children"
            }
          }
        }
      ]
    },
    "slot-comp-object": {
      allOf: [
        {
          $ref: "#/$defs/base-comp-object"
        },
        {
          type: "object",
          required: [
            "comp",
            "slots"
          ],
          properties: {
            comp: {
              type: "string",
              const: "slot"
            }
          }
        }
      ]
    },
    "simple-comp-object": {
      allOf: [
        {
          $ref: "#/$defs/base-comp-object"
        },
        {
          type: "object",
          required: [
            "comp"
          ],
          properties: {
            comp: {
              type: "string"
            },
            label: {
              type: "string"
            },
            hint: {
              type: [
                "string",
                "null"
              ]
            }
          }
        }
      ]
    },
    "focusable-comp-object": {
      allOf: [
        {
          $ref: "#/$defs/base-comp-object"
        },
        {
          type: "object",
          required: [
            "comp"
          ],
          properties: {
            comp: {
              type: "string"
            },
            autofocus: {
              type: "boolean"
            }
          }
        }
      ]
    },
    "items-based-comp-object": {
      allOf: [
        {
          $ref: "#/$defs/base-comp-object"
        },
        {
          type: "object",
          required: [
            "comp"
          ],
          properties: {
            comp: {
              type: "string"
            },
            items: {
              $ref: "#/$defs/select-items"
            },
            getItems: {
              $ref: "#/$defs/get-items"
            }
          }
        }
      ]
    },
    "multiple-compat-comp-object": {
      allOf: [
        {
          $ref: "#/$defs/base-comp-object"
        },
        {
          type: "object",
          required: [
            "comp"
          ],
          properties: {
            comp: {
              type: "string"
            },
            multiple: {
              type: "boolean"
            },
            separator: {
              type: "string"
            }
          }
        }
      ]
    },
    "child-ref": {
      type: "object",
      required: [
        "key"
      ],
      additionalProperties: !1,
      properties: {
        key: {
          type: [
            "string",
            "integer"
          ]
        },
        cols: {
          $ref: "#/$defs/cols-obj"
        },
        if: {
          $ref: "#/$defs/expression"
        },
        slots: {
          $ref: "#/$defs/slots"
        }
      }
    },
    "child-composite": {
      type: "object",
      required: [
        "key",
        "children"
      ],
      additionalProperties: !1,
      properties: {
        key: {
          type: [
            "string",
            "integer"
          ]
        },
        cols: {
          $ref: "#/$defs/cols-obj"
        },
        comp: {
          type: "string"
        },
        title: {
          type: "string"
        },
        subtitle: {
          type: "string"
        },
        children: {
          $ref: "#/$defs/children"
        },
        if: {
          $ref: "#/$defs/expression"
        },
        slots: {
          $ref: "#/$defs/slots"
        }
      }
    },
    "child-slot": {
      type: "object",
      required: [
        "key",
        "comp",
        "slots"
      ],
      additionalProperties: !1,
      properties: {
        key: {
          type: [
            "string",
            "integer"
          ]
        },
        cols: {
          $ref: "#/$defs/cols-obj"
        },
        comp: {
          const: "slot"
        },
        if: {
          $ref: "#/$defs/expression"
        },
        slots: {
          $ref: "#/$defs/slots"
        }
      }
    },
    child: {
      title: "Child",
      type: "object",
      oneOf: [
        {
          $ref: "#/$defs/child-ref"
        },
        {
          $ref: "#/$defs/child-composite"
        },
        {
          $ref: "#/$defs/child-slot"
        }
      ]
    },
    children: {
      type: "array",
      items: {
        $ref: "#/$defs/child"
      }
    },
    "select-items": {
      type: "array",
      items: {
        oneOf: [
          {
            $ref: "#/$defs/select-item"
          },
          {
            $ref: "#/$defs/select-item-header"
          }
        ]
      }
    },
    "select-item": {
      type: "object",
      required: [
        "title",
        "key",
        "value"
      ],
      properties: {
        title: {
          type: "string"
        },
        key: {
          type: "string"
        },
        value: {},
        icon: {
          type: "string"
        }
      }
    },
    "select-item-header": {
      type: "object",
      required: [
        "header",
        "title"
      ],
      properties: {
        header: {
          type: "boolean",
          const: !0
        },
        title: {
          type: "string"
        },
        icon: {
          type: "string"
        }
      }
    },
    "get-items": {
      type: "object",
      allOf: [
        {
          properties: {
            returnObjects: {
              type: "boolean",
              readOnly: !0
            },
            itemsResults: {
              $ref: "#/$defs/expression"
            },
            itemHeader: {
              $ref: "#/$defs/expression"
            },
            itemTitle: {
              $ref: "#/$defs/expression"
            },
            itemKey: {
              $ref: "#/$defs/expression"
            },
            itemValue: {
              $ref: "#/$defs/expression"
            },
            itemIcon: {
              $ref: "#/$defs/expression"
            },
            immutable: {
              type: "boolean"
            }
          }
        },
        {
          oneOf: [
            {
              $ref: "#/$defs/expression"
            },
            {
              $ref: "#/$defs/get-items-fetch"
            }
          ]
        }
      ]
    },
    "get-items-fetch": {
      type: "object",
      required: [
        "url"
      ],
      properties: {
        url: {
          $ref: "#/$defs/expression"
        },
        qSearchParam: {
          type: "string"
        },
        searchParams: {
          type: "object",
          patternProperties: {
            ".*": {
              $ref: "#/$defs/expression"
            }
          }
        },
        headers: {
          type: "object",
          patternProperties: {
            ".*": {
              $ref: "#/$defs/expression"
            }
          }
        }
      }
    },
    expression: {
      type: "object",
      required: [
        "type",
        "expr",
        "pure",
        "dataAlias"
      ],
      properties: {
        type: {
          type: "string",
          enum: [
            "js-fn",
            "js-eval",
            "js-tpl"
          ]
        },
        expr: {
          type: "string"
        },
        pure: {
          type: "boolean"
        },
        dataAlias: {
          type: "string"
        },
        ref: {
          type: "integer",
          readOnly: !0
        }
      }
    },
    "cols-obj": {
      type: "object",
      additionalProperties: !1,
      required: [
        "xs"
      ],
      properties: {
        xs: {
          $ref: "#/$defs/cols",
          default: 12
        },
        sm: {
          $ref: "#/$defs/cols"
        },
        md: {
          $ref: "#/$defs/cols"
        },
        lg: {
          $ref: "#/$defs/cols"
        },
        xl: {
          $ref: "#/$defs/cols"
        },
        xxl: {
          $ref: "#/$defs/cols"
        }
      }
    },
    cols: {
      type: "integer",
      minimum: 0,
      maximum: 12
    },
    slot: {
      oneOf: [
        {
          type: "object",
          additionalProperties: !1,
          required: [
            "text"
          ],
          properties: {
            text: {
              type: "string"
            }
          }
        },
        {
          type: "object",
          additionalProperties: !1,
          required: [
            "markdown"
          ],
          properties: {
            markdown: {
              type: "string"
            }
          }
        },
        {
          type: "object",
          additionalProperties: !1,
          required: [
            "name"
          ],
          properties: {
            name: {
              type: "string"
            },
            props: {
              type: "object"
            }
          }
        }
      ]
    },
    slots: {
      type: "object",
      allOf: [
        {
          $ref: "#/$defs/state-node-slots-lib"
        },
        {
          properties: {
            before: {
              $ref: "#/$defs/slot"
            },
            after: {
              $ref: "#/$defs/slot"
            },
            component: {
              $ref: "#/$defs/slot"
            },
            compositeComponent: {
              $ref: "#/$defs/slot"
            }
          }
        }
      ]
    },
    "state-node-options-base": {
      type: "object",
      allOf: [
        {
          $ref: "#/$defs/state-node-options-base-lib"
        },
        {
          properties: {
            readOnly: {
              type: "boolean",
              default: !1
            },
            summary: {
              type: "boolean",
              default: !1
            },
            titleDepth: {
              type: "integer",
              minimum: 1,
              maximum: 6,
              default: 2
            },
            density: {
              type: "string",
              enum: [
                "default",
                "comfortable",
                "compact"
              ],
              default: "default"
            },
            indent: {
              type: [
                "boolean",
                "integer"
              ]
            },
            removeAdditional: {
              description: "true is the same as 'unknown', false is the same as 'none'",
              default: "error",
              oneOf: [
                {
                  type: "boolean"
                },
                {
                  type: "string",
                  enum: [
                    "unknown",
                    "error",
                    "none"
                  ]
                }
              ]
            },
            validateOn: {
              type: "string",
              enum: [
                "input",
                "blur",
                "submit"
              ],
              default: "input"
            },
            updateOn: {
              type: "string",
              enum: [
                "input",
                "blur"
              ],
              default: "input"
            },
            debounceInputMs: {
              type: "integer",
              minimum: 0,
              default: 300
            },
            initialValidation: {
              type: "string",
              enum: [
                "never",
                "always",
                "withData"
              ],
              default: "withData"
            },
            defaultOn: {
              type: "string",
              enum: [
                "missing",
                "empty",
                "never"
              ],
              default: "empty"
            },
            autofocus: {
              type: "boolean",
              default: !1
            },
            readOnlyPropertiesMode: {
              type: "string",
              enum: [
                "remove",
                "hide",
                "show"
              ],
              default: "show"
            }
          }
        }
      ]
    },
    "state-node-options-base-lib": {
      type: "object",
      patternProperties: {
        ".*": {}
      }
    },
    "state-node-props-lib": {
      type: "object",
      patternProperties: {
        ".*": {}
      }
    },
    "state-node-slots-lib": {
      type: "object",
      patternProperties: {
        ".*": {
          $ref: "#/$defs/slot"
        }
      }
    }
  }
}, G1 = (
  /** @type {typeof ajvModule.default} */
  fv
), Hn = new G1({
  code: {
    source: !0,
    esm: !0
    // optimize: true
  },
  discriminator: !0,
  allowMatchingProperties: !0,
  allowUnionTypes: !0,
  allErrors: !0
});
U1.default(Hn);
pv.default(Hn);
Hn.addSchema(pm);
Hn.addSchema(hv);
const Fi = {};
function Y1(e) {
  if (Fi[e.name]) return Fi[e.name];
  const t = ig(e);
  return Fi[e.name] = Hn.compile(t), Fi[e.name];
}
const Ad = (
  /** @type {any} */
  Hn.getSchema(pm.$id)
), Td = (
  /** @type {any} */
  Hn.getSchema(hv.$id)
);
function jd(e, t) {
  var r, i;
  const a = [];
  if (t === "object")
    for (const n of Object.keys(e)) {
      if (n === "properties")
        for (const s of Object.keys(e.properties ?? {}))
          a.push({ key: s }), (r = e.dependencies) != null && r[s] && !Array.isArray(e.dependencies[s]) && a.push({ key: `$deps-${s}` }), e.dependentSchemas && e.dependentSchemas[s] && a.push({ key: `$deps-${s}` });
      if (n === "patternProperties" && a.push({ key: "$patternProperties" }), n === "allOf" && (i = e.allOf) != null && i.length)
        for (let s = 0; s < e.allOf.length; s++)
          a.push({ key: `$allOf-${s}` });
      n === "oneOf" && a.push({ key: "$oneOf" }), n === "then" && e.if && a.push({ key: "$then" }), n === "else" && e.if && a.push({ key: "$else" });
    }
  if (t === "array" && Array.isArray(e.items))
    for (let n = 0; n < e.items.length; n++)
      a.push({ key: n });
  return a;
}
function ds(e, t, a) {
  if (!t) return e;
  let r = 0, i = 0;
  return t.map((n) => {
    if (typeof n == "string") {
      const s = e.find((o) => o.key === n);
      if (!s) throw new Error(`unknown child "${n}"`);
      return s;
    } else {
      if (Array.isArray(n))
        return r++, {
          comp: "section",
          key: `$comp-${r}`,
          children: ds(e, n, a)
        };
      if ("slots" in n && !Zc(n) && (n.slots = Jl(n.slots, a)), "cols" in n && (n.cols = Ql(n.cols)), n.if && (n.if = mt(n.if)), typeof n.cols == "number" && (n.cols = { sm: n.cols }), typeof n.cols == "object" && n.cols.xs === void 0 && (n.cols.xs = 12), n.key) {
        if (!e.find((o) => o.key === n.key)) throw new Error(`unknown child "${n.key}"`);
        return (
          /** @type {Child} */
          n
        );
      } else {
        if (Zc(n))
          return i++, {
            key: `$slot-${i}`,
            comp: "slot",
            cols: Ql(n.cols),
            slots: Jl({ component: n }, a)
          };
        {
          const s = n;
          return Wy(s) && (s.comp || (s.comp = "section"), s.children = ds(e, s.children, a), "key" in n || (r++, s.key = `$comp-${r}`)), /** @type {Child} */
          s;
        }
      }
    }
  });
}
function X1(e, t, a, r, i) {
  var s, o;
  if ((s = e.slots) != null && s.component) return "slot";
  if ((o = e.slots) != null && o.compositeComponent) return "composite-slot";
  const n = a && ["string", "integer", "number"].includes(a);
  if (i === "oneOf") return "one-of-select";
  if (i === "patternProperties") return "list";
  if (n && t.enum) return t.enum.length > 20 ? "autocomplete" : "select";
  if (n && t.oneOf) return t.oneOf.length > 20 ? "autocomplete" : "select";
  if (n && t.examples && r.useExamples === "items" && !(t.format && ["date", "date-time", "time"].includes(t.format)) || n && t.anyOf && t.anyOf.length && Object.keys(t.anyOf[t.anyOf.length - 1]).length === 0)
    return a === "string" ? "combobox" : "number-combobox";
  if (a === "string" && e.separator) return "combobox";
  if (e.items) return e.items.length > 20 ? "autocomplete" : "select";
  if (e.getItems)
    return fm(e.getItems) && (e.getItems.qSearchParam || typeof e.getItems.url == "string" && e.getItems.url.includes("{q}") || typeof e.getItems.url == "object" && typeof e.getItems.url.expr == "string" && e.getItems.url.expr.includes("{q}")) ? "autocomplete" : "select";
  if (a === "array" && t.items) {
    const l = ["string", "integer", "number"].includes(t.items.type);
    if (l && (t.items.enum || t.items.oneOf))
      return (t.items.enum || t.items.oneOf).length > 20 ? "autocomplete" : "select";
    if (l && t.items.examples && r.useExamples === "items" || l && t.items.anyOf && t.items.anyOf.length && Object.keys(t.items.anyOf[t.items.anyOf.length - 1]).length === 0 || l && !t.items.layout && !["date", "date-time", "time"].includes(t.items.format))
      return t.items.type === "string" ? "combobox" : "number-combobox";
  }
  if (a === "object") return "section";
  if (a === "array")
    return Array.isArray(t.items) ? "section" : "list";
  if (a === "string")
    return t.format === "date" ? "date-picker" : t.format === "date-time" ? "date-time-picker" : t.format === "time" ? "time-picker" : "text-field";
  if (a === "integer" || a === "number") return "number-field";
  if (a === "boolean") return "checkbox";
  throw new Error("failed to calculate default component for schema fragment");
}
function yv(e) {
  return Gy(e) ? { ...e } : Ky(e) ? { comp: e } : Uy(e) ? { children: e } : {};
}
function Z1(e) {
  const t = typeof e == "string" ? e : e.expr;
  return !t.includes("rootData.") && !t.includes("rootData[") && !t.includes("parent.data") && !t.includes("parent.parent");
}
function mt(e, t = "js-eval", a = "value") {
  const r = Z1(e);
  return typeof e == "string" ? { type: t, expr: e, pure: r, dataAlias: a } : { pure: r, type: t, dataAlias: a, ...e };
}
function Jl(e, t) {
  if (!e) return;
  const a = {};
  for (const [r, i] of Object.entries(e))
    typeof i == "string" ? ["before", "after"].includes(r) ? a[r] = { markdown: t(i).trim() } : a[r] = { name: i } : Zy(i) ? a[r] = { text: i.text } : Jy(i) ? a[r] = { name: i.name, props: i.props } : Xy(i) && (a[r] = { markdown: t(i.markdown).trim() });
  return a;
}
function Ql(e) {
  if (typeof e == "number")
    return { xs: 12, sm: e };
  if (typeof e == "object")
    return { xs: 12, ...e };
}
function Md(e) {
  if (!e) return null;
  const { type: t } = En(e), a = t && ["string", "integer", "number"].includes(t);
  if (e.enum && a)
    return e.enum.map((r) => ({ key: r + "", title: r + "", value: r }));
  if (e.examples && a)
    return e.examples.map((r) => ({ key: r + "", title: r + "", value: r }));
  if (e.anyOf && a && e.anyOf.length && Object.keys(e.anyOf[e.anyOf.length - 1]).length === 0) {
    const r = e.anyOf.slice(0, -1);
    if (!r.find((i) => !("const" in i)))
      return r.map((i) => ({
        ...i,
        key: i.const + "",
        title: (i.title ?? i.const) + "",
        value: i.const
      }));
  }
  return e.oneOf && a && !e.oneOf.find((r) => !("const" in r)) ? e.oneOf.map((r) => ({
    ...r,
    key: r.const + "",
    title: (r.title ?? r.const) + "",
    value: r.const
  })) : null;
}
const J1 = (e) => {
  let t = null;
  if (e.oneOf ? t = "oneOf" : e.anyOf && (t = "anyOf"), t) {
    const a = e[t];
    if (a && a.length === 2 && a.some((r) => r.type === "null")) {
      const r = a.findIndex((i) => i.type !== "null");
      if (r !== -1) {
        const i = a[r], n = Sa(e);
        for (const s in i)
          s in n || (n[s] = i[s]);
        return delete n[t], n.__pointer = n.__pointer + `/${t}/${r}`, n;
      }
    }
  }
}, En = (e) => {
  if (Array.isArray(e.type) && e.type.length === 2 && e.type.includes("null"))
    return { type: e.type.find((a) => a !== "null"), nullable: !0 };
  if (!e.type && (e.properties || e.patternProperties))
    return { type: "object", nullable: !1 };
  if (!e.type) {
    const t = [];
    for (const a of ["allOf", "anyOf", "oneOf"])
      if (e[a])
        for (const r of e[a]) {
          const { type: i } = En(r);
          i && !t.includes(i) && t.push(i);
        }
    if (t.length === 1) return { type: t[0], nullable: !1 };
  }
  if (Array.isArray(e.type))
    throw new Error("multiple types are not supported");
  return { type: e.type, nullable: !1 };
}, Dd = ["readOnly", "summary", "titleDepth", "density", "removeAdditional", "validateOn", "updateOne", "debounceInputMs", "initialValidation", "defaultOn", "readOnlyPropertiesMode"];
function Rd(e, t, a, r, i, n, s, o) {
  var h, y;
  if ("const" in a) return { comp: "none" };
  if (!r) return { comp: "none" };
  const l = yv(t);
  if (r === "array" && !a.items && l.comp !== "file-input")
    return { comp: "none" };
  l.comp || (l.comp = X1(l, a, r, s, o));
  const u = s.components[l.comp];
  if (!u)
    throw new Error(`unknown component "${l.comp}"`);
  if (l.comp === "none") return { comp: "none" };
  if (i && (l.nullable = i), u.itemsBased && !l.items) {
    let f;
    r === "array" ? f = Md(a.items) : f = Md(a), f && (l.getItems && vl(l.getItems) ? (l.getItems.expr = JSON.stringify(f), l.getItems.immutable = !0) : l.getItems = { expr: JSON.stringify(f), immutable: !0 });
  }
  if (u.composite) {
    const f = ds(jd(a, r), l.children, s.markdown);
    l.children = f, "title" in l || f.length === 1 && f[0].key === "$patternProperties" || (l.title = a.title ?? null);
  } else if (l.comp === "list") {
    if (o === "patternProperties") {
      if (!("title" in l)) {
        const g = ds(jd(a, r), l.children, s.markdown);
        g.length === 1 && g[0].key === "$patternProperties" && (l.title = a.title ?? null);
      }
      let f = !1;
      for (const g of Object.values(a.patternProperties ?? {})) {
        const { type: P } = En(g);
        P === "object" && (f = !0);
      }
      l.listEditMode = l.listEditMode ?? (f ? "inline-single" : "inline"), l.listActions = l.listActions ?? ["add", "edit", "delete"], l.indexed = Object.keys(a.patternProperties ?? {});
    } else {
      "title" in l || (l.title = a.title ?? "" + e);
      const { type: f } = En(a.items);
      l.listEditMode = l.listEditMode ?? (f === "object" ? "inline-single" : "inline"), l.listActions || (l.getItems ? (l.listActions = ["edit"], vl(l.getItems) && l.getItems.itemTitle && !l.itemTitle && (l.itemTitle = l.getItems.itemTitle)) : l.clipboardKey ? l.listActions = ["add", "edit", "delete", "sort", "duplicate", "copy", "paste"] : l.listActions = ["add", "edit", "delete", "sort", "duplicate"]);
    }
    l.itemTitle && (l.itemTitle = mt(l.itemTitle, "js-eval", "item")), l.itemSubtitle && (l.itemSubtitle = mt(l.itemSubtitle, "js-eval", "item")), l.itemCopy && (l.itemCopy = mt(l.itemCopy ?? "item", "js-eval", "item"));
  }
  u.multipleCompat && (r === "array" || l.separator) && (l.multiple = !0), l.comp === "date-picker" && (a.format === "date" && (l.format = "date"), a.format === "date-time" && (l.format = "date-time")), ["date-picker", "date-time-picker", "time-picker"].includes(l.comp) && ("formatMinimum" in a && (l.min = l.min ?? a.formatMinimum), "formatMaximum" in a && (l.max = l.max ?? a.formatMaximum)), ["number-field", "slider"].includes(l.comp) && (r === "integer" && (l.step = l.step ?? 1), "minimum" in a && (l.min = l.min ?? a.minimum), "maximum" in a && (l.max = l.max ?? a.maximum)), l.comp === "number-field" && r === "integer" && (l.precision = 0), l.if && (l.if = mt(l.if)), !l.defaultData && a.type === "string" && n.split("#").pop() === "" && (l.defaultData = "");
  const c = s.optionsKeys ? s.optionsKeys.concat(Dd) : Dd;
  for (const f of c)
    f in l && (l.options = l.options ?? {}, l.options[f] = l[f], delete l[f]);
  if (a.readOnly && (l.options = l.options ?? {}, "readOnly" in l.options || (l.options.readOnly = !0)), l.getOptions !== void 0 && (l.getOptions = mt(l.getOptions)), l.getDefaultData !== void 0 && (l.getDefaultData = mt(l.getDefaultData)), l.getConstData !== void 0 && (l.getConstData = mt(l.getConstData)), l.transformData !== void 0 && (l.transformData = mt(l.transformData)), l.getProps !== void 0 && (l.getProps = mt(l.getProps)), l.getItems && Yy(l.getItems) && (l.getItems = mt(l.getItems)), l.getItems && vl(l.getItems)) {
    if (r === "object" && (l.getItems.returnObjects = !0), r === "array") {
      const { type: f } = En(a.items);
      f === "object" && (l.getItems.returnObjects = !0);
    }
    l.getItems.itemHeader && (l.getItems.itemHeader = mt(l.getItems.itemHeader, "js-eval", "item")), l.getItems.itemTitle && (l.getItems.itemTitle = mt(l.getItems.itemTitle, "js-eval", "item")), l.getItems.itemKey && (l.getItems.itemKey = mt(l.getItems.itemKey, "js-eval", "item")), l.getItems.itemValue && (l.getItems.itemValue = mt(l.getItems.itemValue, "js-eval", "item")), l.getItems.itemIcon && (l.getItems.itemIcon = mt(l.getItems.itemIcon, "js-eval", "item")), l.getItems.itemsResults && (l.getItems.itemsResults = mt(l.getItems.itemsResults, "js-eval", "body"));
  }
  if (l.getItems && fm(l.getItems)) {
    if (l.getItems.url = mt(l.getItems.url, "js-tpl"), l.getItems.searchParams)
      for (const [f, g] of Object.entries(l.getItems.searchParams))
        l.getItems.searchParams[f] = mt(g, "js-eval");
    if (l.getItems.headers)
      for (const [f, g] of Object.entries(l.getItems.headers))
        l.getItems.headers[f] = mt(g, "js-eval");
  }
  l.items && (l.items = l.items.map((f) => {
    if (["string", "integer", "number"].includes(typeof f))
      return { title: f + "", key: f + "", value: f };
    if (typeof f == "object")
      return f.header ? f : {
        key: (f.key ?? f.value) + "",
        title: (f.title ?? f.key ?? f.value) + "",
        value: f.value ?? f.key
      };
    throw new Error(`bad item for select: ${JSON.stringify(f)}`);
  })), !l.comp && (l.items ?? l.getItems) && (l.comp = "select"), l.comp === "date-picker" && a.format === "date-time" && (l.format = "date-time"), l.slots && (l.slots = Jl(l.slots, s.markdown));
  const d = [], m = [], v = [];
  !u.composite && l.comp !== "list" && l.comp !== "slot" && !("label" in l) && !o && ((s.useTitle === "label" || s.useTitle === void 0) && a.title ? l.label = a.title : l.label = e + ""), a.title && (s.useTitle === "hint" && m.push(a.title), s.useTitle === "placeholder" && v.push(a.title), s.useTitle === "help" && d.push(a.title)), a.deprecated && s.useDeprecated && (l.warning = s.messages.deprecated), a.description && (u.composite && l.title && s.useDescription.includes("subtitle") ? l.subtitle === void 0 && (l.subtitle = a.description) : s.useDescription.includes("hint") ? m.push(a.description) : o !== "oneOf" && s.useDescription.includes("help") && d.push(a.description)), s.useName === "placeholder" && v.push(s.messages.name + e), s.useName === "hint" && m.push(s.messages.name + e), s.useName === "help" && d.push(s.messages.name + e), "default" in a && typeof a.default != "object" && (s.useDefault === "hint" && m.push(s.messages.default + a.default), s.useDefault === "placeholder" && v.push(s.messages.default + a.default)), a.examples && !a.examples.some((f) => typeof f == "object") && s.useExamples === "help" && d.push(s.messages.examples + a.examples.map((f) => `
 - ` + f).join("")), d.length && (l.help && d.unshift(l.help), l.help = d.join(`

`)), m.length && !u.composite && (l.hint && m.unshift(l.hint), l.hint = m.join(" - ")), v.length && ((y = (h = u.schema) == null ? void 0 : h.properties) != null && y.placeholder) && (typeof l.placeholder == "string" && v.unshift(l.placeholder), l.placeholder = v.join(" - ")), l.help && (l.help = s.markdown(l.help).trim()), l.subtitle && (l.subtitle = s.markdown(l.subtitle).trim()), "cols" in l && (l.cols = Ql(l.cols));
  const p = Y1(u);
  if (!p(l)) {
    const f = new Error(`component "${u.name}" validation errors`);
    throw f.cause = eo(p.errors), f;
  }
  return (
    /** @type {BaseCompObject} */
    l
  );
}
function Q1(e, t, a, r, i, n, s, o) {
  if (Hy(t)) {
    const l = [], u = [...t.switch];
    u.find((d) => !d.if) || u.push({});
    const c = { ...t };
    delete c.switch;
    for (let d = 0; d < u.length; d++) {
      const m = u[d], v = Rd(e, { ...c, ...yv(m) }, a, r, i, n, s, o);
      l.push(v);
    }
    return { switch: l };
  } else
    return Rd(e, t, a, r, i, n, s, o);
}
function wl(e, t) {
  return e.keyword === "errorMessage" && (e = e.params.errors[0]), t(e);
}
function eo(e) {
  if (!e) return [];
  const t = e.filter((r) => wl(r, (i) => i.keyword === "anyOf" || i.keyword === "oneOf"));
  for (const r of t)
    e.find((n) => wl(n, (s) => s.instancePath === r.instancePath && s.keyword !== "type")) && (e = e.filter((n) => wl(n, (s) => s.instancePath !== r.instancePath || s.keyword !== "type")));
  const a = [];
  for (const r of e) {
    let i = r.instancePath + " " + (r.message ?? r.keyword);
    r.params && (i += " " + JSON.stringify(r.params)), a.push(i);
  }
  return a;
}
function Nd(e, t, a, r, i, n, s) {
  let o;
  if (s === "oneOf" ? o = t.oneOfLayout ?? {} : s === "patternProperties" ? o = t.patternPropertiesLayout ?? {} : o = t.layout ?? {}, !Ad(o)) {
    const u = new Error("layout keyword validation errors at path");
    throw u.cause = eo(Ad.errors), u;
  }
  const l = Q1(e, o, t, a, r, i, n, s);
  if (!Td(l)) {
    const u = new Error("normalized layout validation errors at path");
    throw u.cause = eo(Td.errors), u;
  }
  return l;
}
function $l(e, t, a, r, i, n, s) {
  const { type: o, nullable: l } = n ? { type: n, nullable: s ?? !1 } : En(t), u = [];
  try {
    return { layout: Nd(e, t, o, l, a, r, i), errors: u };
  } catch (c) {
    try {
      return u.push(c.message), c.cause && Array.isArray(c.cause) && u.push(...c.cause), u.push("failed to normalize layout, use default component"), { layout: Nd(e, { ...t, layout: {} }, o, l, a, r, i), errors: u };
    } catch (d) {
      return u.push(d.message), d.cause && Array.isArray(d.cause) && u.push(...d.cause), u.push("failed to produce default layout, hide this fragment"), { layout: { comp: "none" }, errors: u };
    }
  }
}
const eS = (e, t) => (a, r) => {
  var u;
  const i = t.opts.uriResolver.resolve(a, r), [n, s] = i.split("#");
  if (e[n] = e[n] ?? ((u = t.getSchema(n)) == null ? void 0 : u.schema), !e[n]) throw new Error(`reference not found ${n}`);
  if (!s) return [e[n], n, i];
  const o = s.split("/").filter((c) => !!c), { value: l } = o.reduce((c, d) => {
    if (c.path.push(d), !(d in c.value)) throw new Error(`reference not found ${n}#${c.path.join("/")}`);
    return c.value = c.value[d], c;
  }, { path: (
    /** @type {string[]} */
    []
  ), value: e[n] });
  return [l, n, i];
};
function tS(e, t, a = "en", r = "en") {
  if (!e.$id) throw new Error("missing schema id");
  const i = eS({ [e.$id]: e }, t), n = [];
  return to(e, e.$id, i, a, r, n), i;
}
const to = (e, t, a, r, i, n) => {
  if (!n.includes(e)) {
    n.push(e);
    for (const s of Object.keys(e))
      if (e[s] && typeof e[s] == "object")
        if ("$ref" in e[s]) {
          const o = e[s].$ref.replace("~$locale~", r), l = e[s].$ref.replace("~$locale~", i);
          let u, c;
          try {
            [u, c] = a(t, o), e[s].$ref = o;
          } catch {
            [u, c] = a(t, l), e[s].$ref = l;
          }
          typeof u == "string" ? e[s] = u : to(u, c, a, r, i, n);
        } else
          to(e[s], t, a, r, i, n);
  }
};
function aS(e, t, a) {
  let r = null;
  if (e.items && e.items.$ref) {
    const [i] = a(t, e.items.$ref);
    r = r ?? Sa(e), r.items = { ...i, ...e.items };
  }
  if (e.properties) {
    for (const i in e.properties)
      if (e.properties[i].$ref) {
        const [n] = a(t, e.properties[i].$ref);
        r = r ?? Sa(e), r.properties[i] = { ...n, ...e.properties[i] };
      }
  }
  if (e.oneOf) {
    for (let i = 0; i < e.oneOf.length; i++)
      if (e.oneOf[i].$ref) {
        const [n] = a(t, e.oneOf[i].$ref);
        r = r ?? Sa(e), r.oneOf[i] = { ...n, ...e.oneOf[i] };
      }
  }
  if (e.anyOf) {
    for (let i = 0; i < e.anyOf.length; i++)
      if (e.anyOf[i].$ref) {
        const [n] = a(t, e.anyOf[i].$ref);
        r = r ?? Sa(e), r.anyOf[i] = { ...n, ...e.anyOf[i] };
      }
  }
  if (e.allOf) {
    for (let i = 0; i < e.allOf.length; i++)
      if (e.allOf[i].$ref) {
        const [n] = a(t, e.allOf[i].$ref);
        r = r ?? Sa(e), r.allOf[i] = { ...n, ...e.allOf[i] };
      }
  }
  return r ?? e;
}
function $n(e, t, a, r, i, n, s, o, l, u, c, d, m, v, p, h) {
  var J, ae, X, L, A, x, V, $, b, I;
  let y = t, f = e, g = d, P, S = e.errorMessage;
  e.__pointer = d, f.$ref && ([P, y, g] = r(t, f.$ref), P.__pointer = g, f = { ...e, ...P }, S && P.errorMessage, S = P.errorMessage = P.errorMessage ?? S ?? {}, delete f.$ref), S = e.errorMessage = S ?? {};
  const _ = J1(f);
  _ && (f = _, d === g && (d = f.__pointer), g = f.__pointer);
  const j = g === f.$id ? g += "#" : g, F = aS(f, y, r);
  let { type: R, nullable: U } = En(F);
  if (h && (R = h), _ && (U = !0), !l[d]) {
    const k = $l(
      c,
      /** @type {import('@json-layout/vocabulary').SchemaFragment} */
      F,
      d,
      a,
      void 0,
      R,
      U
    );
    l[d] = k.layout, k.errors.length && (o[d.replace("_jl#", "/")] = k.errors);
  }
  const W = l[d];
  let D = !p;
  const O = (k, E) => {
    E.pure || (D = !1);
    const M = k.findIndex((K) => K.type === E.type && K.expr === E.expr);
    M !== -1 ? E.ref = M : (E.ref = k.length, k.push(E));
  }, B = (k) => {
    if (k.if && O(u, k.if), mm(k))
      for (const E of k.children) B(E);
  }, N = _n(W) ? W.switch : [W];
  for (const k of N) {
    if (!a.components[k.comp]) throw new Error(`Component "${k.comp}" not found`);
    if (k.if && O(u, k.if), Xr(k, a.components))
      for (const K of k.children) B(K);
    f.const !== void 0 && k.constData === void 0 && (k.constData = f.const), k.constData !== void 0 && !k.getConstData && (k.getConstData = { type: "js-eval", expr: "layout.constData", pure: !0, dataAlias: "value" }), k.getConstData && O(u, k.getConstData);
    let M;
    if ("default" in f && (a.useDefault === "data" || a.useDefault === !0 || m) ? M = f.default : m && (U ? M = null : R === "object" && Xr(k, a.components) ? M = {} : R === "array" ? M = [] : R === "boolean" && (M = !1)), M !== void 0 && k.defaultData === void 0 && (k.defaultData = M), k.defaultData !== void 0 && !k.getDefaultData && (k.getDefaultData = { type: "js-eval", expr: "layout.defaultData", pure: !0, dataAlias: "value" }), k.getDefaultData && O(u, k.getDefaultData), k.options !== void 0 && !k.getOptions && (k.getOptions = { type: "js-eval", expr: "layout.options", pure: !0, dataAlias: "value" }), k.getOptions && O(u, k.getOptions), k.props !== void 0 && !k.getProps && (k.getProps = { type: "js-eval", expr: "layout.props", pure: !0, dataAlias: "value" }), k.getProps && O(u, k.getProps), k.transformData && O(u, k.transformData), vm(k) && (k.itemTitle && O(u, k.itemTitle), k.itemSubtitle && O(u, k.itemSubtitle), k.itemCopy && O(u, k.itemCopy)), Zr(k, a.components) && k.getItems) {
      if (Fo(k.getItems) && O(u, k.getItems), qo(k.getItems)) {
        if (O(u, k.getItems.url), k.getItems.searchParams)
          for (const K of Object.values(k.getItems.searchParams))
            O(u, K);
        if (k.getItems.headers)
          for (const K of Object.values(k.getItems.headers))
            O(u, K);
      }
      k.getItems.itemHeader && O(u, k.getItems.itemHeader), k.getItems.itemTitle && O(u, k.getItems.itemTitle), k.getItems.itemKey && O(u, k.getItems.itemKey), k.getItems.itemValue && O(u, k.getItems.itemValue), k.getItems.itemIcon && O(u, k.getItems.itemIcon), k.getItems.itemsResults && O(u, k.getItems.itemsResults);
    }
  }
  const z = {
    title: f.title,
    key: c ?? "",
    pointer: d,
    refPointer: g,
    pure: D,
    propertyKeys: [],
    roPropertyKeys: [],
    nullable: U,
    required: m && !U
  };
  if (v) {
    if (_n(W)) throw new Error("Switch struct not allowed in conditional schema");
    z.condition = { type: "js-eval", expr: v, pure: !0, dataAlias: "value" }, O(u, z.condition);
  }
  if (f.oneOf && (S.oneOf = S.oneOf ?? a.messages.errorOneOf), R === "object") {
    if (f.properties) {
      z.children = z.children ?? [];
      for (const k of Object.keys(f.properties)) {
        z.propertyKeys.push(k), f.properties[k].readOnly && z.roPropertyKeys.push(k);
        const E = f.dependentRequired && Object.values(f.dependentRequired).some((K) => K.includes(k)), M = `${j}/properties/${k}`;
        if (n[M] || (n[M] = "recursing", n[M] = $n(
          f.properties[k],
          y,
          a,
          r,
          i,
          n,
          s,
          o,
          l,
          u,
          k,
          M,
          (J = f.required) == null ? void 0 : J.includes(k),
          void 0,
          E
        )), z.children.push(M), (ae = f.dependentSchemas) != null && ae[k] || (X = f.dependencies) != null && X[k] && !Array.isArray(f.dependencies[k])) {
          const K = ((L = f.dependentSchemas) == null ? void 0 : L[k]) ?? f.dependencies[k], Y = (A = f.dependentSchemas) != null && A[k] ? `${j}/dependentSchemas/${k}` : `${j}/dependencies/${k}`;
          n[Y] || (n[Y] = "recursing", n[Y] = $n(
            K,
            y,
            a,
            r,
            i,
            n,
            s,
            o,
            l,
            u,
            `$deps-${k}`,
            Y,
            !1,
            `data["${k}"] !== undefined`,
            void 0,
            "object"
          )), z.propertyKeys.push("$" + Y), z.roPropertyKeys.push("$" + Y), z.children.push(Y);
        }
      }
    }
    if (f.allOf)
      for (let k = 0; k < f.allOf.length; k++) {
        const E = `${j}/allOf/${k}`;
        n[E] || (n[E] = "recursing", n[E] = $n(
          f.allOf[k],
          y,
          a,
          r,
          i,
          n,
          s,
          o,
          l,
          u,
          `$allOf-${k}`,
          E,
          !1,
          void 0,
          void 0,
          "object"
        )), z.propertyKeys.push("$" + E), z.roPropertyKeys.push("$" + E), z.children = z.children ?? [], z.children.push(E);
      }
    if (f.oneOf) {
      let k;
      (x = f.discriminator) != null && x.propertyName && (k = (V = f.discriminator) == null ? void 0 : V.propertyName);
      const E = `${j}/oneOf`;
      if (!l[E]) {
        const le = $l(
          "",
          f,
          E,
          a,
          "oneOf",
          R,
          U
        ), se = _n(le.layout) ? le.layout.switch : [le.layout];
        for (const Q of se) {
          let ue;
          "default" in f && (a.useDefault === "data" || a.useDefault === !0 || m) ? ue = f.default : ue = U ? null : {}, Q.defaultData === void 0 && (Q.defaultData = ue), Q.defaultData !== void 0 && !Q.getDefaultData && (Q.getDefaultData = { type: "js-eval", expr: "layout.defaultData", pure: !0, dataAlias: "value" }), Q.getDefaultData && O(u, Q.getDefaultData);
        }
        l[E] = le.layout, le.errors.length && (o[E.replace("_jl#", "/")] = le.errors);
      }
      const M = [], K = [], Y = [];
      for (let le = 0; le < f.oneOf.length; le++) {
        f.oneOf[le].type || (f.oneOf[le].type = R);
        const se = `${E}/${le}`;
        i[se] || (i[se] = "recursing", i[se] = as(
          f.oneOf[le],
          y,
          a,
          r,
          i,
          n,
          s,
          o,
          l,
          u,
          se,
          `option ${le + 1}`,
          !0,
          k
        )), M.push(se), K.push("$" + se), Y.push("$" + se);
      }
      n[E] || (n[E] = {
        key: "$oneOf",
        pointer: E,
        refPointer: E,
        childrenTrees: M,
        discriminator: k,
        pure: !M.some((le) => {
          var se, Q;
          return !((Q = n[(se = i[le]) == null ? void 0 : se.root]) != null && Q.pure);
        }),
        propertyKeys: K,
        roPropertyKeys: Y
      }), z.propertyKeys = z.propertyKeys.concat(n[E].propertyKeys), z.roPropertyKeys = z.roPropertyKeys.concat(n[E].roPropertyKeys), z.children = z.children ?? [], z.children.push(E);
    }
    if (f.patternProperties) {
      const k = `${d}/patternProperties`;
      if (!l[k]) {
        const M = $l(
          "",
          f,
          k,
          a,
          "patternProperties",
          R,
          U
        );
        l[k] = M.layout, M.errors.length && (o[k.replace("_jl#", "/")] = M.errors);
      }
      const E = [];
      for (const M of Object.keys(f.patternProperties)) {
        const K = `${k}/${M}`;
        if (!i[K]) {
          i[K] = "recursing", i[K] = as(
            f.patternProperties[M],
            y,
            a,
            r,
            i,
            n,
            s,
            o,
            l,
            u,
            K,
            "pattern " + M
          );
          const Y = l[n[i[K].root].pointer];
          if (_n(Y))
            for (const le of Y.switch)
              le.nullable = !0;
          else
            Y.nullable = !0;
        }
        E.push(K);
      }
      n[k] || (n[k] = {
        key: "$patternProperties",
        pointer: k,
        refPointer: k,
        childrenTrees: E,
        pure: !E.some((M) => {
          var K, Y;
          return !((Y = n[(K = i[M]) == null ? void 0 : K.root]) != null && Y.pure);
        }),
        propertyKeys: [],
        roPropertyKeys: []
      }), z.children = z.children ?? [], z.children.push(k);
    }
    if (f.if) {
      if (s.push(`${d}/if`), f.then) {
        const k = `${j}/then`;
        n[k] || (n[k] = "recursing", n[k] = $n(
          f.then,
          y,
          a,
          r,
          i,
          n,
          s,
          o,
          l,
          u,
          "$then",
          k,
          !1,
          `validates["${d}/if"](data)`,
          void 0,
          "object"
        )), z.children = z.children ?? [], z.propertyKeys.push("$" + k), z.roPropertyKeys.push("$" + k), z.children.push(k);
      }
      if (f.else) {
        const k = `${j}/else`;
        n[k] || (n[k] = "recursing", n[k] = $n(
          f.else,
          y,
          a,
          r,
          i,
          n,
          s,
          o,
          l,
          u,
          "$else",
          k,
          !1,
          `!validates["${d}/if"](data)`,
          void 0,
          "object"
        )), z.children = z.children ?? [], z.propertyKeys.push("$" + k), z.roPropertyKeys.push("$" + k), z.children.push(k);
      }
    }
    for (const k of z.propertyKeys)
      ($ = f == null ? void 0 : f.required) != null && $.includes(k) && (S.required = e.errorMessage.required ?? {}, S.required[k] = S.required[k] ?? a.messages.errorRequired), f.dependentRequired && Object.keys(f.dependentRequired).includes(k) && (S.dependentRequired = S.dependentRequired ?? a.messages.errorRequired);
  }
  if (R === "array" && f.items)
    if (Array.isArray(f.items)) {
      z.children = z.children ?? [];
      for (let k = 0; k < f.items.length; k++) {
        const E = f.items[k], M = `${j}/items/${k}`;
        n[M] || (n[M] = "recursing", n[M] = $n(
          E,
          y,
          a,
          r,
          i,
          n,
          s,
          o,
          l,
          u,
          k,
          M,
          !0
        )), z.children.push(M);
      }
    } else {
      const k = `${j}/items`;
      i[k] || (i[k] = "recursing", i[k] = as(
        f.items,
        y,
        a,
        r,
        i,
        n,
        s,
        o,
        l,
        u,
        k
      )), z.childrenTrees = [k];
      const E = l[n[i[k].root].pointer];
      if (_n(E))
        for (const M of E.switch)
          M.nullable = !0;
      else
        E.nullable = !0;
    }
  for (const k of z.children || [])
    n[k].pure || (z.pure = !1);
  for (const k of z.childrenTrees || [])
    (I = n[(b = i[k]) == null ? void 0 : b.root]) != null && I.pure || (z.pure = !1);
  return z;
}
function as(e, t, a, r, i, n, s, o, l, u, c, d, m, v) {
  var y, f, g, P;
  let p;
  n[c] || (n[c] = "recursing", n[c] = $n(
    e,
    t,
    a,
    r,
    i,
    n,
    s,
    o,
    l,
    u,
    "",
    c,
    !0
  ), p = n[c].title, m && delete n[c].title, s.push(n[c].refPointer));
  let h;
  if (v) {
    if (e.$ref) {
      const [S] = r(t, e.$ref);
      h = (f = (y = S.properties) == null ? void 0 : y[v]) == null ? void 0 : f.const;
    } else
      h = (P = (g = e.properties) == null ? void 0 : g[v]) == null ? void 0 : P.const;
    if (h === void 0) throw new Error(`const discriminator ${v} missing in oneOf item ${c}`);
  }
  return { title: p ?? d ?? "", root: c, refPointer: n[c].refPointer, discriminatorValue: h };
}
const ao = (e, t, a = "en") => {
  if (!(!e || typeof e != "object"))
    for (const [r, i] of Object.entries(e))
      if (r.startsWith("x-i18n-")) {
        typeof i != "object" && console.error(`i18n property ${r} should be an object`);
        const n = r.replace("x-i18n-", "");
        e[n] = i[t] ?? i[a] ?? e[n], delete e[r];
      } else if (Array.isArray(i))
        for (const n of i)
          ao(n, t, a);
      else
        ao(i, t, a);
};
var no = { exports: {} }, gv = {};
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.formatNames = e.fastFormats = e.fullFormats = void 0;
  function t(D, O) {
    return { validate: D, compare: O };
  }
  e.fullFormats = {
    // date: http://tools.ietf.org/html/rfc3339#section-5.6
    date: t(n, s),
    // date-time: http://tools.ietf.org/html/rfc3339#section-5.6
    time: t(l(!0), u),
    "date-time": t(m(!0), v),
    "iso-time": t(l(), c),
    "iso-date-time": t(m(), p),
    // duration: https://tools.ietf.org/html/rfc3339#appendix-A
    duration: /^P(?!$)((\d+Y)?(\d+M)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?|(\d+W)?)$/,
    uri: f,
    "uri-reference": /^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,
    // uri-template: https://tools.ietf.org/html/rfc6570
    "uri-template": /^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i,
    // For the source: https://gist.github.com/dperini/729294
    // For test cases: https://mathiasbynens.be/demo/url-regex
    url: /^(?:https?|ftp):\/\/(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)(?:\.(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)*(?:\.(?:[a-z\u{00a1}-\u{ffff}]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/iu,
    email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,
    hostname: /^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/i,
    // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html
    ipv4: /^(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)$/,
    ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))$/i,
    regex: W,
    // uuid: http://tools.ietf.org/html/rfc4122
    uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,
    // JSON-pointer: https://tools.ietf.org/html/rfc6901
    // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A
    "json-pointer": /^(?:\/(?:[^~/]|~0|~1)*)*$/,
    "json-pointer-uri-fragment": /^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,
    // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00
    "relative-json-pointer": /^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/,
    // the following formats are used by the openapi specification: https://spec.openapis.org/oas/v3.0.0#data-types
    // byte: https://github.com/miguelmota/is-base64
    byte: P,
    // signed 32 bit integer
    int32: { type: "number", validate: j },
    // signed 64 bit integer
    int64: { type: "number", validate: F },
    // C-type float
    float: { type: "number", validate: R },
    // C-type double
    double: { type: "number", validate: R },
    // hint to the UI to hide input strings
    password: !0,
    // unchecked string payload
    binary: !0
  }, e.fastFormats = {
    ...e.fullFormats,
    date: t(/^\d\d\d\d-[0-1]\d-[0-3]\d$/, s),
    time: t(/^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i, u),
    "date-time": t(/^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i, v),
    "iso-time": t(/^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i, c),
    "iso-date-time": t(/^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i, p),
    // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js
    uri: /^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/)?[^\s]*$/i,
    "uri-reference": /^(?:(?:[a-z][a-z0-9+\-.]*:)?\/?\/)?(?:[^\\\s#][^\s#]*)?(?:#[^\\\s]*)?$/i,
    // email (sources from jsen validator):
    // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363
    // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'wilful violation')
    email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i
  }, e.formatNames = Object.keys(e.fullFormats);
  function a(D) {
    return D % 4 === 0 && (D % 100 !== 0 || D % 400 === 0);
  }
  const r = /^(\d\d\d\d)-(\d\d)-(\d\d)$/, i = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
  function n(D) {
    const O = r.exec(D);
    if (!O)
      return !1;
    const B = +O[1], N = +O[2], z = +O[3];
    return N >= 1 && N <= 12 && z >= 1 && z <= (N === 2 && a(B) ? 29 : i[N]);
  }
  function s(D, O) {
    if (D && O)
      return D > O ? 1 : D < O ? -1 : 0;
  }
  const o = /^(\d\d):(\d\d):(\d\d(?:\.\d+)?)(z|([+-])(\d\d)(?::?(\d\d))?)?$/i;
  function l(D) {
    return function(B) {
      const N = o.exec(B);
      if (!N)
        return !1;
      const z = +N[1], J = +N[2], ae = +N[3], X = N[4], L = N[5] === "-" ? -1 : 1, A = +(N[6] || 0), x = +(N[7] || 0);
      if (A > 23 || x > 59 || D && !X)
        return !1;
      if (z <= 23 && J <= 59 && ae < 60)
        return !0;
      const V = J - x * L, $ = z - A * L - (V < 0 ? 1 : 0);
      return ($ === 23 || $ === -1) && (V === 59 || V === -1) && ae < 61;
    };
  }
  function u(D, O) {
    if (!(D && O))
      return;
    const B = (/* @__PURE__ */ new Date("2020-01-01T" + D)).valueOf(), N = (/* @__PURE__ */ new Date("2020-01-01T" + O)).valueOf();
    if (B && N)
      return B - N;
  }
  function c(D, O) {
    if (!(D && O))
      return;
    const B = o.exec(D), N = o.exec(O);
    if (B && N)
      return D = B[1] + B[2] + B[3], O = N[1] + N[2] + N[3], D > O ? 1 : D < O ? -1 : 0;
  }
  const d = /t|\s/i;
  function m(D) {
    const O = l(D);
    return function(N) {
      const z = N.split(d);
      return z.length === 2 && n(z[0]) && O(z[1]);
    };
  }
  function v(D, O) {
    if (!(D && O))
      return;
    const B = new Date(D).valueOf(), N = new Date(O).valueOf();
    if (B && N)
      return B - N;
  }
  function p(D, O) {
    if (!(D && O))
      return;
    const [B, N] = D.split(d), [z, J] = O.split(d), ae = s(B, z);
    if (ae !== void 0)
      return ae || u(N, J);
  }
  const h = /\/|:/, y = /^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;
  function f(D) {
    return h.test(D) && y.test(D);
  }
  const g = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm;
  function P(D) {
    return g.lastIndex = 0, g.test(D);
  }
  const S = -2147483648, _ = 2 ** 31 - 1;
  function j(D) {
    return Number.isInteger(D) && D <= _ && D >= S;
  }
  function F(D) {
    return Number.isInteger(D);
  }
  function R() {
    return !0;
  }
  const U = /[^\\]\\Z/;
  function W(D) {
    if (U.test(D))
      return !1;
    try {
      return new RegExp(D), !0;
    } catch {
      return !1;
    }
  }
})(gv);
var bv = {};
(function(e) {
  Object.defineProperty(e, "__esModule", { value: !0 }), e.formatLimitDefinition = void 0;
  const t = Hu, a = Ie, r = a.operators, i = {
    formatMaximum: { okStr: "<=", ok: r.LTE, fail: r.GT },
    formatMinimum: { okStr: ">=", ok: r.GTE, fail: r.LT },
    formatExclusiveMaximum: { okStr: "<", ok: r.LT, fail: r.GTE },
    formatExclusiveMinimum: { okStr: ">", ok: r.GT, fail: r.LTE }
  }, n = {
    message: ({ keyword: o, schemaCode: l }) => (0, a.str)`should be ${i[o].okStr} ${l}`,
    params: ({ keyword: o, schemaCode: l }) => (0, a._)`{comparison: ${i[o].okStr}, limit: ${l}}`
  };
  e.formatLimitDefinition = {
    keyword: Object.keys(i),
    type: "string",
    schemaType: "string",
    $data: !0,
    error: n,
    code(o) {
      const { gen: l, data: u, schemaCode: c, keyword: d, it: m } = o, { opts: v, self: p } = m;
      if (!v.validateFormats)
        return;
      const h = new t.KeywordCxt(m, p.RULES.all.format.definition, "format");
      h.$data ? y() : f();
      function y() {
        const P = l.scopeValue("formats", {
          ref: p.formats,
          code: v.code.formats
        }), S = l.const("fmt", (0, a._)`${P}[${h.schemaCode}]`);
        o.fail$data((0, a.or)((0, a._)`typeof ${S} != "object"`, (0, a._)`${S} instanceof RegExp`, (0, a._)`typeof ${S}.compare != "function"`, g(S)));
      }
      function f() {
        const P = h.schema, S = p.formats[P];
        if (!S || S === !0)
          return;
        if (typeof S != "object" || S instanceof RegExp || typeof S.compare != "function")
          throw new Error(`"${d}": format "${P}" does not define "compare" function`);
        const _ = l.scopeValue("formats", {
          key: P,
          ref: S,
          code: v.code.formats ? (0, a._)`${v.code.formats}${(0, a.getProperty)(P)}` : void 0
        });
        o.fail$data(g(_));
      }
      function g(P) {
        return (0, a._)`${P}.compare(${u}, ${c}) ${i[d].fail} 0`;
      }
    },
    dependencies: ["format"]
  };
  const s = (o) => (o.addKeyword(e.formatLimitDefinition), o);
  e.default = s;
})(bv);
(function(e, t) {
  Object.defineProperty(t, "__esModule", { value: !0 });
  const a = gv, r = bv, i = Ie, n = new i.Name("fullFormats"), s = new i.Name("fastFormats"), o = (u, c = { keywords: !0 }) => {
    if (Array.isArray(c))
      return l(u, c, a.fullFormats, n), u;
    const [d, m] = c.mode === "fast" ? [a.fastFormats, s] : [a.fullFormats, n], v = c.formats || a.formatNames;
    return l(u, v, d, m), c.keywords && (0, r.default)(u), u;
  };
  o.get = (u, c = "full") => {
    const m = (c === "fast" ? a.fastFormats : a.fullFormats)[u];
    if (!m)
      throw new Error(`Unknown format "${u}"`);
    return m;
  };
  function l(u, c, d, m) {
    var v, p;
    (v = (p = u.opts.code).formats) !== null && v !== void 0 || (p.formats = (0, i._)`require("ajv-formats/dist/formats").${m}`);
    for (const h of c)
      u.addFormat(h, d[h]);
  }
  e.exports = t = o, Object.defineProperty(t, "__esModule", { value: !0 }), t.default = o;
})(no, no.exports);
var nS = no.exports;
const rS = /* @__PURE__ */ xr(nS);
function Uu() {
  return {
    async: !1,
    breaks: !1,
    extensions: null,
    gfm: !0,
    hooks: null,
    pedantic: !1,
    renderer: null,
    silent: !1,
    tokenizer: null,
    walkTokens: null
  };
}
let Un = Uu();
function kv(e) {
  Un = e;
}
const ni = { exec: () => null };
function Ue(e, t = "") {
  let a = typeof e == "string" ? e : e.source;
  const r = {
    replace: (i, n) => {
      let s = typeof n == "string" ? n : n.source;
      return s = s.replace(zt.caret, "$1"), a = a.replace(i, s), r;
    },
    getRegex: () => new RegExp(a, t)
  };
  return r;
}
const zt = {
  codeRemoveIndent: /^(?: {1,4}| {0,3}\t)/gm,
  outputLinkReplace: /\\([\[\]])/g,
  indentCodeCompensation: /^(\s+)(?:```)/,
  beginningSpace: /^\s+/,
  endingHash: /#$/,
  startingSpaceChar: /^ /,
  endingSpaceChar: / $/,
  nonSpaceChar: /[^ ]/,
  newLineCharGlobal: /\n/g,
  tabCharGlobal: /\t/g,
  multipleSpaceGlobal: /\s+/g,
  blankLine: /^[ \t]*$/,
  doubleBlankLine: /\n[ \t]*\n[ \t]*$/,
  blockquoteStart: /^ {0,3}>/,
  blockquoteSetextReplace: /\n {0,3}((?:=+|-+) *)(?=\n|$)/g,
  blockquoteSetextReplace2: /^ {0,3}>[ \t]?/gm,
  listReplaceTabs: /^\t+/,
  listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,
  listIsTask: /^\[[ xX]\] /,
  listReplaceTask: /^\[[ xX]\] +/,
  anyLine: /\n.*\n/,
  hrefBrackets: /^<(.*)>$/,
  tableDelimiter: /[:|]/,
  tableAlignChars: /^\||\| *$/g,
  tableRowBlankLine: /\n[ \t]*$/,
  tableAlignRight: /^ *-+: *$/,
  tableAlignCenter: /^ *:-+: *$/,
  tableAlignLeft: /^ *:-+ *$/,
  startATag: /^<a /i,
  endATag: /^<\/a>/i,
  startPreScriptTag: /^<(pre|code|kbd|script)(\s|>)/i,
  endPreScriptTag: /^<\/(pre|code|kbd|script)(\s|>)/i,
  startAngleBracket: /^</,
  endAngleBracket: />$/,
  pedanticHrefTitle: /^([^'"]*[^\s])\s+(['"])(.*)\2/,
  unicodeAlphaNumeric: /[\p{L}\p{N}]/u,
  escapeTest: /[&<>"']/,
  escapeReplace: /[&<>"']/g,
  escapeTestNoEncode: /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,
  escapeReplaceNoEncode: /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/g,
  unescapeTest: /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig,
  caret: /(^|[^\[])\^/g,
  percentDecode: /%25/g,
  findPipe: /\|/g,
  splitPipe: / \|/,
  slashPipe: /\\\|/g,
  carriageReturn: /\r\n|\r/g,
  spaceLine: /^ +$/gm,
  notSpaceStart: /^\S*/,
  endingNewline: /\n$/,
  listItemRegex: (e) => new RegExp(`^( {0,3}${e})((?:[	 ][^\\n]*)?(?:\\n|$))`),
  nextBulletRegex: (e) => new RegExp(`^ {0,${Math.min(3, e - 1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`),
  hrRegex: (e) => new RegExp(`^ {0,${Math.min(3, e - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`),
  fencesBeginRegex: (e) => new RegExp(`^ {0,${Math.min(3, e - 1)}}(?:\`\`\`|~~~)`),
  headingBeginRegex: (e) => new RegExp(`^ {0,${Math.min(3, e - 1)}}#`),
  htmlBeginRegex: (e) => new RegExp(`^ {0,${Math.min(3, e - 1)}}<(?:[a-z].*>|!--)`, "i")
}, iS = /^(?:[ \t]*(?:\n|$))+/, sS = /^((?: {4}| {0,3}\t)[^\n]+(?:\n(?:[ \t]*(?:\n|$))*)?)+/, lS = /^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/, wi = /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/, oS = /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/, Wu = /(?:[*+-]|\d{1,9}[.)])/, wv = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\n(?!\s*?\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\n {0,3}(=+|-+) *(?:\n+|$)/, $v = Ue(wv).replace(/bull/g, Wu).replace(/blockCode/g, /(?: {4}| {0,3}\t)/).replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g, / {0,3}>/).replace(/heading/g, / {0,3}#{1,6}/).replace(/html/g, / {0,3}<[^\n>]+>\n/).replace(/\|table/g, "").getRegex(), uS = Ue(wv).replace(/bull/g, Wu).replace(/blockCode/g, /(?: {4}| {0,3}\t)/).replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g, / {0,3}>/).replace(/heading/g, / {0,3}#{1,6}/).replace(/html/g, / {0,3}<[^\n>]+>\n/).replace(/table/g, / {0,3}\|?(?:[:\- ]*\|)+[\:\- ]*\n/).getRegex(), Gu = /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/, cS = /^[^\n]+/, Yu = /(?!\s*\])(?:\\.|[^\[\]\\])+/, dS = Ue(/^ {0,3}\[(label)\]: *(?:\n[ \t]*)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n[ \t]*)?| *\n[ \t]*)(title))? *(?:\n+|$)/).replace("label", Yu).replace("title", /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/).getRegex(), fS = Ue(/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/).replace(/bull/g, Wu).getRegex(), Bs = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul", Xu = /<!--(?:-?>|[\s\S]*?(?:-->|$))/, mS = Ue("^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$))", "i").replace("comment", Xu).replace("tag", Bs).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(), Sv = Ue(Gu).replace("hr", wi).replace("heading", " {0,3}#{1,6}(?:\\s|$)").replace("|lheading", "").replace("|table", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", Bs).getRegex(), vS = Ue(/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/).replace("paragraph", Sv).getRegex(), Zu = {
  blockquote: vS,
  code: sS,
  def: dS,
  fences: lS,
  heading: oS,
  hr: wi,
  html: mS,
  lheading: $v,
  list: fS,
  newline: iS,
  paragraph: Sv,
  table: ni,
  text: cS
}, zd = Ue("^ *([^\\n ].*)\\n {0,3}((?:\\| *)?:?-+:? *(?:\\| *:?-+:? *)*(?:\\| *)?)(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)").replace("hr", wi).replace("heading", " {0,3}#{1,6}(?:\\s|$)").replace("blockquote", " {0,3}>").replace("code", "(?: {4}| {0,3}	)[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", Bs).getRegex(), pS = {
  ...Zu,
  lheading: uS,
  table: zd,
  paragraph: Ue(Gu).replace("hr", wi).replace("heading", " {0,3}#{1,6}(?:\\s|$)").replace("|lheading", "").replace("table", zd).replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", Bs).getRegex()
}, hS = {
  ...Zu,
  html: Ue(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment", Xu).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
  heading: /^(#{1,6})(.*)(?:\n+|$)/,
  fences: ni,
  // fences not supported
  lheading: /^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
  paragraph: Ue(Gu).replace("hr", wi).replace("heading", ` *#{1,6} *[^
]`).replace("lheading", $v).replace("|table", "").replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").replace("|tag", "").getRegex()
}, yS = /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/, gS = /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/, _v = /^( {2,}|\\)\n(?!\s*$)/, bS = /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/, Fs = /[\p{P}\p{S}]/u, Ju = /[\s\p{P}\p{S}]/u, Pv = /[^\s\p{P}\p{S}]/u, kS = Ue(/^((?![*_])punctSpace)/, "u").replace(/punctSpace/g, Ju).getRegex(), Cv = /(?!~)[\p{P}\p{S}]/u, wS = /(?!~)[\s\p{P}\p{S}]/u, $S = /(?:[^\s\p{P}\p{S}]|~)/u, SS = /\[[^[\]]*?\]\((?:\\.|[^\\\(\)]|\((?:\\.|[^\\\(\)])*\))*\)|`[^`]*?`|<[^<>]*?>/g, xv = /^(?:\*+(?:((?!\*)punct)|[^\s*]))|^_+(?:((?!_)punct)|([^\s_]))/, _S = Ue(xv, "u").replace(/punct/g, Fs).getRegex(), PS = Ue(xv, "u").replace(/punct/g, Cv).getRegex(), Vv = "^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)punct(\\*+)(?=[\\s]|$)|notPunctSpace(\\*+)(?!\\*)(?=punctSpace|$)|(?!\\*)punctSpace(\\*+)(?=notPunctSpace)|[\\s](\\*+)(?!\\*)(?=punct)|(?!\\*)punct(\\*+)(?!\\*)(?=punct)|notPunctSpace(\\*+)(?=notPunctSpace)", CS = Ue(Vv, "gu").replace(/notPunctSpace/g, Pv).replace(/punctSpace/g, Ju).replace(/punct/g, Fs).getRegex(), xS = Ue(Vv, "gu").replace(/notPunctSpace/g, $S).replace(/punctSpace/g, wS).replace(/punct/g, Cv).getRegex(), VS = Ue("^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)punct(_+)(?=[\\s]|$)|notPunctSpace(_+)(?!_)(?=punctSpace|$)|(?!_)punctSpace(_+)(?=notPunctSpace)|[\\s](_+)(?!_)(?=punct)|(?!_)punct(_+)(?!_)(?=punct)", "gu").replace(/notPunctSpace/g, Pv).replace(/punctSpace/g, Ju).replace(/punct/g, Fs).getRegex(), IS = Ue(/\\(punct)/, "gu").replace(/punct/g, Fs).getRegex(), OS = Ue(/^<(scheme:[^\s\x00-\x1f<>]*|email)>/).replace("scheme", /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace("email", /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex(), ES = Ue(Xu).replace("(?:-->|$)", "-->").getRegex(), AS = Ue("^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>").replace("comment", ES).replace("attribute", /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/).getRegex(), fs = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/, TS = Ue(/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/).replace("label", fs).replace("href", /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/).replace("title", /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/).getRegex(), Iv = Ue(/^!?\[(label)\]\[(ref)\]/).replace("label", fs).replace("ref", Yu).getRegex(), Ov = Ue(/^!?\[(ref)\](?:\[\])?/).replace("ref", Yu).getRegex(), jS = Ue("reflink|nolink(?!\\()", "g").replace("reflink", Iv).replace("nolink", Ov).getRegex(), Qu = {
  _backpedal: ni,
  // only used for GFM url
  anyPunctuation: IS,
  autolink: OS,
  blockSkip: SS,
  br: _v,
  code: gS,
  del: ni,
  emStrongLDelim: _S,
  emStrongRDelimAst: CS,
  emStrongRDelimUnd: VS,
  escape: yS,
  link: TS,
  nolink: Ov,
  punctuation: kS,
  reflink: Iv,
  reflinkSearch: jS,
  tag: AS,
  text: bS,
  url: ni
}, MS = {
  ...Qu,
  link: Ue(/^!?\[(label)\]\((.*?)\)/).replace("label", fs).getRegex(),
  reflink: Ue(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", fs).getRegex()
}, ro = {
  ...Qu,
  emStrongRDelimAst: xS,
  emStrongLDelim: PS,
  url: Ue(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/, "i").replace("email", /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(),
  _backpedal: /(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,
  del: /^(~~?)(?=[^\s~])((?:\\.|[^\\])*?(?:\\.|[^\s~\\]))\1(?=[^~]|$)/,
  text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
}, DS = {
  ...ro,
  br: Ue(_v).replace("{2,}", "*").getRegex(),
  text: Ue(ro.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex()
}, qi = {
  normal: Zu,
  gfm: pS,
  pedantic: hS
}, qr = {
  normal: Qu,
  gfm: ro,
  breaks: DS,
  pedantic: MS
}, RS = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
}, Ld = (e) => RS[e];
function Na(e, t) {
  if (t) {
    if (zt.escapeTest.test(e))
      return e.replace(zt.escapeReplace, Ld);
  } else if (zt.escapeTestNoEncode.test(e))
    return e.replace(zt.escapeReplaceNoEncode, Ld);
  return e;
}
function Bd(e) {
  try {
    e = encodeURI(e).replace(zt.percentDecode, "%");
  } catch {
    return null;
  }
  return e;
}
function Fd(e, t) {
  var n;
  const a = e.replace(zt.findPipe, (s, o, l) => {
    let u = !1, c = o;
    for (; --c >= 0 && l[c] === "\\"; )
      u = !u;
    return u ? "|" : " |";
  }), r = a.split(zt.splitPipe);
  let i = 0;
  if (r[0].trim() || r.shift(), r.length > 0 && !((n = r.at(-1)) != null && n.trim()) && r.pop(), t)
    if (r.length > t)
      r.splice(t);
    else
      for (; r.length < t; )
        r.push("");
  for (; i < r.length; i++)
    r[i] = r[i].trim().replace(zt.slashPipe, "|");
  return r;
}
function Kr(e, t, a) {
  const r = e.length;
  if (r === 0)
    return "";
  let i = 0;
  for (; i < r && e.charAt(r - i - 1) === t; )
    i++;
  return e.slice(0, r - i);
}
function NS(e, t) {
  if (e.indexOf(t[1]) === -1)
    return -1;
  let a = 0;
  for (let r = 0; r < e.length; r++)
    if (e[r] === "\\")
      r++;
    else if (e[r] === t[0])
      a++;
    else if (e[r] === t[1] && (a--, a < 0))
      return r;
  return -1;
}
function qd(e, t, a, r, i) {
  const n = t.href, s = t.title || null, o = e[1].replace(i.other.outputLinkReplace, "$1");
  if (e[0].charAt(0) !== "!") {
    r.state.inLink = !0;
    const l = {
      type: "link",
      raw: a,
      href: n,
      title: s,
      text: o,
      tokens: r.inlineTokens(o)
    };
    return r.state.inLink = !1, l;
  }
  return {
    type: "image",
    raw: a,
    href: n,
    title: s,
    text: o
  };
}
function zS(e, t, a) {
  const r = e.match(a.other.indentCodeCompensation);
  if (r === null)
    return t;
  const i = r[1];
  return t.split(`
`).map((n) => {
    const s = n.match(a.other.beginningSpace);
    if (s === null)
      return n;
    const [o] = s;
    return o.length >= i.length ? n.slice(i.length) : n;
  }).join(`
`);
}
class ms {
  // set by the lexer
  constructor(t) {
    Ee(this, "options");
    Ee(this, "rules");
    // set by the lexer
    Ee(this, "lexer");
    this.options = t || Un;
  }
  space(t) {
    const a = this.rules.block.newline.exec(t);
    if (a && a[0].length > 0)
      return {
        type: "space",
        raw: a[0]
      };
  }
  code(t) {
    const a = this.rules.block.code.exec(t);
    if (a) {
      const r = a[0].replace(this.rules.other.codeRemoveIndent, "");
      return {
        type: "code",
        raw: a[0],
        codeBlockStyle: "indented",
        text: this.options.pedantic ? r : Kr(r, `
`)
      };
    }
  }
  fences(t) {
    const a = this.rules.block.fences.exec(t);
    if (a) {
      const r = a[0], i = zS(r, a[3] || "", this.rules);
      return {
        type: "code",
        raw: r,
        lang: a[2] ? a[2].trim().replace(this.rules.inline.anyPunctuation, "$1") : a[2],
        text: i
      };
    }
  }
  heading(t) {
    const a = this.rules.block.heading.exec(t);
    if (a) {
      let r = a[2].trim();
      if (this.rules.other.endingHash.test(r)) {
        const i = Kr(r, "#");
        (this.options.pedantic || !i || this.rules.other.endingSpaceChar.test(i)) && (r = i.trim());
      }
      return {
        type: "heading",
        raw: a[0],
        depth: a[1].length,
        text: r,
        tokens: this.lexer.inline(r)
      };
    }
  }
  hr(t) {
    const a = this.rules.block.hr.exec(t);
    if (a)
      return {
        type: "hr",
        raw: Kr(a[0], `
`)
      };
  }
  blockquote(t) {
    const a = this.rules.block.blockquote.exec(t);
    if (a) {
      let r = Kr(a[0], `
`).split(`
`), i = "", n = "";
      const s = [];
      for (; r.length > 0; ) {
        let o = !1;
        const l = [];
        let u;
        for (u = 0; u < r.length; u++)
          if (this.rules.other.blockquoteStart.test(r[u]))
            l.push(r[u]), o = !0;
          else if (!o)
            l.push(r[u]);
          else
            break;
        r = r.slice(u);
        const c = l.join(`
`), d = c.replace(this.rules.other.blockquoteSetextReplace, `
    $1`).replace(this.rules.other.blockquoteSetextReplace2, "");
        i = i ? `${i}
${c}` : c, n = n ? `${n}
${d}` : d;
        const m = this.lexer.state.top;
        if (this.lexer.state.top = !0, this.lexer.blockTokens(d, s, !0), this.lexer.state.top = m, r.length === 0)
          break;
        const v = s.at(-1);
        if ((v == null ? void 0 : v.type) === "code")
          break;
        if ((v == null ? void 0 : v.type) === "blockquote") {
          const p = v, h = p.raw + `
` + r.join(`
`), y = this.blockquote(h);
          s[s.length - 1] = y, i = i.substring(0, i.length - p.raw.length) + y.raw, n = n.substring(0, n.length - p.text.length) + y.text;
          break;
        } else if ((v == null ? void 0 : v.type) === "list") {
          const p = v, h = p.raw + `
` + r.join(`
`), y = this.list(h);
          s[s.length - 1] = y, i = i.substring(0, i.length - v.raw.length) + y.raw, n = n.substring(0, n.length - p.raw.length) + y.raw, r = h.substring(s.at(-1).raw.length).split(`
`);
          continue;
        }
      }
      return {
        type: "blockquote",
        raw: i,
        tokens: s,
        text: n
      };
    }
  }
  list(t) {
    let a = this.rules.block.list.exec(t);
    if (a) {
      let r = a[1].trim();
      const i = r.length > 1, n = {
        type: "list",
        raw: "",
        ordered: i,
        start: i ? +r.slice(0, -1) : "",
        loose: !1,
        items: []
      };
      r = i ? `\\d{1,9}\\${r.slice(-1)}` : `\\${r}`, this.options.pedantic && (r = i ? r : "[*+-]");
      const s = this.rules.other.listItemRegex(r);
      let o = !1;
      for (; t; ) {
        let u = !1, c = "", d = "";
        if (!(a = s.exec(t)) || this.rules.block.hr.test(t))
          break;
        c = a[0], t = t.substring(c.length);
        let m = a[2].split(`
`, 1)[0].replace(this.rules.other.listReplaceTabs, (g) => " ".repeat(3 * g.length)), v = t.split(`
`, 1)[0], p = !m.trim(), h = 0;
        if (this.options.pedantic ? (h = 2, d = m.trimStart()) : p ? h = a[1].length + 1 : (h = a[2].search(this.rules.other.nonSpaceChar), h = h > 4 ? 1 : h, d = m.slice(h), h += a[1].length), p && this.rules.other.blankLine.test(v) && (c += v + `
`, t = t.substring(v.length + 1), u = !0), !u) {
          const g = this.rules.other.nextBulletRegex(h), P = this.rules.other.hrRegex(h), S = this.rules.other.fencesBeginRegex(h), _ = this.rules.other.headingBeginRegex(h), j = this.rules.other.htmlBeginRegex(h);
          for (; t; ) {
            const F = t.split(`
`, 1)[0];
            let R;
            if (v = F, this.options.pedantic ? (v = v.replace(this.rules.other.listReplaceNesting, "  "), R = v) : R = v.replace(this.rules.other.tabCharGlobal, "    "), S.test(v) || _.test(v) || j.test(v) || g.test(v) || P.test(v))
              break;
            if (R.search(this.rules.other.nonSpaceChar) >= h || !v.trim())
              d += `
` + R.slice(h);
            else {
              if (p || m.replace(this.rules.other.tabCharGlobal, "    ").search(this.rules.other.nonSpaceChar) >= 4 || S.test(m) || _.test(m) || P.test(m))
                break;
              d += `
` + v;
            }
            !p && !v.trim() && (p = !0), c += F + `
`, t = t.substring(F.length + 1), m = R.slice(h);
          }
        }
        n.loose || (o ? n.loose = !0 : this.rules.other.doubleBlankLine.test(c) && (o = !0));
        let y = null, f;
        this.options.gfm && (y = this.rules.other.listIsTask.exec(d), y && (f = y[0] !== "[ ] ", d = d.replace(this.rules.other.listReplaceTask, ""))), n.items.push({
          type: "list_item",
          raw: c,
          task: !!y,
          checked: f,
          loose: !1,
          text: d,
          tokens: []
        }), n.raw += c;
      }
      const l = n.items.at(-1);
      if (l)
        l.raw = l.raw.trimEnd(), l.text = l.text.trimEnd();
      else
        return;
      n.raw = n.raw.trimEnd();
      for (let u = 0; u < n.items.length; u++)
        if (this.lexer.state.top = !1, n.items[u].tokens = this.lexer.blockTokens(n.items[u].text, []), !n.loose) {
          const c = n.items[u].tokens.filter((m) => m.type === "space"), d = c.length > 0 && c.some((m) => this.rules.other.anyLine.test(m.raw));
          n.loose = d;
        }
      if (n.loose)
        for (let u = 0; u < n.items.length; u++)
          n.items[u].loose = !0;
      return n;
    }
  }
  html(t) {
    const a = this.rules.block.html.exec(t);
    if (a)
      return {
        type: "html",
        block: !0,
        raw: a[0],
        pre: a[1] === "pre" || a[1] === "script" || a[1] === "style",
        text: a[0]
      };
  }
  def(t) {
    const a = this.rules.block.def.exec(t);
    if (a) {
      const r = a[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, " "), i = a[2] ? a[2].replace(this.rules.other.hrefBrackets, "$1").replace(this.rules.inline.anyPunctuation, "$1") : "", n = a[3] ? a[3].substring(1, a[3].length - 1).replace(this.rules.inline.anyPunctuation, "$1") : a[3];
      return {
        type: "def",
        tag: r,
        raw: a[0],
        href: i,
        title: n
      };
    }
  }
  table(t) {
    var o;
    const a = this.rules.block.table.exec(t);
    if (!a || !this.rules.other.tableDelimiter.test(a[2]))
      return;
    const r = Fd(a[1]), i = a[2].replace(this.rules.other.tableAlignChars, "").split("|"), n = (o = a[3]) != null && o.trim() ? a[3].replace(this.rules.other.tableRowBlankLine, "").split(`
`) : [], s = {
      type: "table",
      raw: a[0],
      header: [],
      align: [],
      rows: []
    };
    if (r.length === i.length) {
      for (const l of i)
        this.rules.other.tableAlignRight.test(l) ? s.align.push("right") : this.rules.other.tableAlignCenter.test(l) ? s.align.push("center") : this.rules.other.tableAlignLeft.test(l) ? s.align.push("left") : s.align.push(null);
      for (let l = 0; l < r.length; l++)
        s.header.push({
          text: r[l],
          tokens: this.lexer.inline(r[l]),
          header: !0,
          align: s.align[l]
        });
      for (const l of n)
        s.rows.push(Fd(l, s.header.length).map((u, c) => ({
          text: u,
          tokens: this.lexer.inline(u),
          header: !1,
          align: s.align[c]
        })));
      return s;
    }
  }
  lheading(t) {
    const a = this.rules.block.lheading.exec(t);
    if (a)
      return {
        type: "heading",
        raw: a[0],
        depth: a[2].charAt(0) === "=" ? 1 : 2,
        text: a[1],
        tokens: this.lexer.inline(a[1])
      };
  }
  paragraph(t) {
    const a = this.rules.block.paragraph.exec(t);
    if (a) {
      const r = a[1].charAt(a[1].length - 1) === `
` ? a[1].slice(0, -1) : a[1];
      return {
        type: "paragraph",
        raw: a[0],
        text: r,
        tokens: this.lexer.inline(r)
      };
    }
  }
  text(t) {
    const a = this.rules.block.text.exec(t);
    if (a)
      return {
        type: "text",
        raw: a[0],
        text: a[0],
        tokens: this.lexer.inline(a[0])
      };
  }
  escape(t) {
    const a = this.rules.inline.escape.exec(t);
    if (a)
      return {
        type: "escape",
        raw: a[0],
        text: a[1]
      };
  }
  tag(t) {
    const a = this.rules.inline.tag.exec(t);
    if (a)
      return !this.lexer.state.inLink && this.rules.other.startATag.test(a[0]) ? this.lexer.state.inLink = !0 : this.lexer.state.inLink && this.rules.other.endATag.test(a[0]) && (this.lexer.state.inLink = !1), !this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(a[0]) ? this.lexer.state.inRawBlock = !0 : this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(a[0]) && (this.lexer.state.inRawBlock = !1), {
        type: "html",
        raw: a[0],
        inLink: this.lexer.state.inLink,
        inRawBlock: this.lexer.state.inRawBlock,
        block: !1,
        text: a[0]
      };
  }
  link(t) {
    const a = this.rules.inline.link.exec(t);
    if (a) {
      const r = a[2].trim();
      if (!this.options.pedantic && this.rules.other.startAngleBracket.test(r)) {
        if (!this.rules.other.endAngleBracket.test(r))
          return;
        const s = Kr(r.slice(0, -1), "\\");
        if ((r.length - s.length) % 2 === 0)
          return;
      } else {
        const s = NS(a[2], "()");
        if (s > -1) {
          const l = (a[0].indexOf("!") === 0 ? 5 : 4) + a[1].length + s;
          a[2] = a[2].substring(0, s), a[0] = a[0].substring(0, l).trim(), a[3] = "";
        }
      }
      let i = a[2], n = "";
      if (this.options.pedantic) {
        const s = this.rules.other.pedanticHrefTitle.exec(i);
        s && (i = s[1], n = s[3]);
      } else
        n = a[3] ? a[3].slice(1, -1) : "";
      return i = i.trim(), this.rules.other.startAngleBracket.test(i) && (this.options.pedantic && !this.rules.other.endAngleBracket.test(r) ? i = i.slice(1) : i = i.slice(1, -1)), qd(a, {
        href: i && i.replace(this.rules.inline.anyPunctuation, "$1"),
        title: n && n.replace(this.rules.inline.anyPunctuation, "$1")
      }, a[0], this.lexer, this.rules);
    }
  }
  reflink(t, a) {
    let r;
    if ((r = this.rules.inline.reflink.exec(t)) || (r = this.rules.inline.nolink.exec(t))) {
      const i = (r[2] || r[1]).replace(this.rules.other.multipleSpaceGlobal, " "), n = a[i.toLowerCase()];
      if (!n) {
        const s = r[0].charAt(0);
        return {
          type: "text",
          raw: s,
          text: s
        };
      }
      return qd(r, n, r[0], this.lexer, this.rules);
    }
  }
  emStrong(t, a, r = "") {
    let i = this.rules.inline.emStrongLDelim.exec(t);
    if (!i || i[3] && r.match(this.rules.other.unicodeAlphaNumeric))
      return;
    if (!(i[1] || i[2] || "") || !r || this.rules.inline.punctuation.exec(r)) {
      const s = [...i[0]].length - 1;
      let o, l, u = s, c = 0;
      const d = i[0][0] === "*" ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;
      for (d.lastIndex = 0, a = a.slice(-1 * t.length + s); (i = d.exec(a)) != null; ) {
        if (o = i[1] || i[2] || i[3] || i[4] || i[5] || i[6], !o)
          continue;
        if (l = [...o].length, i[3] || i[4]) {
          u += l;
          continue;
        } else if ((i[5] || i[6]) && s % 3 && !((s + l) % 3)) {
          c += l;
          continue;
        }
        if (u -= l, u > 0)
          continue;
        l = Math.min(l, l + u + c);
        const m = [...i[0]][0].length, v = t.slice(0, s + i.index + m + l);
        if (Math.min(s, l) % 2) {
          const h = v.slice(1, -1);
          return {
            type: "em",
            raw: v,
            text: h,
            tokens: this.lexer.inlineTokens(h)
          };
        }
        const p = v.slice(2, -2);
        return {
          type: "strong",
          raw: v,
          text: p,
          tokens: this.lexer.inlineTokens(p)
        };
      }
    }
  }
  codespan(t) {
    const a = this.rules.inline.code.exec(t);
    if (a) {
      let r = a[2].replace(this.rules.other.newLineCharGlobal, " ");
      const i = this.rules.other.nonSpaceChar.test(r), n = this.rules.other.startingSpaceChar.test(r) && this.rules.other.endingSpaceChar.test(r);
      return i && n && (r = r.substring(1, r.length - 1)), {
        type: "codespan",
        raw: a[0],
        text: r
      };
    }
  }
  br(t) {
    const a = this.rules.inline.br.exec(t);
    if (a)
      return {
        type: "br",
        raw: a[0]
      };
  }
  del(t) {
    const a = this.rules.inline.del.exec(t);
    if (a)
      return {
        type: "del",
        raw: a[0],
        text: a[2],
        tokens: this.lexer.inlineTokens(a[2])
      };
  }
  autolink(t) {
    const a = this.rules.inline.autolink.exec(t);
    if (a) {
      let r, i;
      return a[2] === "@" ? (r = a[1], i = "mailto:" + r) : (r = a[1], i = r), {
        type: "link",
        raw: a[0],
        text: r,
        href: i,
        tokens: [
          {
            type: "text",
            raw: r,
            text: r
          }
        ]
      };
    }
  }
  url(t) {
    var r;
    let a;
    if (a = this.rules.inline.url.exec(t)) {
      let i, n;
      if (a[2] === "@")
        i = a[0], n = "mailto:" + i;
      else {
        let s;
        do
          s = a[0], a[0] = ((r = this.rules.inline._backpedal.exec(a[0])) == null ? void 0 : r[0]) ?? "";
        while (s !== a[0]);
        i = a[0], a[1] === "www." ? n = "http://" + a[0] : n = a[0];
      }
      return {
        type: "link",
        raw: a[0],
        text: i,
        href: n,
        tokens: [
          {
            type: "text",
            raw: i,
            text: i
          }
        ]
      };
    }
  }
  inlineText(t) {
    const a = this.rules.inline.text.exec(t);
    if (a) {
      const r = this.lexer.state.inRawBlock;
      return {
        type: "text",
        raw: a[0],
        text: a[0],
        escaped: r
      };
    }
  }
}
class fa {
  constructor(t) {
    Ee(this, "tokens");
    Ee(this, "options");
    Ee(this, "state");
    Ee(this, "tokenizer");
    Ee(this, "inlineQueue");
    this.tokens = [], this.tokens.links = /* @__PURE__ */ Object.create(null), this.options = t || Un, this.options.tokenizer = this.options.tokenizer || new ms(), this.tokenizer = this.options.tokenizer, this.tokenizer.options = this.options, this.tokenizer.lexer = this, this.inlineQueue = [], this.state = {
      inLink: !1,
      inRawBlock: !1,
      top: !0
    };
    const a = {
      other: zt,
      block: qi.normal,
      inline: qr.normal
    };
    this.options.pedantic ? (a.block = qi.pedantic, a.inline = qr.pedantic) : this.options.gfm && (a.block = qi.gfm, this.options.breaks ? a.inline = qr.breaks : a.inline = qr.gfm), this.tokenizer.rules = a;
  }
  /**
   * Expose Rules
   */
  static get rules() {
    return {
      block: qi,
      inline: qr
    };
  }
  /**
   * Static Lex Method
   */
  static lex(t, a) {
    return new fa(a).lex(t);
  }
  /**
   * Static Lex Inline Method
   */
  static lexInline(t, a) {
    return new fa(a).inlineTokens(t);
  }
  /**
   * Preprocessing
   */
  lex(t) {
    t = t.replace(zt.carriageReturn, `
`), this.blockTokens(t, this.tokens);
    for (let a = 0; a < this.inlineQueue.length; a++) {
      const r = this.inlineQueue[a];
      this.inlineTokens(r.src, r.tokens);
    }
    return this.inlineQueue = [], this.tokens;
  }
  blockTokens(t, a = [], r = !1) {
    var i, n, s;
    for (this.options.pedantic && (t = t.replace(zt.tabCharGlobal, "    ").replace(zt.spaceLine, "")); t; ) {
      let o;
      if ((n = (i = this.options.extensions) == null ? void 0 : i.block) != null && n.some((u) => (o = u.call({ lexer: this }, t, a)) ? (t = t.substring(o.raw.length), a.push(o), !0) : !1))
        continue;
      if (o = this.tokenizer.space(t)) {
        t = t.substring(o.raw.length);
        const u = a.at(-1);
        o.raw.length === 1 && u !== void 0 ? u.raw += `
` : a.push(o);
        continue;
      }
      if (o = this.tokenizer.code(t)) {
        t = t.substring(o.raw.length);
        const u = a.at(-1);
        (u == null ? void 0 : u.type) === "paragraph" || (u == null ? void 0 : u.type) === "text" ? (u.raw += `
` + o.raw, u.text += `
` + o.text, this.inlineQueue.at(-1).src = u.text) : a.push(o);
        continue;
      }
      if (o = this.tokenizer.fences(t)) {
        t = t.substring(o.raw.length), a.push(o);
        continue;
      }
      if (o = this.tokenizer.heading(t)) {
        t = t.substring(o.raw.length), a.push(o);
        continue;
      }
      if (o = this.tokenizer.hr(t)) {
        t = t.substring(o.raw.length), a.push(o);
        continue;
      }
      if (o = this.tokenizer.blockquote(t)) {
        t = t.substring(o.raw.length), a.push(o);
        continue;
      }
      if (o = this.tokenizer.list(t)) {
        t = t.substring(o.raw.length), a.push(o);
        continue;
      }
      if (o = this.tokenizer.html(t)) {
        t = t.substring(o.raw.length), a.push(o);
        continue;
      }
      if (o = this.tokenizer.def(t)) {
        t = t.substring(o.raw.length);
        const u = a.at(-1);
        (u == null ? void 0 : u.type) === "paragraph" || (u == null ? void 0 : u.type) === "text" ? (u.raw += `
` + o.raw, u.text += `
` + o.raw, this.inlineQueue.at(-1).src = u.text) : this.tokens.links[o.tag] || (this.tokens.links[o.tag] = {
          href: o.href,
          title: o.title
        });
        continue;
      }
      if (o = this.tokenizer.table(t)) {
        t = t.substring(o.raw.length), a.push(o);
        continue;
      }
      if (o = this.tokenizer.lheading(t)) {
        t = t.substring(o.raw.length), a.push(o);
        continue;
      }
      let l = t;
      if ((s = this.options.extensions) != null && s.startBlock) {
        let u = 1 / 0;
        const c = t.slice(1);
        let d;
        this.options.extensions.startBlock.forEach((m) => {
          d = m.call({ lexer: this }, c), typeof d == "number" && d >= 0 && (u = Math.min(u, d));
        }), u < 1 / 0 && u >= 0 && (l = t.substring(0, u + 1));
      }
      if (this.state.top && (o = this.tokenizer.paragraph(l))) {
        const u = a.at(-1);
        r && (u == null ? void 0 : u.type) === "paragraph" ? (u.raw += `
` + o.raw, u.text += `
` + o.text, this.inlineQueue.pop(), this.inlineQueue.at(-1).src = u.text) : a.push(o), r = l.length !== t.length, t = t.substring(o.raw.length);
        continue;
      }
      if (o = this.tokenizer.text(t)) {
        t = t.substring(o.raw.length);
        const u = a.at(-1);
        (u == null ? void 0 : u.type) === "text" ? (u.raw += `
` + o.raw, u.text += `
` + o.text, this.inlineQueue.pop(), this.inlineQueue.at(-1).src = u.text) : a.push(o);
        continue;
      }
      if (t) {
        const u = "Infinite loop on byte: " + t.charCodeAt(0);
        if (this.options.silent) {
          console.error(u);
          break;
        } else
          throw new Error(u);
      }
    }
    return this.state.top = !0, a;
  }
  inline(t, a = []) {
    return this.inlineQueue.push({ src: t, tokens: a }), a;
  }
  /**
   * Lexing/Compiling
   */
  inlineTokens(t, a = []) {
    var o, l, u;
    let r = t, i = null;
    if (this.tokens.links) {
      const c = Object.keys(this.tokens.links);
      if (c.length > 0)
        for (; (i = this.tokenizer.rules.inline.reflinkSearch.exec(r)) != null; )
          c.includes(i[0].slice(i[0].lastIndexOf("[") + 1, -1)) && (r = r.slice(0, i.index) + "[" + "a".repeat(i[0].length - 2) + "]" + r.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex));
    }
    for (; (i = this.tokenizer.rules.inline.blockSkip.exec(r)) != null; )
      r = r.slice(0, i.index) + "[" + "a".repeat(i[0].length - 2) + "]" + r.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
    for (; (i = this.tokenizer.rules.inline.anyPunctuation.exec(r)) != null; )
      r = r.slice(0, i.index) + "++" + r.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);
    let n = !1, s = "";
    for (; t; ) {
      n || (s = ""), n = !1;
      let c;
      if ((l = (o = this.options.extensions) == null ? void 0 : o.inline) != null && l.some((m) => (c = m.call({ lexer: this }, t, a)) ? (t = t.substring(c.raw.length), a.push(c), !0) : !1))
        continue;
      if (c = this.tokenizer.escape(t)) {
        t = t.substring(c.raw.length), a.push(c);
        continue;
      }
      if (c = this.tokenizer.tag(t)) {
        t = t.substring(c.raw.length), a.push(c);
        continue;
      }
      if (c = this.tokenizer.link(t)) {
        t = t.substring(c.raw.length), a.push(c);
        continue;
      }
      if (c = this.tokenizer.reflink(t, this.tokens.links)) {
        t = t.substring(c.raw.length);
        const m = a.at(-1);
        c.type === "text" && (m == null ? void 0 : m.type) === "text" ? (m.raw += c.raw, m.text += c.text) : a.push(c);
        continue;
      }
      if (c = this.tokenizer.emStrong(t, r, s)) {
        t = t.substring(c.raw.length), a.push(c);
        continue;
      }
      if (c = this.tokenizer.codespan(t)) {
        t = t.substring(c.raw.length), a.push(c);
        continue;
      }
      if (c = this.tokenizer.br(t)) {
        t = t.substring(c.raw.length), a.push(c);
        continue;
      }
      if (c = this.tokenizer.del(t)) {
        t = t.substring(c.raw.length), a.push(c);
        continue;
      }
      if (c = this.tokenizer.autolink(t)) {
        t = t.substring(c.raw.length), a.push(c);
        continue;
      }
      if (!this.state.inLink && (c = this.tokenizer.url(t))) {
        t = t.substring(c.raw.length), a.push(c);
        continue;
      }
      let d = t;
      if ((u = this.options.extensions) != null && u.startInline) {
        let m = 1 / 0;
        const v = t.slice(1);
        let p;
        this.options.extensions.startInline.forEach((h) => {
          p = h.call({ lexer: this }, v), typeof p == "number" && p >= 0 && (m = Math.min(m, p));
        }), m < 1 / 0 && m >= 0 && (d = t.substring(0, m + 1));
      }
      if (c = this.tokenizer.inlineText(d)) {
        t = t.substring(c.raw.length), c.raw.slice(-1) !== "_" && (s = c.raw.slice(-1)), n = !0;
        const m = a.at(-1);
        (m == null ? void 0 : m.type) === "text" ? (m.raw += c.raw, m.text += c.text) : a.push(c);
        continue;
      }
      if (t) {
        const m = "Infinite loop on byte: " + t.charCodeAt(0);
        if (this.options.silent) {
          console.error(m);
          break;
        } else
          throw new Error(m);
      }
    }
    return a;
  }
}
class vs {
  // set by the parser
  constructor(t) {
    Ee(this, "options");
    Ee(this, "parser");
    this.options = t || Un;
  }
  space(t) {
    return "";
  }
  code({ text: t, lang: a, escaped: r }) {
    var s;
    const i = (s = (a || "").match(zt.notSpaceStart)) == null ? void 0 : s[0], n = t.replace(zt.endingNewline, "") + `
`;
    return i ? '<pre><code class="language-' + Na(i) + '">' + (r ? n : Na(n, !0)) + `</code></pre>
` : "<pre><code>" + (r ? n : Na(n, !0)) + `</code></pre>
`;
  }
  blockquote({ tokens: t }) {
    return `<blockquote>
${this.parser.parse(t)}</blockquote>
`;
  }
  html({ text: t }) {
    return t;
  }
  heading({ tokens: t, depth: a }) {
    return `<h${a}>${this.parser.parseInline(t)}</h${a}>
`;
  }
  hr(t) {
    return `<hr>
`;
  }
  list(t) {
    const a = t.ordered, r = t.start;
    let i = "";
    for (let o = 0; o < t.items.length; o++) {
      const l = t.items[o];
      i += this.listitem(l);
    }
    const n = a ? "ol" : "ul", s = a && r !== 1 ? ' start="' + r + '"' : "";
    return "<" + n + s + `>
` + i + "</" + n + `>
`;
  }
  listitem(t) {
    var r;
    let a = "";
    if (t.task) {
      const i = this.checkbox({ checked: !!t.checked });
      t.loose ? ((r = t.tokens[0]) == null ? void 0 : r.type) === "paragraph" ? (t.tokens[0].text = i + " " + t.tokens[0].text, t.tokens[0].tokens && t.tokens[0].tokens.length > 0 && t.tokens[0].tokens[0].type === "text" && (t.tokens[0].tokens[0].text = i + " " + Na(t.tokens[0].tokens[0].text), t.tokens[0].tokens[0].escaped = !0)) : t.tokens.unshift({
        type: "text",
        raw: i + " ",
        text: i + " ",
        escaped: !0
      }) : a += i + " ";
    }
    return a += this.parser.parse(t.tokens, !!t.loose), `<li>${a}</li>
`;
  }
  checkbox({ checked: t }) {
    return "<input " + (t ? 'checked="" ' : "") + 'disabled="" type="checkbox">';
  }
  paragraph({ tokens: t }) {
    return `<p>${this.parser.parseInline(t)}</p>
`;
  }
  table(t) {
    let a = "", r = "";
    for (let n = 0; n < t.header.length; n++)
      r += this.tablecell(t.header[n]);
    a += this.tablerow({ text: r });
    let i = "";
    for (let n = 0; n < t.rows.length; n++) {
      const s = t.rows[n];
      r = "";
      for (let o = 0; o < s.length; o++)
        r += this.tablecell(s[o]);
      i += this.tablerow({ text: r });
    }
    return i && (i = `<tbody>${i}</tbody>`), `<table>
<thead>
` + a + `</thead>
` + i + `</table>
`;
  }
  tablerow({ text: t }) {
    return `<tr>
${t}</tr>
`;
  }
  tablecell(t) {
    const a = this.parser.parseInline(t.tokens), r = t.header ? "th" : "td";
    return (t.align ? `<${r} align="${t.align}">` : `<${r}>`) + a + `</${r}>
`;
  }
  /**
   * span level renderer
   */
  strong({ tokens: t }) {
    return `<strong>${this.parser.parseInline(t)}</strong>`;
  }
  em({ tokens: t }) {
    return `<em>${this.parser.parseInline(t)}</em>`;
  }
  codespan({ text: t }) {
    return `<code>${Na(t, !0)}</code>`;
  }
  br(t) {
    return "<br>";
  }
  del({ tokens: t }) {
    return `<del>${this.parser.parseInline(t)}</del>`;
  }
  link({ href: t, title: a, tokens: r }) {
    const i = this.parser.parseInline(r), n = Bd(t);
    if (n === null)
      return i;
    t = n;
    let s = '<a href="' + t + '"';
    return a && (s += ' title="' + Na(a) + '"'), s += ">" + i + "</a>", s;
  }
  image({ href: t, title: a, text: r }) {
    const i = Bd(t);
    if (i === null)
      return Na(r);
    t = i;
    let n = `<img src="${t}" alt="${r}"`;
    return a && (n += ` title="${Na(a)}"`), n += ">", n;
  }
  text(t) {
    return "tokens" in t && t.tokens ? this.parser.parseInline(t.tokens) : "escaped" in t && t.escaped ? t.text : Na(t.text);
  }
}
class ec {
  // no need for block level renderers
  strong({ text: t }) {
    return t;
  }
  em({ text: t }) {
    return t;
  }
  codespan({ text: t }) {
    return t;
  }
  del({ text: t }) {
    return t;
  }
  html({ text: t }) {
    return t;
  }
  text({ text: t }) {
    return t;
  }
  link({ text: t }) {
    return "" + t;
  }
  image({ text: t }) {
    return "" + t;
  }
  br() {
    return "";
  }
}
class ma {
  constructor(t) {
    Ee(this, "options");
    Ee(this, "renderer");
    Ee(this, "textRenderer");
    this.options = t || Un, this.options.renderer = this.options.renderer || new vs(), this.renderer = this.options.renderer, this.renderer.options = this.options, this.renderer.parser = this, this.textRenderer = new ec();
  }
  /**
   * Static Parse Method
   */
  static parse(t, a) {
    return new ma(a).parse(t);
  }
  /**
   * Static Parse Inline Method
   */
  static parseInline(t, a) {
    return new ma(a).parseInline(t);
  }
  /**
   * Parse Loop
   */
  parse(t, a = !0) {
    var i, n;
    let r = "";
    for (let s = 0; s < t.length; s++) {
      const o = t[s];
      if ((n = (i = this.options.extensions) == null ? void 0 : i.renderers) != null && n[o.type]) {
        const u = o, c = this.options.extensions.renderers[u.type].call({ parser: this }, u);
        if (c !== !1 || !["space", "hr", "heading", "code", "table", "blockquote", "list", "html", "paragraph", "text"].includes(u.type)) {
          r += c || "";
          continue;
        }
      }
      const l = o;
      switch (l.type) {
        case "space": {
          r += this.renderer.space(l);
          continue;
        }
        case "hr": {
          r += this.renderer.hr(l);
          continue;
        }
        case "heading": {
          r += this.renderer.heading(l);
          continue;
        }
        case "code": {
          r += this.renderer.code(l);
          continue;
        }
        case "table": {
          r += this.renderer.table(l);
          continue;
        }
        case "blockquote": {
          r += this.renderer.blockquote(l);
          continue;
        }
        case "list": {
          r += this.renderer.list(l);
          continue;
        }
        case "html": {
          r += this.renderer.html(l);
          continue;
        }
        case "paragraph": {
          r += this.renderer.paragraph(l);
          continue;
        }
        case "text": {
          let u = l, c = this.renderer.text(u);
          for (; s + 1 < t.length && t[s + 1].type === "text"; )
            u = t[++s], c += `
` + this.renderer.text(u);
          a ? r += this.renderer.paragraph({
            type: "paragraph",
            raw: c,
            text: c,
            tokens: [{ type: "text", raw: c, text: c, escaped: !0 }]
          }) : r += c;
          continue;
        }
        default: {
          const u = 'Token with "' + l.type + '" type was not found.';
          if (this.options.silent)
            return console.error(u), "";
          throw new Error(u);
        }
      }
    }
    return r;
  }
  /**
   * Parse Inline Tokens
   */
  parseInline(t, a = this.renderer) {
    var i, n;
    let r = "";
    for (let s = 0; s < t.length; s++) {
      const o = t[s];
      if ((n = (i = this.options.extensions) == null ? void 0 : i.renderers) != null && n[o.type]) {
        const u = this.options.extensions.renderers[o.type].call({ parser: this }, o);
        if (u !== !1 || !["escape", "html", "link", "image", "strong", "em", "codespan", "br", "del", "text"].includes(o.type)) {
          r += u || "";
          continue;
        }
      }
      const l = o;
      switch (l.type) {
        case "escape": {
          r += a.text(l);
          break;
        }
        case "html": {
          r += a.html(l);
          break;
        }
        case "link": {
          r += a.link(l);
          break;
        }
        case "image": {
          r += a.image(l);
          break;
        }
        case "strong": {
          r += a.strong(l);
          break;
        }
        case "em": {
          r += a.em(l);
          break;
        }
        case "codespan": {
          r += a.codespan(l);
          break;
        }
        case "br": {
          r += a.br(l);
          break;
        }
        case "del": {
          r += a.del(l);
          break;
        }
        case "text": {
          r += a.text(l);
          break;
        }
        default: {
          const u = 'Token with "' + l.type + '" type was not found.';
          if (this.options.silent)
            return console.error(u), "";
          throw new Error(u);
        }
      }
    }
    return r;
  }
}
class ri {
  constructor(t) {
    Ee(this, "options");
    Ee(this, "block");
    this.options = t || Un;
  }
  /**
   * Process markdown before marked
   */
  preprocess(t) {
    return t;
  }
  /**
   * Process HTML after marked is finished
   */
  postprocess(t) {
    return t;
  }
  /**
   * Process all tokens before walk tokens
   */
  processAllTokens(t) {
    return t;
  }
  /**
   * Provide function to tokenize markdown
   */
  provideLexer() {
    return this.block ? fa.lex : fa.lexInline;
  }
  /**
   * Provide function to parse tokens
   */
  provideParser() {
    return this.block ? ma.parse : ma.parseInline;
  }
}
Ee(ri, "passThroughHooks", /* @__PURE__ */ new Set([
  "preprocess",
  "postprocess",
  "processAllTokens"
]));
class LS {
  constructor(...t) {
    Ee(this, "defaults", Uu());
    Ee(this, "options", this.setOptions);
    Ee(this, "parse", this.parseMarkdown(!0));
    Ee(this, "parseInline", this.parseMarkdown(!1));
    Ee(this, "Parser", ma);
    Ee(this, "Renderer", vs);
    Ee(this, "TextRenderer", ec);
    Ee(this, "Lexer", fa);
    Ee(this, "Tokenizer", ms);
    Ee(this, "Hooks", ri);
    this.use(...t);
  }
  /**
   * Run callback for every token
   */
  walkTokens(t, a) {
    var i, n;
    let r = [];
    for (const s of t)
      switch (r = r.concat(a.call(this, s)), s.type) {
        case "table": {
          const o = s;
          for (const l of o.header)
            r = r.concat(this.walkTokens(l.tokens, a));
          for (const l of o.rows)
            for (const u of l)
              r = r.concat(this.walkTokens(u.tokens, a));
          break;
        }
        case "list": {
          const o = s;
          r = r.concat(this.walkTokens(o.items, a));
          break;
        }
        default: {
          const o = s;
          (n = (i = this.defaults.extensions) == null ? void 0 : i.childTokens) != null && n[o.type] ? this.defaults.extensions.childTokens[o.type].forEach((l) => {
            const u = o[l].flat(1 / 0);
            r = r.concat(this.walkTokens(u, a));
          }) : o.tokens && (r = r.concat(this.walkTokens(o.tokens, a)));
        }
      }
    return r;
  }
  use(...t) {
    const a = this.defaults.extensions || { renderers: {}, childTokens: {} };
    return t.forEach((r) => {
      const i = { ...r };
      if (i.async = this.defaults.async || i.async || !1, r.extensions && (r.extensions.forEach((n) => {
        if (!n.name)
          throw new Error("extension name required");
        if ("renderer" in n) {
          const s = a.renderers[n.name];
          s ? a.renderers[n.name] = function(...o) {
            let l = n.renderer.apply(this, o);
            return l === !1 && (l = s.apply(this, o)), l;
          } : a.renderers[n.name] = n.renderer;
        }
        if ("tokenizer" in n) {
          if (!n.level || n.level !== "block" && n.level !== "inline")
            throw new Error("extension level must be 'block' or 'inline'");
          const s = a[n.level];
          s ? s.unshift(n.tokenizer) : a[n.level] = [n.tokenizer], n.start && (n.level === "block" ? a.startBlock ? a.startBlock.push(n.start) : a.startBlock = [n.start] : n.level === "inline" && (a.startInline ? a.startInline.push(n.start) : a.startInline = [n.start]));
        }
        "childTokens" in n && n.childTokens && (a.childTokens[n.name] = n.childTokens);
      }), i.extensions = a), r.renderer) {
        const n = this.defaults.renderer || new vs(this.defaults);
        for (const s in r.renderer) {
          if (!(s in n))
            throw new Error(`renderer '${s}' does not exist`);
          if (["options", "parser"].includes(s))
            continue;
          const o = s, l = r.renderer[o], u = n[o];
          n[o] = (...c) => {
            let d = l.apply(n, c);
            return d === !1 && (d = u.apply(n, c)), d || "";
          };
        }
        i.renderer = n;
      }
      if (r.tokenizer) {
        const n = this.defaults.tokenizer || new ms(this.defaults);
        for (const s in r.tokenizer) {
          if (!(s in n))
            throw new Error(`tokenizer '${s}' does not exist`);
          if (["options", "rules", "lexer"].includes(s))
            continue;
          const o = s, l = r.tokenizer[o], u = n[o];
          n[o] = (...c) => {
            let d = l.apply(n, c);
            return d === !1 && (d = u.apply(n, c)), d;
          };
        }
        i.tokenizer = n;
      }
      if (r.hooks) {
        const n = this.defaults.hooks || new ri();
        for (const s in r.hooks) {
          if (!(s in n))
            throw new Error(`hook '${s}' does not exist`);
          if (["options", "block"].includes(s))
            continue;
          const o = s, l = r.hooks[o], u = n[o];
          ri.passThroughHooks.has(s) ? n[o] = (c) => {
            if (this.defaults.async)
              return Promise.resolve(l.call(n, c)).then((m) => u.call(n, m));
            const d = l.call(n, c);
            return u.call(n, d);
          } : n[o] = (...c) => {
            let d = l.apply(n, c);
            return d === !1 && (d = u.apply(n, c)), d;
          };
        }
        i.hooks = n;
      }
      if (r.walkTokens) {
        const n = this.defaults.walkTokens, s = r.walkTokens;
        i.walkTokens = function(o) {
          let l = [];
          return l.push(s.call(this, o)), n && (l = l.concat(n.call(this, o))), l;
        };
      }
      this.defaults = { ...this.defaults, ...i };
    }), this;
  }
  setOptions(t) {
    return this.defaults = { ...this.defaults, ...t }, this;
  }
  lexer(t, a) {
    return fa.lex(t, a ?? this.defaults);
  }
  parser(t, a) {
    return ma.parse(t, a ?? this.defaults);
  }
  parseMarkdown(t) {
    return (r, i) => {
      const n = { ...i }, s = { ...this.defaults, ...n }, o = this.onError(!!s.silent, !!s.async);
      if (this.defaults.async === !0 && n.async === !1)
        return o(new Error("marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise."));
      if (typeof r > "u" || r === null)
        return o(new Error("marked(): input parameter is undefined or null"));
      if (typeof r != "string")
        return o(new Error("marked(): input parameter is of type " + Object.prototype.toString.call(r) + ", string expected"));
      s.hooks && (s.hooks.options = s, s.hooks.block = t);
      const l = s.hooks ? s.hooks.provideLexer() : t ? fa.lex : fa.lexInline, u = s.hooks ? s.hooks.provideParser() : t ? ma.parse : ma.parseInline;
      if (s.async)
        return Promise.resolve(s.hooks ? s.hooks.preprocess(r) : r).then((c) => l(c, s)).then((c) => s.hooks ? s.hooks.processAllTokens(c) : c).then((c) => s.walkTokens ? Promise.all(this.walkTokens(c, s.walkTokens)).then(() => c) : c).then((c) => u(c, s)).then((c) => s.hooks ? s.hooks.postprocess(c) : c).catch(o);
      try {
        s.hooks && (r = s.hooks.preprocess(r));
        let c = l(r, s);
        s.hooks && (c = s.hooks.processAllTokens(c)), s.walkTokens && this.walkTokens(c, s.walkTokens);
        let d = u(c, s);
        return s.hooks && (d = s.hooks.postprocess(d)), d;
      } catch (c) {
        return o(c);
      }
    };
  }
  onError(t, a) {
    return (r) => {
      if (r.message += `
Please report this to https://github.com/markedjs/marked.`, t) {
        const i = "<p>An error occurred:</p><pre>" + Na(r.message + "", !0) + "</pre>";
        return a ? Promise.resolve(i) : i;
      }
      if (a)
        return Promise.reject(r);
      throw r;
    };
  }
}
const Rn = new LS();
function Ge(e, t) {
  return Rn.parse(e, t);
}
Ge.options = Ge.setOptions = function(e) {
  return Rn.setOptions(e), Ge.defaults = Rn.defaults, kv(Ge.defaults), Ge;
};
Ge.getDefaults = Uu;
Ge.defaults = Un;
Ge.use = function(...e) {
  return Rn.use(...e), Ge.defaults = Rn.defaults, kv(Ge.defaults), Ge;
};
Ge.walkTokens = function(e, t) {
  return Rn.walkTokens(e, t);
};
Ge.parseInline = Rn.parseInline;
Ge.Parser = ma;
Ge.parser = ma.parse;
Ge.Renderer = vs;
Ge.TextRenderer = ec;
Ge.Lexer = fa;
Ge.lexer = fa.lex;
Ge.Tokenizer = ms;
Ge.Hooks = ri;
Ge.parse = Ge;
Ge.options;
Ge.setOptions;
Ge.use;
Ge.walkTokens;
Ge.parseInline;
ma.parse;
fa.lex;
var $i = {}, Ev = Symbol.for("immer-nothing"), Kd = Symbol.for("immer-draftable"), ia = Symbol.for("immer-state"), BS = $i.NODE_ENV !== "production" ? [
  // All error codes, starting by 0:
  function(e) {
    return `The plugin for '${e}' has not been loaded into Immer. To enable the plugin, import and call \`enable${e}()\` when initializing your application.`;
  },
  function(e) {
    return `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${e}'`;
  },
  "This object has been frozen and should not be mutated",
  function(e) {
    return "Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? " + e;
  },
  "An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.",
  "Immer forbids circular references",
  "The first or second argument to `produce` must be a function",
  "The third argument to `produce` must be a function or undefined",
  "First argument to `createDraft` must be a plain object, an array, or an immerable object",
  "First argument to `finishDraft` must be a draft returned by `createDraft`",
  function(e) {
    return `'current' expects a draft, got: ${e}`;
  },
  "Object.defineProperty() cannot be used on an Immer draft",
  "Object.setPrototypeOf() cannot be used on an Immer draft",
  "Immer only supports deleting array indices",
  "Immer only supports setting array indices and the 'length' property",
  function(e) {
    return `'original' expects a draft, got: ${e}`;
  }
  // Note: if more errors are added, the errorOffset in Patches.ts should be increased
  // See Patches.ts for additional errors
] : [];
function Xt(e, ...t) {
  if ($i.NODE_ENV !== "production") {
    const a = BS[e], r = typeof a == "function" ? a.apply(null, t) : a;
    throw new Error(`[Immer] ${r}`);
  }
  throw new Error(
    `[Immer] minified error nr: ${e}. Full error at: https://bit.ly/3cXEKWf`
  );
}
var hr = Object.getPrototypeOf;
function yr(e) {
  return !!e && !!e[ia];
}
function Nn(e) {
  var t;
  return e ? Av(e) || Array.isArray(e) || !!e[Kd] || !!((t = e.constructor) != null && t[Kd]) || Ks(e) || Hs(e) : !1;
}
var FS = Object.prototype.constructor.toString();
function Av(e) {
  if (!e || typeof e != "object")
    return !1;
  const t = hr(e);
  if (t === null)
    return !0;
  const a = Object.hasOwnProperty.call(t, "constructor") && t.constructor;
  return a === Object ? !0 : typeof a == "function" && Function.toString.call(a) === FS;
}
function li(e, t) {
  qs(e) === 0 ? Object.entries(e).forEach(([a, r]) => {
    t(a, r, e);
  }) : e.forEach((a, r) => t(r, a, e));
}
function qs(e) {
  const t = e[ia];
  return t ? t.type_ : Array.isArray(e) ? 1 : Ks(e) ? 2 : Hs(e) ? 3 : 0;
}
function io(e, t) {
  return qs(e) === 2 ? e.has(t) : Object.prototype.hasOwnProperty.call(e, t);
}
function Tv(e, t, a) {
  const r = qs(e);
  r === 2 ? e.set(t, a) : r === 3 ? e.add(a) : e[t] = a;
}
function qS(e, t) {
  return e === t ? e !== 0 || 1 / e === 1 / t : e !== e && t !== t;
}
function Ks(e) {
  return e instanceof Map;
}
function Hs(e) {
  return e instanceof Set;
}
function Sn(e) {
  return e.copy_ || e.base_;
}
function so(e, t) {
  if (Ks(e))
    return new Map(e);
  if (Hs(e))
    return new Set(e);
  if (Array.isArray(e))
    return Array.prototype.slice.call(e);
  if (!t && Av(e))
    return hr(e) ? { ...e } : Object.assign(/* @__PURE__ */ Object.create(null), e);
  const a = Object.getOwnPropertyDescriptors(e);
  delete a[ia];
  let r = Reflect.ownKeys(a);
  for (let i = 0; i < r.length; i++) {
    const n = r[i], s = a[n];
    s.writable === !1 && (s.writable = !0, s.configurable = !0), (s.get || s.set) && (a[n] = {
      configurable: !0,
      writable: !0,
      // could live with !!desc.set as well here...
      enumerable: s.enumerable,
      value: e[n]
    });
  }
  return Object.create(hr(e), a);
}
function tc(e, t = !1) {
  return Us(e) || yr(e) || !Nn(e) || (qs(e) > 1 && (e.set = e.add = e.clear = e.delete = KS), Object.freeze(e), t && li(e, (a, r) => tc(r, !0))), e;
}
function KS() {
  Xt(2);
}
function Us(e) {
  return Object.isFrozen(e);
}
var HS = {};
function zn(e) {
  const t = HS[e];
  return t || Xt(0, e), t;
}
var oi;
function jv() {
  return oi;
}
function US(e, t) {
  return {
    drafts_: [],
    parent_: e,
    immer_: t,
    // Whenever the modified draft contains a draft from another scope, we
    // need to prevent auto-freezing so the unowned draft can be finalized.
    canAutoFreeze_: !0,
    unfinalizedDrafts_: 0
  };
}
function Hd(e, t) {
  t && (zn("Patches"), e.patches_ = [], e.inversePatches_ = [], e.patchListener_ = t);
}
function lo(e) {
  oo(e), e.drafts_.forEach(WS), e.drafts_ = null;
}
function oo(e) {
  e === oi && (oi = e.parent_);
}
function Ud(e) {
  return oi = US(oi, e);
}
function WS(e) {
  const t = e[ia];
  t.type_ === 0 || t.type_ === 1 ? t.revoke_() : t.revoked_ = !0;
}
function Wd(e, t) {
  t.unfinalizedDrafts_ = t.drafts_.length;
  const a = t.drafts_[0];
  return e !== void 0 && e !== a ? (a[ia].modified_ && (lo(t), Xt(4)), Nn(e) && (e = ps(t, e), t.parent_ || hs(t, e)), t.patches_ && zn("Patches").generateReplacementPatches_(
    a[ia].base_,
    e,
    t.patches_,
    t.inversePatches_
  )) : e = ps(t, a, []), lo(t), t.patches_ && t.patchListener_(t.patches_, t.inversePatches_), e !== Ev ? e : void 0;
}
function ps(e, t, a) {
  if (Us(t))
    return t;
  const r = t[ia];
  if (!r)
    return li(
      t,
      (i, n) => Gd(e, r, t, i, n, a)
    ), t;
  if (r.scope_ !== e)
    return t;
  if (!r.modified_)
    return hs(e, r.base_, !0), r.base_;
  if (!r.finalized_) {
    r.finalized_ = !0, r.scope_.unfinalizedDrafts_--;
    const i = r.copy_;
    let n = i, s = !1;
    r.type_ === 3 && (n = new Set(i), i.clear(), s = !0), li(
      n,
      (o, l) => Gd(e, r, i, o, l, a, s)
    ), hs(e, i, !1), a && e.patches_ && zn("Patches").generatePatches_(
      r,
      a,
      e.patches_,
      e.inversePatches_
    );
  }
  return r.copy_;
}
function Gd(e, t, a, r, i, n, s) {
  if ($i.NODE_ENV !== "production" && i === a && Xt(5), yr(i)) {
    const o = n && t && t.type_ !== 3 && // Set objects are atomic since they have no keys.
    !io(t.assigned_, r) ? n.concat(r) : void 0, l = ps(e, i, o);
    if (Tv(a, r, l), yr(l))
      e.canAutoFreeze_ = !1;
    else
      return;
  } else s && a.add(i);
  if (Nn(i) && !Us(i)) {
    if (!e.immer_.autoFreeze_ && e.unfinalizedDrafts_ < 1)
      return;
    ps(e, i), (!t || !t.scope_.parent_) && hs(e, i);
  }
}
function hs(e, t, a = !1) {
  !e.parent_ && e.immer_.autoFreeze_ && e.canAutoFreeze_ && tc(t, a);
}
function GS(e, t) {
  const a = Array.isArray(e), r = {
    type_: a ? 1 : 0,
    // Track which produce call this is associated with.
    scope_: t ? t.scope_ : jv(),
    // True for both shallow and deep changes.
    modified_: !1,
    // Used during finalization.
    finalized_: !1,
    // Track which properties have been assigned (true) or deleted (false).
    assigned_: {},
    // The parent draft state.
    parent_: t,
    // The base state.
    base_: e,
    // The base proxy.
    draft_: null,
    // set below
    // The base copy with any updated values.
    copy_: null,
    // Called by the `produce` function.
    revoke_: null,
    isManual_: !1
  };
  let i = r, n = ac;
  a && (i = [r], n = ui);
  const { revoke: s, proxy: o } = Proxy.revocable(i, n);
  return r.draft_ = o, r.revoke_ = s, o;
}
var ac = {
  get(e, t) {
    if (t === ia)
      return e;
    const a = Sn(e);
    if (!io(a, t))
      return YS(e, a, t);
    const r = a[t];
    return e.finalized_ || !Nn(r) ? r : r === Sl(e.base_, t) ? (_l(e), e.copy_[t] = co(r, e)) : r;
  },
  has(e, t) {
    return t in Sn(e);
  },
  ownKeys(e) {
    return Reflect.ownKeys(Sn(e));
  },
  set(e, t, a) {
    const r = Mv(Sn(e), t);
    if (r != null && r.set)
      return r.set.call(e.draft_, a), !0;
    if (!e.modified_) {
      const i = Sl(Sn(e), t), n = i == null ? void 0 : i[ia];
      if (n && n.base_ === a)
        return e.copy_[t] = a, e.assigned_[t] = !1, !0;
      if (qS(a, i) && (a !== void 0 || io(e.base_, t)))
        return !0;
      _l(e), uo(e);
    }
    return e.copy_[t] === a && // special case: handle new props with value 'undefined'
    (a !== void 0 || t in e.copy_) || // special case: NaN
    Number.isNaN(a) && Number.isNaN(e.copy_[t]) || (e.copy_[t] = a, e.assigned_[t] = !0), !0;
  },
  deleteProperty(e, t) {
    return Sl(e.base_, t) !== void 0 || t in e.base_ ? (e.assigned_[t] = !1, _l(e), uo(e)) : delete e.assigned_[t], e.copy_ && delete e.copy_[t], !0;
  },
  // Note: We never coerce `desc.value` into an Immer draft, because we can't make
  // the same guarantee in ES5 mode.
  getOwnPropertyDescriptor(e, t) {
    const a = Sn(e), r = Reflect.getOwnPropertyDescriptor(a, t);
    return r && {
      writable: !0,
      configurable: e.type_ !== 1 || t !== "length",
      enumerable: r.enumerable,
      value: a[t]
    };
  },
  defineProperty() {
    Xt(11);
  },
  getPrototypeOf(e) {
    return hr(e.base_);
  },
  setPrototypeOf() {
    Xt(12);
  }
}, ui = {};
li(ac, (e, t) => {
  ui[e] = function() {
    return arguments[0] = arguments[0][0], t.apply(this, arguments);
  };
});
ui.deleteProperty = function(e, t) {
  return $i.NODE_ENV !== "production" && isNaN(parseInt(t)) && Xt(13), ui.set.call(this, e, t, void 0);
};
ui.set = function(e, t, a) {
  return $i.NODE_ENV !== "production" && t !== "length" && isNaN(parseInt(t)) && Xt(14), ac.set.call(this, e[0], t, a, e[0]);
};
function Sl(e, t) {
  const a = e[ia];
  return (a ? Sn(a) : e)[t];
}
function YS(e, t, a) {
  var i;
  const r = Mv(t, a);
  return r ? "value" in r ? r.value : (
    // This is a very special case, if the prop is a getter defined by the
    // prototype, we should invoke it with the draft as context!
    (i = r.get) == null ? void 0 : i.call(e.draft_)
  ) : void 0;
}
function Mv(e, t) {
  if (!(t in e))
    return;
  let a = hr(e);
  for (; a; ) {
    const r = Object.getOwnPropertyDescriptor(a, t);
    if (r)
      return r;
    a = hr(a);
  }
}
function uo(e) {
  e.modified_ || (e.modified_ = !0, e.parent_ && uo(e.parent_));
}
function _l(e) {
  e.copy_ || (e.copy_ = so(
    e.base_,
    e.scope_.immer_.useStrictShallowCopy_
  ));
}
var XS = class {
  constructor(e) {
    this.autoFreeze_ = !0, this.useStrictShallowCopy_ = !1, this.produce = (t, a, r) => {
      if (typeof t == "function" && typeof a != "function") {
        const n = a;
        a = t;
        const s = this;
        return function(l = n, ...u) {
          return s.produce(l, (c) => a.call(this, c, ...u));
        };
      }
      typeof a != "function" && Xt(6), r !== void 0 && typeof r != "function" && Xt(7);
      let i;
      if (Nn(t)) {
        const n = Ud(this), s = co(t, void 0);
        let o = !0;
        try {
          i = a(s), o = !1;
        } finally {
          o ? lo(n) : oo(n);
        }
        return Hd(n, r), Wd(i, n);
      } else if (!t || typeof t != "object") {
        if (i = a(t), i === void 0 && (i = t), i === Ev && (i = void 0), this.autoFreeze_ && tc(i, !0), r) {
          const n = [], s = [];
          zn("Patches").generateReplacementPatches_(t, i, n, s), r(n, s);
        }
        return i;
      } else
        Xt(1, t);
    }, this.produceWithPatches = (t, a) => {
      if (typeof t == "function")
        return (s, ...o) => this.produceWithPatches(s, (l) => t(l, ...o));
      let r, i;
      return [this.produce(t, a, (s, o) => {
        r = s, i = o;
      }), r, i];
    }, typeof (e == null ? void 0 : e.autoFreeze) == "boolean" && this.setAutoFreeze(e.autoFreeze), typeof (e == null ? void 0 : e.useStrictShallowCopy) == "boolean" && this.setUseStrictShallowCopy(e.useStrictShallowCopy);
  }
  createDraft(e) {
    Nn(e) || Xt(8), yr(e) && (e = ZS(e));
    const t = Ud(this), a = co(e, void 0);
    return a[ia].isManual_ = !0, oo(t), a;
  }
  finishDraft(e, t) {
    const a = e && e[ia];
    (!a || !a.isManual_) && Xt(9);
    const { scope_: r } = a;
    return Hd(r, t), Wd(void 0, r);
  }
  /**
   * Pass true to automatically freeze all copies created by Immer.
   *
   * By default, auto-freezing is enabled.
   */
  setAutoFreeze(e) {
    this.autoFreeze_ = e;
  }
  /**
   * Pass true to enable strict shallow copy.
   *
   * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.
   */
  setUseStrictShallowCopy(e) {
    this.useStrictShallowCopy_ = e;
  }
  applyPatches(e, t) {
    let a;
    for (a = t.length - 1; a >= 0; a--) {
      const i = t[a];
      if (i.path.length === 0 && i.op === "replace") {
        e = i.value;
        break;
      }
    }
    a > -1 && (t = t.slice(a + 1));
    const r = zn("Patches").applyPatches_;
    return yr(e) ? r(e, t) : this.produce(
      e,
      (i) => r(i, t)
    );
  }
};
function co(e, t) {
  const a = Ks(e) ? zn("MapSet").proxyMap_(e, t) : Hs(e) ? zn("MapSet").proxySet_(e, t) : GS(e, t);
  return (t ? t.scope_ : jv()).drafts_.push(a), a;
}
function ZS(e) {
  return yr(e) || Xt(10, e), Dv(e);
}
function Dv(e) {
  if (!Nn(e) || Us(e))
    return e;
  const t = e[ia];
  let a;
  if (t) {
    if (!t.modified_)
      return t.base_;
    t.finalized_ = !0, a = so(e, t.scope_.immer_.useStrictShallowCopy_);
  } else
    a = so(e, !0);
  return li(a, (r, i) => {
    Tv(a, r, Dv(i));
  }), t && (t.finalized_ = !1), a;
}
var sa = new XS(), Vt = sa.produce;
sa.produceWithPatches.bind(
  sa
);
var JS = sa.setAutoFreeze.bind(sa);
sa.setUseStrictShallowCopy.bind(sa);
sa.applyPatches.bind(sa);
sa.createDraft.bind(sa);
sa.finishDraft.bind(sa);
const QS = {
  errorOneOf: "chose one",
  errorRequired: "required information",
  addItem: "Add item",
  delete: "Delete",
  edit: "Edit",
  confirm: "Confirm",
  close: "Close",
  duplicate: "Duplicate",
  copy: "Copy",
  paste: "Paste",
  sort: "Sort",
  up: "Move up",
  down: "Move down",
  showHelp: "Show a help message",
  mdeLink1: "[Link title",
  mdeLink2: "](link url)",
  mdeImg1: "![](",
  mdeImg2: "image url)",
  mdeTable1: "",
  mdeTable2: `

| Column 1 | Column 2 | Column 3 |
| -------- | -------- | -------- |
| Text     | Text     | Text     |

`,
  bold: "Bold",
  italic: "Italic",
  heading: "Title",
  quote: "Quote",
  unorderedList: "Unordered list",
  orderedList: "Ordered list",
  createLink: "Create a link",
  insertImage: "Insert an image",
  createTable: "Create a table",
  preview: "Aperçu du rendu",
  mdeGuide: "Documentation de la syntaxe",
  undo: "Undo",
  redo: "Redo",
  default: "default: ",
  name: "name: ",
  examples: "Examples: ",
  deprecated: "Warning, this information is deprecated.",
  // see L and LT format https://github.com/iamkun/dayjs/blob/dev/src/locale/en-gb.js
  keyboardDate: "MM/DD/YYYY",
  keyboardDateTime: "MM/DD/YYYY HH:mm"
}, e_ = {
  errorOneOf: "choisissez une valeur",
  errorRequired: "information obligatoire",
  addItem: "Ajouter un élément",
  delete: "Supprimer",
  edit: "Éditer",
  confirm: "Confirmer",
  close: "Fermer",
  duplicate: "Dupliquer",
  copy: "Copier",
  paste: "Coller",
  sort: "Trier",
  up: "Décaler vers le haut",
  down: "Décaler vers le bas",
  showHelp: "Afficher un message d'aide",
  mdeLink1: "[titre du lien",
  mdeLink2: "](adresse du lien)",
  mdeImg1: "![](",
  mdeImg2: "adresse de l'image)",
  mdeTable1: "",
  mdeTable2: `

| Colonne 1 | Colonne 2 | Colonne 3 |
| -------- | -------- | -------- |
| Texte     | Texte     | Texte     |

`,
  bold: "Gras",
  italic: "Italique",
  heading: "Titre",
  quote: "Citation",
  unorderedList: "Liste à puce",
  orderedList: "Liste numérotée",
  createLink: "Créer un lien",
  insertImage: "Insérer une image",
  createTable: "Créer un tableau",
  preview: "Preview",
  mdeGuide: "Syntax documentation",
  undo: "Défaire",
  redo: "Refaire",
  default: "défaut : ",
  name: "nom : ",
  examples: "Exemples : ",
  deprecated: "Attention, cette information est obsolète.",
  // see L and LT format https://github.com/iamkun/dayjs/blob/dev/src/locale/fr.js
  keyboardDate: "JJ/MM/AAAA",
  keyboardDateTime: "JJ/MM/AAAA HH:mm"
}, t_ = {
  errorOneOf: "Kies er een",
  errorRequired: "benodigde informatie",
  addItem: "Item toevoegen",
  delete: "Verwijderen",
  confirm: "Bevestigen",
  edit: "Bewerken",
  close: "Sluiten",
  duplicate: "Verveelvoudigen",
  copy: "Kopiëren",
  paste: "Plakken",
  sort: "Sorteren",
  up: "Omhoog verplaatsen",
  down: "Omlaag verplaatsen",
  showHelp: "Toon helpbericht",
  mdeLink1: "[Link titel",
  mdeLink2: "](link url)",
  mdeImg1: "![](",
  mdeImg2: "afbeelding url)",
  mdeTable1: "",
  mdeTable2: `

| Kolom 1  | Kolom 2  | Kolom 3  |
| -------- | -------- | -------- |
| Tekst    | Tekst    | Tekst    |

`,
  bold: "Vet",
  italic: "Cursief",
  heading: "Titel",
  quote: "Citaat",
  unorderedList: "Ongeordende lijst",
  orderedList: "Geordende lijst",
  createLink: "Maak een koppeling",
  insertImage: "Afbeelding invoegen",
  createTable: "Tabel aanmaken",
  preview: "Voorbeeld",
  mdeGuide: "Documentatie over syntaxis",
  undo: "Ongedaan maken",
  redo: "Opnieuw",
  default: "standaard: ",
  name: "naam: ",
  examples: "Voorbeelden: ",
  deprecated: "Waarschuwing, deze informatie is verouderd.",
  // see L and LT format https://github.com/iamkun/dayjs/blob/dev/src/locale/nl.js
  keyboardDate: "DD-MM-YYYY",
  keyboardDateTime: "DD-MM-YYYY HH:mm"
}, a_ = {
  errorOneOf: "Wählen Sie eine Option",
  errorRequired: "Erforderliche Information",
  addItem: "Element hinzufügen",
  delete: "Löschen",
  edit: "Bearbeiten",
  confirm: "Bestätigen",
  close: "Schließen",
  duplicate: "Duplizieren",
  copy: "Kopie",
  paste: "Paste",
  sort: "Sortieren",
  up: "Nach oben verschieben",
  down: "Nach unten verschieben",
  showHelp: "Hilfemeldung anzeigen",
  mdeLink1: "[Link-Titel",
  mdeLink2: "](Link-URL)",
  mdeImg1: "![](",
  mdeImg2: "Bild-URL)",
  mdeTable1: "",
  mdeTable2: `

| Spalte 1 | Spalte 2 | Spalte 3 |
| -------- | -------- | -------- |
| Text     | Text     | Text     |

`,
  bold: "Fett",
  italic: "Kursiv",
  heading: "Titel",
  quote: "Zitat",
  unorderedList: "Ungeordnete Liste",
  orderedList: "Geordnete Liste",
  createLink: "Link erstellen",
  insertImage: "Bild einfügen",
  createTable: "Tabelle erstellen",
  preview: "Vorschau",
  mdeGuide: "Syntax-Dokumentation",
  undo: "Rückgängig",
  redo: "Wiederholen",
  default: "standard: ",
  name: "name: ",
  examples: "Beispiele: ",
  deprecated: "Achtung, diese Information ist veraltet.",
  // see L and LT format https://github.com/iamkun/dayjs/blob/dev/src/locale/de.js
  keyboardDate: "TT.MM.JJJJ",
  keyboardDateTime: "TT.MM.JJJJ HH:mm"
}, Yd = {
  en: QS,
  fr: e_,
  nl: t_,
  de: a_
};
function ys(e = [], t = []) {
  if (!e || !t || e.length !== t.length) return t;
  for (let a = 0; a < e.length; a++)
    if (e[a] !== t[a]) return t;
  return e;
}
function n_(e = {}, t = {}) {
  if (!e || !t) return t;
  const a = Object.keys(e), r = Object.keys(t);
  if (a.length !== r.length) return t;
  for (const i of a)
    if (e[i] !== t[i]) return t;
  return e;
}
function Rv(e = [], t = []) {
  if (!e || !t) return e === t;
  if (e.length !== t.length) return !1;
  for (let a = 0; a < e.length; a++)
    if (e[a] !== t[a]) return !1;
  return !0;
}
const r_ = (
  /** @type {typeof ajvModule.default} */
  fv
), i_ = (e) => {
  let t = e.ajv;
  if (!t) {
    const o = { allErrors: !0, strict: !1, verbose: !0, ...e.ajvOptions }, l = new r_(o);
    rS.default(l), pv.default(l), t = l;
  }
  try {
    t.addKeyword("layout");
  } catch {
  }
  try {
    t.addKeyword("__pointer");
  } catch {
  }
  let a = e.markdown;
  a || (a = (l) => Ge.parse(l, e.markedOptions));
  const r = e.defaultLocale || "en", i = e.locale || r, n = { ...Yd[i] || Yd[r] };
  e.messages && Object.assign(n, e.messages);
  const s = rg.reduce(
    (o, l) => (o[l.name] = l, o),
    /** @type {Record<string, import('@json-layout/vocabulary').ComponentInfo>} */
    {}
  );
  if (e.components) {
    for (const o of Object.keys(e.components))
      s[o] = { ...e.components[o], name: o };
    Object.assign(s, e.components);
  }
  return {
    ajv: t,
    markdown: a,
    useDescription: ["help", "subtitle"],
    useDefault: "data",
    useName: !1,
    useExamples: "items",
    useDeprecated: !1,
    useTitle: "label",
    ...e,
    locale: i,
    defaultLocale: r,
    messages: n,
    components: s,
    xI18n: !!e.xI18n
  };
}, s_ = Vt((e, t) => {
  for (const a of ["ajv", "ajvOptions", "code", "markdown", "markedOptions", "xI18n", "locale", "defaultLocale", "messages", "optionsKeys", "components", "useDescription", "useDefault", "useName", "useExamples", "useDeprecated", "useTitle"])
    if (a in t) {
      if (a === "components" && Rv(Object.keys(e.components ?? []), Object.keys(t.components ?? [])))
        continue;
      e[a] = t[a];
    } else
      delete e[a];
}), Xd = (
  /** @type {typeof ajvLocalizeModule.default} */
  qy
);
function l_(e, t = {}) {
  const a = i_(t), r = (
    /** @type {import('ajv').SchemaObject} */
    Sa(e)
  );
  r.$id = r.$id ?? "_jl";
  const i = tS(r, a.ajv, a.locale, a.defaultLocale);
  a.xI18n && ao(r, a.locale, a.defaultLocale);
  const n = [], s = {}, o = [], l = {}, u = {}, c = {}, d = `${r.$id}#`;
  for (u[d] = "recursing", u[d] = as(
    r,
    r.$id,
    a,
    i,
    u,
    c,
    n,
    l,
    s,
    o,
    d,
    "main"
  ); ; ) {
    let h = !1;
    for (const y of Object.values(c)) {
      for (const f of [...y.propertyKeys])
        if (f.startsWith("$")) {
          const g = c[f.replace("$", "")];
          y.propertyKeys = [...new Set(y.propertyKeys.filter((P) => P !== f).concat(g.propertyKeys))], h = !0;
        }
      for (const f of [...y.roPropertyKeys])
        if (f.startsWith("$")) {
          const g = c[f.replace("$", "")];
          y.roPropertyKeys = [...new Set(y.roPropertyKeys.filter((P) => P !== f).concat(g.roPropertyKeys))], h = !0;
        }
    }
    if (!h) break;
  }
  a.ajv.removeSchema(r.$id), a.ajv.addSchema(r);
  const m = a.ajv.opts.uriResolver, v = {};
  for (const h of n) {
    const y = m.resolve(r.$id, h);
    v[h] = a.ajv.compile({ $ref: y });
  }
  const p = [];
  for (const h of o) {
    const y = h.pure ? ["data", h.dataAlias, "options", "context", "display", "layout", "readOnly", "summary", "validates"] : ["data", h.dataAlias, "options", "context", "display", "layout", "readOnly", "summary", "validates", "rootData", "parent"];
    h.type === "js-fn" && p.push(
      /** @type {CompiledExpression} */
      new Function(...y, h.expr)
    ), h.type === "js-eval" && p.push(
      /** @type {CompiledExpression} */
      new Function(...y, "return (" + h.expr + ")")
    ), h.type === "js-tpl" && p.push(
      /** @type {CompiledExpression} */
      new Function(...y, "return `" + h.expr + "`")
    );
  }
  return Object.keys(l).length && console.error("JSON layout encountered some validation errors:", l), {
    options: a,
    schema: r,
    mainTree: d,
    skeletonTrees: u,
    skeletonNodes: c,
    validates: v,
    validationErrors: l,
    normalizedLayouts: s,
    expressions: p,
    locale: a.locale,
    messages: a.messages,
    components: a.components,
    // @ts-ignore
    localizeErrors: Xd[a.locale] || Xd.en
  };
}
function Z(e, t) {
  return (a) => Object.keys(e).reduce((r, i) => {
    const s = typeof e[i] == "object" && e[i] != null && !Array.isArray(e[i]) ? e[i] : {
      type: e[i]
    };
    return a && i in a ? r[i] = {
      ...s,
      default: a[i]
    } : r[i] = s, t && !r[i].source && (r[i].source = t), r;
  }, {});
}
const _e = Z({
  class: [String, Array, Object],
  style: {
    type: [String, Array, Object],
    default: null
  }
}, "component"), rt = typeof window < "u", nc = rt && "IntersectionObserver" in window, Zd = rt && "EyeDropper" in window, Nv = rt && "matchMedia" in window && typeof window.matchMedia == "function", Ln = () => Nv && window.matchMedia("(prefers-reduced-motion: reduce)").matches;
function Jd(e, t, a) {
  o_(e, t), t.set(e, a);
}
function o_(e, t) {
  if (t.has(e)) throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function Qd(e, t, a) {
  return e.set(zv(e, t), a), a;
}
function Ua(e, t) {
  return e.get(zv(e, t));
}
function zv(e, t, a) {
  if (typeof e == "function" ? e === t : e.has(t)) return arguments.length < 3 ? t : a;
  throw new TypeError("Private element is not present on this object");
}
function Lv(e, t, a) {
  const r = t.length - 1;
  if (r < 0) return e === void 0 ? a : e;
  for (let i = 0; i < r; i++) {
    if (e == null)
      return a;
    e = e[t[i]];
  }
  return e == null || e[t[r]] === void 0 ? a : e[t[r]];
}
function Et(e, t) {
  if (e === t) return !0;
  if (e instanceof Date && t instanceof Date && e.getTime() !== t.getTime() || e !== Object(e) || t !== Object(t))
    return !1;
  const a = Object.keys(e);
  return a.length !== Object.keys(t).length ? !1 : a.every((r) => Et(e[r], t[r]));
}
function u_(e, t, a) {
  return e == null || !t || typeof t != "string" ? a : e[t] !== void 0 ? e[t] : (t = t.replace(/\[(\w+)\]/g, ".$1"), t = t.replace(/^\./, ""), Lv(e, t.split("."), a));
}
function Zt(e, t, a) {
  if (t === !0) return e === void 0 ? a : e;
  if (t == null || typeof t == "boolean") return a;
  if (e !== Object(e)) {
    if (typeof t != "function") return a;
    const i = t(e, a);
    return typeof i > "u" ? a : i;
  }
  if (typeof t == "string") return u_(e, t, a);
  if (Array.isArray(t)) return Lv(e, t, a);
  if (typeof t != "function") return a;
  const r = t(e, a);
  return typeof r > "u" ? a : r;
}
function jr(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  return Array.from({
    length: e
  }, (a, r) => t + r);
}
function ge(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "px";
  if (e == null || e === "")
    return;
  const a = Number(e);
  return isNaN(a) ? String(e) : isFinite(a) ? `${a}${t}` : void 0;
}
function gs(e) {
  return e !== null && typeof e == "object" && !Array.isArray(e);
}
function ef(e) {
  let t;
  return e !== null && typeof e == "object" && ((t = Object.getPrototypeOf(e)) === Object.prototype || t === null);
}
function Bv(e) {
  if (e && "$el" in e) {
    const t = e.$el;
    return (t == null ? void 0 : t.nodeType) === Node.TEXT_NODE ? t.nextElementSibling : t;
  }
  return e;
}
const c_ = Object.freeze({
  enter: "Enter",
  tab: "Tab",
  delete: "Delete",
  esc: "Escape",
  space: "Space",
  up: "ArrowUp",
  down: "ArrowDown",
  left: "ArrowLeft",
  right: "ArrowRight",
  end: "End",
  home: "Home",
  del: "Delete",
  backspace: "Backspace",
  insert: "Insert",
  pageup: "PageUp",
  pagedown: "PageDown",
  shift: "Shift"
});
function Fv(e) {
  return Object.keys(e);
}
function In(e, t) {
  return t.every((a) => e.hasOwnProperty(a));
}
function yn(e, t) {
  const a = {};
  for (const r of t)
    Object.prototype.hasOwnProperty.call(e, r) && (a[r] = e[r]);
  return a;
}
function tf(e, t, a) {
  const r = /* @__PURE__ */ Object.create(null), i = /* @__PURE__ */ Object.create(null);
  for (const n in e)
    t.some((s) => s instanceof RegExp ? s.test(n) : s === n) ? r[n] = e[n] : i[n] = e[n];
  return [r, i];
}
function ut(e, t) {
  const a = {
    ...e
  };
  return t.forEach((r) => delete a[r]), a;
}
const qv = /^on[^a-z]/, Kv = (e) => qv.test(e), d_ = ["onAfterscriptexecute", "onAnimationcancel", "onAnimationend", "onAnimationiteration", "onAnimationstart", "onAuxclick", "onBeforeinput", "onBeforescriptexecute", "onChange", "onClick", "onCompositionend", "onCompositionstart", "onCompositionupdate", "onContextmenu", "onCopy", "onCut", "onDblclick", "onFocusin", "onFocusout", "onFullscreenchange", "onFullscreenerror", "onGesturechange", "onGestureend", "onGesturestart", "onGotpointercapture", "onInput", "onKeydown", "onKeypress", "onKeyup", "onLostpointercapture", "onMousedown", "onMousemove", "onMouseout", "onMouseover", "onMouseup", "onMousewheel", "onPaste", "onPointercancel", "onPointerdown", "onPointerenter", "onPointerleave", "onPointermove", "onPointerout", "onPointerover", "onPointerup", "onReset", "onSelect", "onSubmit", "onTouchcancel", "onTouchend", "onTouchmove", "onTouchstart", "onTransitioncancel", "onTransitionend", "onTransitionrun", "onTransitionstart", "onWheel"], f_ = ["ArrowUp", "ArrowDown", "ArrowRight", "ArrowLeft", "Enter", "Escape", "Tab", " "];
function m_(e) {
  return e.isComposing && f_.includes(e.key);
}
function Wn(e) {
  const [t, a] = tf(e, [qv]), r = ut(t, d_), [i, n] = tf(a, ["class", "style", "id", /^data-/]);
  return Object.assign(i, t), Object.assign(n, r), [i, n];
}
function ot(e) {
  return e == null ? [] : Array.isArray(e) ? e : [e];
}
function Hv(e, t) {
  let a = 0;
  const r = function() {
    for (var i = arguments.length, n = new Array(i), s = 0; s < i; s++)
      n[s] = arguments[s];
    clearTimeout(a), a = setTimeout(() => e(...n), H(t));
  };
  return r.clear = () => {
    clearTimeout(a);
  }, r.immediate = e, r;
}
function lt(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
  return Math.max(t, Math.min(a, e));
}
function af(e) {
  const t = e.toString().trim();
  return t.includes(".") ? t.length - t.indexOf(".") - 1 : 0;
}
function nf(e, t) {
  let a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "0";
  return e + a.repeat(Math.max(0, t - e.length));
}
function v_(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  const a = [];
  let r = 0;
  for (; r < e.length; )
    a.push(e.substr(r, t)), r += t;
  return a;
}
function rf(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1e3;
  if (e < t)
    return `${e} B`;
  const a = t === 1024 ? ["Ki", "Mi", "Gi"] : ["k", "M", "G"];
  let r = -1;
  for (; Math.abs(e) >= t && r < a.length - 1; )
    e /= t, ++r;
  return `${e.toFixed(1)} ${a[r]}B`;
}
function Ga() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, a = arguments.length > 2 ? arguments[2] : void 0;
  const r = {};
  for (const i in e)
    r[i] = e[i];
  for (const i in t) {
    const n = e[i], s = t[i];
    if (ef(n) && ef(s)) {
      r[i] = Ga(n, s, a);
      continue;
    }
    if (a && Array.isArray(n) && Array.isArray(s)) {
      r[i] = a(n, s);
      continue;
    }
    r[i] = s;
  }
  return r;
}
function Uv(e) {
  return e.map((t) => t.type === ve ? Uv(t.children) : t).flat();
}
function An() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  if (An.cache.has(e)) return An.cache.get(e);
  const t = e.replace(/[^a-z]/gi, "-").replace(/\B([A-Z])/g, "-$1").toLowerCase();
  return An.cache.set(e, t), t;
}
An.cache = /* @__PURE__ */ new Map();
function Gr(e, t) {
  if (!t || typeof t != "object") return [];
  if (Array.isArray(t))
    return t.map((a) => Gr(e, a)).flat(1);
  if (t.suspense)
    return Gr(e, t.ssContent);
  if (Array.isArray(t.children))
    return t.children.map((a) => Gr(e, a)).flat(1);
  if (t.component) {
    if (Object.getOwnPropertySymbols(t.component.provides).includes(e))
      return [t.component];
    if (t.component.subTree)
      return Gr(e, t.component.subTree).flat(1);
  }
  return [];
}
var rr = /* @__PURE__ */ new WeakMap(), kn = /* @__PURE__ */ new WeakMap();
class p_ {
  constructor(t) {
    Jd(this, rr, []), Jd(this, kn, 0), this.size = t;
  }
  get isFull() {
    return Ua(rr, this).length === this.size;
  }
  push(t) {
    Ua(rr, this)[Ua(kn, this)] = t, Qd(kn, this, (Ua(kn, this) + 1) % this.size);
  }
  values() {
    return Ua(rr, this).slice(Ua(kn, this)).concat(Ua(rr, this).slice(0, Ua(kn, this)));
  }
  clear() {
    Ua(rr, this).length = 0, Qd(kn, this, 0);
  }
}
function h_(e) {
  return "touches" in e ? {
    clientX: e.touches[0].clientX,
    clientY: e.touches[0].clientY
  } : {
    clientX: e.clientX,
    clientY: e.clientY
  };
}
function rc(e) {
  const t = jn({});
  At(() => {
    const r = e();
    for (const i in r)
      t[i] = r[i];
  }, {
    flush: "sync"
  });
  const a = {};
  for (const r in t)
    a[r] = q(() => t[r]);
  return a;
}
function bs(e, t) {
  return e.includes(t);
}
function Wv(e) {
  return e[2].toLowerCase() + e.slice(3);
}
const Lt = () => [Function, Array];
function sf(e, t) {
  return t = "on" + gi(t), !!(e[t] || e[`${t}Once`] || e[`${t}Capture`] || e[`${t}OnceCapture`] || e[`${t}CaptureOnce`]);
}
function Ws(e) {
  for (var t = arguments.length, a = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
    a[r - 1] = arguments[r];
  if (Array.isArray(e))
    for (const i of e)
      i(...a);
  else typeof e == "function" && e(...a);
}
function gr(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  const a = ["button", "[href]", 'input:not([type="hidden"])', "select", "textarea", "[tabindex]"].map((r) => `${r}${t ? ':not([tabindex="-1"])' : ""}:not([disabled])`).join(", ");
  return [...e.querySelectorAll(a)];
}
function Gv(e, t, a) {
  let r, i = e.indexOf(document.activeElement);
  const n = t === "next" ? 1 : -1;
  do
    i += n, r = e[i];
  while ((!r || r.offsetParent == null || !((a == null ? void 0 : a(r)) ?? !0)) && i < e.length && i >= 0);
  return r;
}
function ii(e, t) {
  var r, i, n, s;
  const a = gr(e);
  if (t == null)
    (e === document.activeElement || !e.contains(document.activeElement)) && ((r = a[0]) == null || r.focus());
  else if (t === "first")
    (i = a[0]) == null || i.focus();
  else if (t === "last")
    (n = a.at(-1)) == null || n.focus();
  else if (typeof t == "number")
    (s = a[t]) == null || s.focus();
  else {
    const o = Gv(a, t);
    o ? o.focus() : ii(e, t === "next" ? "first" : "last");
  }
}
function Yv() {
}
function br(e, t) {
  if (!(rt && typeof CSS < "u" && typeof CSS.supports < "u" && CSS.supports(`selector(${t})`))) return null;
  try {
    return !!e && e.matches(t);
  } catch {
    return null;
  }
}
function Gs(e) {
  return e.some((t) => ry(t) ? t.type === iy ? !1 : t.type !== ve || Gs(t.children) : !0) ? e : null;
}
function y_(e, t) {
  if (!rt || e === 0)
    return t(), () => {
    };
  const a = window.setTimeout(t, e);
  return () => window.clearTimeout(a);
}
function g_(e, t) {
  const a = e.clientX, r = e.clientY, i = t.getBoundingClientRect(), n = i.left, s = i.top, o = i.right, l = i.bottom;
  return a >= n && a <= o && r >= s && r <= l;
}
function ks() {
  const e = me(), t = (a) => {
    e.value = a;
  };
  return Object.defineProperty(t, "value", {
    enumerable: !0,
    get: () => e.value,
    set: (a) => e.value = a
  }), Object.defineProperty(t, "el", {
    enumerable: !0,
    get: () => Bv(e.value)
  }), t;
}
function kr(e) {
  const t = e.key.length === 1, a = !e.ctrlKey && !e.metaKey && !e.altKey;
  return t && a;
}
function fo(e) {
  return typeof e == "string" || typeof e == "number" || typeof e == "boolean" || typeof e == "bigint";
}
function ws(e) {
  return "\\^$*+?.()|{}[]".includes(e) ? `\\${e}` : e;
}
function b_(e, t, a) {
  const r = new RegExp(`[\\d\\-${ws(a)}]`), i = e.split("").filter((s) => r.test(s)).filter((s, o, l) => o === 0 && /[-]/.test(s) || // sign allowed at the start
  s === a && o === l.indexOf(s) || // decimal separator allowed only once
  /\d/.test(s)).join("");
  if (t === 0)
    return i.split(a)[0];
  const n = new RegExp(`${ws(a)}\\d`);
  if (t !== null && n.test(i)) {
    const s = i.split(a);
    return [s[0], s[1].substring(0, t)].join(a);
  }
  return i;
}
function k_(e) {
  const t = {};
  for (const a in e)
    t[Is(a)] = e[a];
  return t;
}
function w_(e) {
  const t = ["checked", "disabled"];
  return Object.fromEntries(Object.entries(e).filter((a) => {
    let [r, i] = a;
    return t.includes(r) ? !!i : i !== void 0;
  }));
}
const Xv = ["top", "bottom"], $_ = ["start", "end", "left", "right"];
function mo(e, t) {
  let [a, r] = e.split(" ");
  return r || (r = bs(Xv, a) ? "start" : bs($_, a) ? "top" : "center"), {
    side: lf(a, t),
    align: lf(r, t)
  };
}
function lf(e, t) {
  return e === "start" ? t ? "right" : "left" : e === "end" ? t ? "left" : "right" : e;
}
function Pl(e) {
  return {
    side: {
      center: "center",
      top: "bottom",
      bottom: "top",
      left: "right",
      right: "left"
    }[e.side],
    align: e.align
  };
}
function Cl(e) {
  return {
    side: e.side,
    align: {
      center: "center",
      top: "bottom",
      bottom: "top",
      left: "right",
      right: "left"
    }[e.align]
  };
}
function of(e) {
  return {
    side: e.align,
    align: e.side
  };
}
function uf(e) {
  return bs(Xv, e.side) ? "y" : "x";
}
class va {
  constructor(t) {
    const a = document.body.currentCSSZoom ?? 1, r = t instanceof DOMRect ? 1 + (1 - a) / a : 1, {
      x: i,
      y: n,
      width: s,
      height: o
    } = t;
    this.x = i * r, this.y = n * r, this.width = s * r, this.height = o * r;
  }
  get top() {
    return this.y;
  }
  get bottom() {
    return this.y + this.height;
  }
  get left() {
    return this.x;
  }
  get right() {
    return this.x + this.width;
  }
}
function cf(e, t) {
  return {
    x: {
      before: Math.max(0, t.left - e.left),
      after: Math.max(0, e.right - t.right)
    },
    y: {
      before: Math.max(0, t.top - e.top),
      after: Math.max(0, e.bottom - t.bottom)
    }
  };
}
function Zv(e) {
  if (Array.isArray(e)) {
    const t = document.body.currentCSSZoom ?? 1, a = 1 + (1 - t) / t;
    return new va({
      x: e[0] * a,
      y: e[1] * a,
      width: 0 * a,
      height: 0 * a
    });
  } else
    return new va(e.getBoundingClientRect());
}
function S_(e) {
  if (e === document.documentElement)
    if (visualViewport) {
      const t = document.body.currentCSSZoom ?? 1;
      return new va({
        x: visualViewport.scale > 1 ? 0 : visualViewport.offsetLeft,
        y: visualViewport.scale > 1 ? 0 : visualViewport.offsetTop,
        width: visualViewport.width * visualViewport.scale / t,
        height: visualViewport.height * visualViewport.scale / t
      });
    } else
      return new va({
        x: 0,
        y: 0,
        width: document.documentElement.clientWidth,
        height: document.documentElement.clientHeight
      });
  else {
    const t = e.getBoundingClientRect();
    return new va({
      x: t.x,
      y: t.y,
      width: e.clientWidth,
      height: e.clientHeight
    });
  }
}
function ic(e) {
  const t = new va(e.getBoundingClientRect()), a = getComputedStyle(e), r = a.transform;
  if (r) {
    let i, n, s, o, l;
    if (r.startsWith("matrix3d("))
      i = r.slice(9, -1).split(/, /), n = Number(i[0]), s = Number(i[5]), o = Number(i[12]), l = Number(i[13]);
    else if (r.startsWith("matrix("))
      i = r.slice(7, -1).split(/, /), n = Number(i[0]), s = Number(i[3]), o = Number(i[4]), l = Number(i[5]);
    else
      return new va(t);
    const u = a.transformOrigin, c = t.x - o - (1 - n) * parseFloat(u), d = t.y - l - (1 - s) * parseFloat(u.slice(u.indexOf(" ") + 1)), m = n ? t.width / n : e.offsetWidth + 1, v = s ? t.height / s : e.offsetHeight + 1;
    return new va({
      x: c,
      y: d,
      width: m,
      height: v
    });
  } else
    return new va(t);
}
function Wa(e, t, a) {
  if (typeof e.animate > "u") return {
    finished: Promise.resolve()
  };
  let r;
  try {
    r = e.animate(t, a);
  } catch {
    return {
      finished: Promise.resolve()
    };
  }
  return typeof r.finished > "u" && (r.finished = new Promise((i) => {
    r.onfinish = () => {
      i(r);
    };
  })), r;
}
const ns = /* @__PURE__ */ new WeakMap();
function __(e, t) {
  Object.keys(t).forEach((a) => {
    if (Kv(a)) {
      const r = Wv(a), i = ns.get(e);
      if (t[a] == null)
        i == null || i.forEach((n) => {
          const [s, o] = n;
          s === r && (e.removeEventListener(r, o), i.delete(n));
        });
      else if (!i || ![...i].some((n) => n[0] === r && n[1] === t[a])) {
        e.addEventListener(r, t[a]);
        const n = i || /* @__PURE__ */ new Set();
        n.add([r, t[a]]), ns.has(e) || ns.set(e, n);
      }
    } else
      t[a] == null ? e.removeAttribute(a) : e.setAttribute(a, t[a]);
  });
}
function P_(e, t) {
  Object.keys(t).forEach((a) => {
    if (Kv(a)) {
      const r = Wv(a), i = ns.get(e);
      i == null || i.forEach((n) => {
        const [s, o] = n;
        s === r && (e.removeEventListener(r, o), i.delete(n));
      });
    } else
      e.removeAttribute(a);
  });
}
const ir = 2.4, df = 0.2126729, ff = 0.7151522, mf = 0.072175, C_ = 0.55, x_ = 0.58, V_ = 0.57, I_ = 0.62, Ki = 0.03, vf = 1.45, O_ = 5e-4, E_ = 1.25, A_ = 1.25, T_ = 0.078, pf = 12.82051282051282, Hi = 0.06, j_ = 1e-3;
function hf(e, t) {
  const a = (e.r / 255) ** ir, r = (e.g / 255) ** ir, i = (e.b / 255) ** ir, n = (t.r / 255) ** ir, s = (t.g / 255) ** ir, o = (t.b / 255) ** ir;
  let l = a * df + r * ff + i * mf, u = n * df + s * ff + o * mf;
  if (l <= Ki && (l += (Ki - l) ** vf), u <= Ki && (u += (Ki - u) ** vf), Math.abs(u - l) < O_) return 0;
  let c;
  if (u > l) {
    const d = (u ** C_ - l ** x_) * E_;
    c = d < j_ ? 0 : d < T_ ? d - d * pf * Hi : d - Hi;
  } else {
    const d = (u ** I_ - l ** V_) * A_;
    c = d > -1e-3 ? 0 : d > -0.078 ? d - d * pf * Hi : d + Hi;
  }
  return c * 100;
}
function Ja(e) {
  Os(`Vuetify: ${e}`);
}
function Jv(e) {
  Os(`Vuetify error: ${e}`);
}
function M_(e, t) {
  t = Array.isArray(t) ? t.slice(0, -1).map((a) => `'${a}'`).join(", ") + ` or '${t.at(-1)}'` : `'${t}'`, Os(`[Vuetify UPGRADE] '${e}' is deprecated, use ${t} instead.`);
}
const D_ = [[0.4124, 0.3576, 0.1805], [0.2126, 0.7152, 0.0722], [0.0193, 0.1192, 0.9505]], R_ = (e) => e <= 0.04045 ? e / 12.92 : ((e + 0.055) / 1.055) ** 2.4;
function N_(e) {
  let {
    r: t,
    g: a,
    b: r
  } = e;
  const i = [0, 0, 0], n = R_, s = D_;
  t = n(t / 255), a = n(a / 255), r = n(r / 255);
  for (let o = 0; o < 3; ++o)
    i[o] = s[o][0] * t + s[o][1] * a + s[o][2] * r;
  return i;
}
function vo(e) {
  return !!e && /^(#|var\(--|(rgb|hsl)a?\()/.test(e);
}
function z_(e) {
  return vo(e) && !/^((rgb|hsl)a?\()?var\(--/.test(e);
}
const yf = /^(?<fn>(?:rgb|hsl)a?)\((?<values>.+)\)/, L_ = {
  rgb: (e, t, a, r) => ({
    r: e,
    g: t,
    b: a,
    a: r
  }),
  rgba: (e, t, a, r) => ({
    r: e,
    g: t,
    b: a,
    a: r
  }),
  hsl: (e, t, a, r) => gf({
    h: e,
    s: t,
    l: a,
    a: r
  }),
  hsla: (e, t, a, r) => gf({
    h: e,
    s: t,
    l: a,
    a: r
  }),
  hsv: (e, t, a, r) => Fa({
    h: e,
    s: t,
    v: a,
    a: r
  }),
  hsva: (e, t, a, r) => Fa({
    h: e,
    s: t,
    v: a,
    a: r
  })
};
function Ya(e) {
  if (typeof e == "number")
    return (isNaN(e) || e < 0 || e > 16777215) && Ja(`'${e}' is not a valid hex color`), {
      r: (e & 16711680) >> 16,
      g: (e & 65280) >> 8,
      b: e & 255
    };
  if (typeof e == "string" && yf.test(e)) {
    const {
      groups: t
    } = e.match(yf), {
      fn: a,
      values: r
    } = t, i = r.split(/,\s*|\s*\/\s*|\s+/).map((n, s) => n.endsWith("%") || // unitless slv are %
    s > 0 && s < 3 && ["hsl", "hsla", "hsv", "hsva"].includes(a) ? parseFloat(n) / 100 : parseFloat(n));
    return L_[a](...i);
  } else if (typeof e == "string") {
    let t = e.startsWith("#") ? e.slice(1) : e;
    [3, 4].includes(t.length) ? t = t.split("").map((r) => r + r).join("") : [6, 8].includes(t.length) || Ja(`'${e}' is not a valid hex(a) color`);
    const a = parseInt(t, 16);
    return (isNaN(a) || a < 0 || a > 4294967295) && Ja(`'${e}' is not a valid hex(a) color`), tp(t);
  } else if (typeof e == "object") {
    if (In(e, ["r", "g", "b"]))
      return e;
    if (In(e, ["h", "s", "l"]))
      return Fa(sc(e));
    if (In(e, ["h", "s", "v"]))
      return Fa(e);
  }
  throw new TypeError(`Invalid color: ${e == null ? e : String(e) || e.constructor.name}
Expected #hex, #hexa, rgb(), rgba(), hsl(), hsla(), object or number`);
}
function Fa(e) {
  const {
    h: t,
    s: a,
    v: r,
    a: i
  } = e, n = (o) => {
    const l = (o + t / 60) % 6;
    return r - r * a * Math.max(Math.min(l, 4 - l, 1), 0);
  }, s = [n(5), n(3), n(1)].map((o) => Math.round(o * 255));
  return {
    r: s[0],
    g: s[1],
    b: s[2],
    a: i
  };
}
function gf(e) {
  return Fa(sc(e));
}
function Si(e) {
  if (!e) return {
    h: 0,
    s: 1,
    v: 1,
    a: 1
  };
  const t = e.r / 255, a = e.g / 255, r = e.b / 255, i = Math.max(t, a, r), n = Math.min(t, a, r);
  let s = 0;
  i !== n && (i === t ? s = 60 * (0 + (a - r) / (i - n)) : i === a ? s = 60 * (2 + (r - t) / (i - n)) : i === r && (s = 60 * (4 + (t - a) / (i - n)))), s < 0 && (s = s + 360);
  const o = i === 0 ? 0 : (i - n) / i, l = [s, o, i];
  return {
    h: l[0],
    s: l[1],
    v: l[2],
    a: e.a
  };
}
function po(e) {
  const {
    h: t,
    s: a,
    v: r,
    a: i
  } = e, n = r - r * a / 2, s = n === 1 || n === 0 ? 0 : (r - n) / Math.min(n, 1 - n);
  return {
    h: t,
    s,
    l: n,
    a: i
  };
}
function sc(e) {
  const {
    h: t,
    s: a,
    l: r,
    a: i
  } = e, n = r + a * Math.min(r, 1 - r), s = n === 0 ? 0 : 2 - 2 * r / n;
  return {
    h: t,
    s,
    v: n,
    a: i
  };
}
function Qv(e) {
  let {
    r: t,
    g: a,
    b: r,
    a: i
  } = e;
  return i === void 0 ? `rgb(${t}, ${a}, ${r})` : `rgba(${t}, ${a}, ${r}, ${i})`;
}
function ep(e) {
  return Qv(Fa(e));
}
function Ui(e) {
  const t = Math.round(e).toString(16);
  return ("00".substr(0, 2 - t.length) + t).toUpperCase();
}
function B_(e) {
  let {
    r: t,
    g: a,
    b: r,
    a: i
  } = e;
  return `#${[Ui(t), Ui(a), Ui(r), i !== void 0 ? Ui(Math.round(i * 255)) : ""].join("")}`;
}
function tp(e) {
  e = q_(e);
  let [t, a, r, i] = v_(e, 2).map((n) => parseInt(n, 16));
  return i = i === void 0 ? i : i / 255, {
    r: t,
    g: a,
    b: r,
    a: i
  };
}
function F_(e) {
  const t = tp(e);
  return Si(t);
}
function ap(e) {
  return B_(Fa(e));
}
function q_(e) {
  return e.startsWith("#") && (e = e.slice(1)), e = e.replace(/([^0-9a-f])/gi, "F"), (e.length === 3 || e.length === 4) && (e = e.split("").map((t) => t + t).join("")), e.length !== 6 && (e = nf(nf(e, 6), 8, "F")), e;
}
function bf(e) {
  const t = Ya(e);
  return N_(t)[1];
}
function K_(e, t) {
  const a = bf(e), r = bf(t), i = Math.max(a, r), n = Math.min(a, r);
  return (i + 0.05) / (n + 0.05);
}
function H_(e) {
  const t = Math.abs(hf(Ya(0), Ya(e)));
  return Math.abs(hf(Ya(16777215), Ya(e))) > Math.min(t, 50) ? "#fff" : "#000";
}
function kt(e, t) {
  const a = Es();
  if (!a)
    throw new Error(`[Vuetify] ${e} must be called from inside a setup function`);
  return a;
}
function Ka() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "composables";
  const t = kt(e).type;
  return An((t == null ? void 0 : t.aliasName) || (t == null ? void 0 : t.name));
}
function U_(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : kt("injectSelf");
  const {
    provides: a
  } = t;
  if (a && e in a)
    return a[e];
}
const $s = Symbol.for("vuetify:defaults");
function lc() {
  const e = Fe($s);
  if (!e) throw new Error("[Vuetify] Could not find defaults instance");
  return e;
}
function Ta(e, t) {
  const a = lc(), r = ee(e), i = C(() => {
    if (H(t == null ? void 0 : t.disabled)) return a.value;
    const s = H(t == null ? void 0 : t.scoped), o = H(t == null ? void 0 : t.reset), l = H(t == null ? void 0 : t.root);
    if (r.value == null && !(s || o || l)) return a.value;
    let u = Ga(r.value, {
      prev: a.value
    });
    if (s) return u;
    if (o || l) {
      const c = Number(o || 1 / 0);
      for (let d = 0; d <= c && !(!u || !("prev" in u)); d++)
        u = u.prev;
      return u && typeof l == "string" && l in u && (u = Ga(Ga(u, {
        prev: u
      }), u[l])), u;
    }
    return u.prev ? Ga(u.prev, u) : u;
  });
  return St($s, i), i;
}
function W_(e, t) {
  return e.props && (typeof e.props[t] < "u" || typeof e.props[An(t)] < "u");
}
function np() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, t = arguments.length > 1 ? arguments[1] : void 0, a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : lc();
  const r = kt("useDefaults");
  if (t = t ?? r.type.name ?? r.type.__name, !t)
    throw new Error("[Vuetify] Could not determine component name");
  const i = C(() => {
    var l;
    return (l = a.value) == null ? void 0 : l[e._as ?? t];
  }), n = new Proxy(e, {
    get(l, u) {
      var v, p, h, y;
      const c = Reflect.get(l, u);
      if (u === "class" || u === "style")
        return [(v = i.value) == null ? void 0 : v[u], c].filter((f) => f != null);
      if (W_(r.vnode, u)) return c;
      const d = (p = i.value) == null ? void 0 : p[u];
      if (d !== void 0) return d;
      const m = (y = (h = a.value) == null ? void 0 : h.global) == null ? void 0 : y[u];
      return m !== void 0 ? m : c;
    }
  }), s = me();
  At(() => {
    if (i.value) {
      const l = Object.entries(i.value).filter((u) => {
        let [c] = u;
        return c.startsWith(c[0].toUpperCase());
      });
      s.value = l.length ? Object.fromEntries(l) : void 0;
    } else
      s.value = void 0;
  });
  function o() {
    const l = U_($s, r);
    St($s, C(() => s.value ? Ga((l == null ? void 0 : l.value) ?? {}, s.value) : l == null ? void 0 : l.value));
  }
  return {
    props: n,
    provideSubDefaults: o
  };
}
function Ye() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, t = arguments.length > 1 ? arguments[1] : void 0;
  const {
    props: a,
    provideSubDefaults: r
  } = np(e, t);
  return r(), a;
}
function Ha(e) {
  if (e._setup = e._setup ?? e.setup, !e.name)
    return Ja("The component is missing an explicit name, unable to generate default prop value"), e;
  if (e._setup) {
    e.props = Z(e.props ?? {}, e.name)();
    const t = Object.keys(e.props).filter((a) => a !== "class" && a !== "style");
    e.filterProps = function(r) {
      return yn(r, t);
    }, e.props._as = String, e.setup = function(r, i) {
      const n = lc();
      if (!n.value) return e._setup(r, i);
      const {
        props: s,
        provideSubDefaults: o
      } = np(r, r._as ?? e.name, n), l = e._setup(s, i);
      return o(), l;
    };
  }
  return e;
}
function oe() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
  return (t) => (e ? Ha : _t)(t);
}
function Mr(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "div", a = arguments.length > 2 ? arguments[2] : void 0;
  return oe()({
    name: a ?? gi(Is(e.replace(/__/g, "-"))),
    props: {
      tag: {
        type: String,
        default: t
      },
      ..._e()
    },
    setup(r, i) {
      let {
        slots: n
      } = i;
      return () => {
        var s;
        return De(r.tag, {
          class: [e, r.class],
          style: r.style
        }, (s = n.default) == null ? void 0 : s.call(n));
      };
    }
  });
}
function rp(e) {
  if (typeof e.getRootNode != "function") {
    for (; e.parentNode; ) e = e.parentNode;
    return e !== document ? null : document;
  }
  const t = e.getRootNode();
  return t !== document && t.getRootNode({
    composed: !0
  }) !== document ? null : t;
}
const ci = "cubic-bezier(0.4, 0, 0.2, 1)", kf = "cubic-bezier(0.0, 0, 0.2, 1)", wf = "cubic-bezier(0.4, 0, 1, 1)", G_ = {
  linear: (e) => e,
  easeInQuad: (e) => e ** 2,
  easeOutQuad: (e) => e * (2 - e),
  easeInOutQuad: (e) => e < 0.5 ? 2 * e ** 2 : -1 + (4 - 2 * e) * e,
  easeInCubic: (e) => e ** 3,
  easeOutCubic: (e) => --e ** 3 + 1,
  easeInOutCubic: (e) => e < 0.5 ? 4 * e ** 3 : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1,
  easeInQuart: (e) => e ** 4,
  easeOutQuart: (e) => 1 - --e ** 4,
  easeInOutQuart: (e) => e < 0.5 ? 8 * e ** 4 : 1 - 8 * --e ** 4,
  easeInQuint: (e) => e ** 5,
  easeOutQuint: (e) => 1 + --e ** 5,
  easeInOutQuint: (e) => e < 0.5 ? 16 * e ** 5 : 1 + 16 * --e ** 5,
  instant: (e) => 1
};
function ip(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
  for (; e; ) {
    if (t ? Y_(e) : oc(e)) return e;
    e = e.parentElement;
  }
  return document.scrollingElement;
}
function Ss(e, t) {
  const a = [];
  if (t && e && !t.contains(e)) return a;
  for (; e && (oc(e) && a.push(e), e !== t); )
    e = e.parentElement;
  return a;
}
function oc(e) {
  if (!e || e.nodeType !== Node.ELEMENT_NODE) return !1;
  const t = window.getComputedStyle(e), a = t.overflowY === "scroll" || t.overflowY === "auto" && e.scrollHeight > e.clientHeight, r = t.overflowX === "scroll" || t.overflowX === "auto" && e.scrollWidth > e.clientWidth;
  return a || r;
}
function Y_(e) {
  if (!e || e.nodeType !== Node.ELEMENT_NODE) return !1;
  const t = window.getComputedStyle(e);
  return ["scroll", "auto"].includes(t.overflowY);
}
function X_(e) {
  for (; e; ) {
    if (window.getComputedStyle(e).position === "fixed")
      return !0;
    e = e.offsetParent;
  }
  return !1;
}
function ce(e) {
  const t = kt("useRender");
  t.render = e;
}
const la = Z({
  height: [Number, String],
  maxHeight: [Number, String],
  maxWidth: [Number, String],
  minHeight: [Number, String],
  minWidth: [Number, String],
  width: [Number, String]
}, "dimension");
function oa(e) {
  return {
    dimensionStyles: C(() => {
      const a = {}, r = ge(e.height), i = ge(e.maxHeight), n = ge(e.maxWidth), s = ge(e.minHeight), o = ge(e.minWidth), l = ge(e.width);
      return r != null && (a.height = r), i != null && (a.maxHeight = i), n != null && (a.maxWidth = n), s != null && (a.minHeight = s), o != null && (a.minWidth = o), l != null && (a.width = l), a;
    })
  };
}
function pn(e, t) {
  let a;
  function r() {
    a = Ro(), a.run(() => t.length ? t(() => {
      a == null || a.stop(), r();
    }) : t());
  }
  fe(e, (i) => {
    i && !a ? r() : i || (a == null || a.stop(), a = void 0);
  }, {
    immediate: !0
  }), It(() => {
    a == null || a.stop();
  });
}
function Ce(e, t, a) {
  let r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : (d) => d, i = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : (d) => d;
  const n = kt("useProxiedModel"), s = ee(e[t] !== void 0 ? e[t] : a), o = An(t), u = o !== t ? C(() => {
    var d, m, v, p;
    return e[t], !!(((d = n.vnode.props) != null && d.hasOwnProperty(t) || (m = n.vnode.props) != null && m.hasOwnProperty(o)) && ((v = n.vnode.props) != null && v.hasOwnProperty(`onUpdate:${t}`) || (p = n.vnode.props) != null && p.hasOwnProperty(`onUpdate:${o}`)));
  }) : C(() => {
    var d, m;
    return e[t], !!((d = n.vnode.props) != null && d.hasOwnProperty(t) && ((m = n.vnode.props) != null && m.hasOwnProperty(`onUpdate:${t}`)));
  });
  pn(() => !u.value, () => {
    fe(() => e[t], (d) => {
      s.value = d;
    });
  });
  const c = C({
    get() {
      const d = e[t];
      return r(u.value ? d : s.value);
    },
    set(d) {
      const m = i(d), v = Qe(u.value ? e[t] : s.value);
      v === m || r(v) === d || (s.value = m, n == null || n.emit(`update:${t}`, m));
    }
  });
  return Object.defineProperty(c, "externalValue", {
    get: () => u.value ? e[t] : s.value
  }), c;
}
const sp = Symbol.for("vuetify:locale");
function dt() {
  const e = Fe(sp);
  if (!e) throw new Error("[Vuetify] Could not find injected locale instance");
  return e;
}
function jt() {
  const e = Fe(sp);
  if (!e) throw new Error("[Vuetify] Could not find injected rtl instance");
  return {
    isRtl: e.isRtl,
    rtlClasses: e.rtlClasses
  };
}
const Ke = Z({
  tag: {
    type: [String, Object, Function],
    default: "div"
  }
}, "tag"), Z_ = Z({
  fluid: {
    type: Boolean,
    default: !1
  },
  ..._e(),
  ...la(),
  ...Ke()
}, "VContainer"), _i = oe()({
  name: "VContainer",
  props: Z_(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      rtlClasses: r
    } = jt(), {
      dimensionStyles: i
    } = oa(e);
    return ce(() => w(e.tag, {
      class: te(["v-container", {
        "v-container--fluid": e.fluid
      }, r.value, e.class]),
      style: ye([i.value, e.style])
    }, a)), {};
  }
}), Ys = ["sm", "md", "lg", "xl", "xxl"], J_ = Symbol.for("vuetify:display"), lp = Z({
  mobile: {
    type: Boolean,
    default: !1
  },
  mobileBreakpoint: [Number, String]
}, "display");
function Xs() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
    mobile: null
  }, t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ka();
  const a = Fe(J_);
  if (!a) throw new Error("Could not find Vuetify display injection");
  const r = C(() => e.mobile ? !0 : typeof e.mobileBreakpoint == "number" ? a.width.value < e.mobileBreakpoint : e.mobileBreakpoint ? a.width.value < a.thresholds.value[e.mobileBreakpoint] : e.mobile === null ? a.mobile.value : !1), i = q(() => t ? {
    [`${t}--mobile`]: r.value
  } : {});
  return {
    ...a,
    displayClasses: i,
    mobile: r
  };
}
const op = Ys.reduce((e, t) => (e[t] = {
  type: [Boolean, String, Number],
  default: !1
}, e), {}), up = Ys.reduce((e, t) => {
  const a = "offset" + gi(t);
  return e[a] = {
    type: [String, Number],
    default: null
  }, e;
}, {}), cp = Ys.reduce((e, t) => {
  const a = "order" + gi(t);
  return e[a] = {
    type: [String, Number],
    default: null
  }, e;
}, {}), $f = {
  col: Object.keys(op),
  offset: Object.keys(up),
  order: Object.keys(cp)
};
function Q_(e, t, a) {
  let r = e;
  if (!(a == null || a === !1)) {
    if (t) {
      const i = t.replace(e, "");
      r += `-${i}`;
    }
    return e === "col" && (r = "v-" + r), e === "col" && (a === "" || a === !0) || (r += `-${a}`), r.toLowerCase();
  }
}
const eP = ["auto", "start", "end", "center", "baseline", "stretch"], tP = Z({
  cols: {
    type: [Boolean, String, Number],
    default: !1
  },
  ...op,
  offset: {
    type: [String, Number],
    default: null
  },
  ...up,
  order: {
    type: [String, Number],
    default: null
  },
  ...cp,
  alignSelf: {
    type: String,
    default: null,
    validator: (e) => eP.includes(e)
  },
  ..._e(),
  ...Ke()
}, "VCol"), dp = oe()({
  name: "VCol",
  props: tP(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = C(() => {
      const i = [];
      let n;
      for (n in $f)
        $f[n].forEach((o) => {
          const l = e[o], u = Q_(n, o, l);
          u && i.push(u);
        });
      const s = i.some((o) => o.startsWith("v-col-"));
      return i.push({
        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.
        "v-col": !s || !e.cols,
        [`v-col-${e.cols}`]: e.cols,
        [`offset-${e.offset}`]: e.offset,
        [`order-${e.order}`]: e.order,
        [`align-self-${e.alignSelf}`]: e.alignSelf
      }), i;
    });
    return () => {
      var i;
      return De(e.tag, {
        class: [r.value, e.class],
        style: e.style
      }, (i = a.default) == null ? void 0 : i.call(a));
    };
  }
}), uc = ["start", "end", "center"], fp = ["space-between", "space-around", "space-evenly"];
function cc(e, t) {
  return Ys.reduce((a, r) => {
    const i = e + gi(r);
    return a[i] = t(), a;
  }, {});
}
const aP = [...uc, "baseline", "stretch"], mp = (e) => aP.includes(e), vp = cc("align", () => ({
  type: String,
  default: null,
  validator: mp
})), nP = [...uc, ...fp], pp = (e) => nP.includes(e), hp = cc("justify", () => ({
  type: String,
  default: null,
  validator: pp
})), rP = [...uc, ...fp, "stretch"], yp = (e) => rP.includes(e), gp = cc("alignContent", () => ({
  type: String,
  default: null,
  validator: yp
})), Sf = {
  align: Object.keys(vp),
  justify: Object.keys(hp),
  alignContent: Object.keys(gp)
}, iP = {
  align: "align",
  justify: "justify",
  alignContent: "align-content"
};
function sP(e, t, a) {
  let r = iP[e];
  if (a != null) {
    if (t) {
      const i = t.replace(e, "");
      r += `-${i}`;
    }
    return r += `-${a}`, r.toLowerCase();
  }
}
const lP = Z({
  dense: Boolean,
  noGutters: Boolean,
  align: {
    type: String,
    default: null,
    validator: mp
  },
  ...vp,
  justify: {
    type: String,
    default: null,
    validator: pp
  },
  ...hp,
  alignContent: {
    type: String,
    default: null,
    validator: yp
  },
  ...gp,
  ..._e(),
  ...Ke()
}, "VRow"), Va = oe()({
  name: "VRow",
  props: lP(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = C(() => {
      const i = [];
      let n;
      for (n in Sf)
        Sf[n].forEach((s) => {
          const o = e[s], l = sP(n, s, o);
          l && i.push(l);
        });
      return i.push({
        "v-row--no-gutters": e.noGutters,
        "v-row--dense": e.dense,
        [`align-${e.align}`]: e.align,
        [`justify-${e.justify}`]: e.justify,
        [`align-content-${e.alignContent}`]: e.alignContent
      }), i;
    });
    return () => {
      var i;
      return De(e.tag, {
        class: ["v-row", r.value, e.class],
        style: e.style
      }, (i = a.default) == null ? void 0 : i.call(a));
    };
  }
}), _s = Mr("v-spacer", "div", "VSpacer");
var ho = { exports: {} }, xl, _f;
function oP() {
  if (_f) return xl;
  _f = 1;
  var e = 1e3, t = e * 60, a = t * 60, r = a * 24, i = r * 7, n = r * 365.25;
  xl = function(c, d) {
    d = d || {};
    var m = typeof c;
    if (m === "string" && c.length > 0)
      return s(c);
    if (m === "number" && isFinite(c))
      return d.long ? l(c) : o(c);
    throw new Error(
      "val is not a non-empty string or a valid number. val=" + JSON.stringify(c)
    );
  };
  function s(c) {
    if (c = String(c), !(c.length > 100)) {
      var d = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
        c
      );
      if (d) {
        var m = parseFloat(d[1]), v = (d[2] || "ms").toLowerCase();
        switch (v) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return m * n;
          case "weeks":
          case "week":
          case "w":
            return m * i;
          case "days":
          case "day":
          case "d":
            return m * r;
          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return m * a;
          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return m * t;
          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return m * e;
          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return m;
          default:
            return;
        }
      }
    }
  }
  function o(c) {
    var d = Math.abs(c);
    return d >= r ? Math.round(c / r) + "d" : d >= a ? Math.round(c / a) + "h" : d >= t ? Math.round(c / t) + "m" : d >= e ? Math.round(c / e) + "s" : c + "ms";
  }
  function l(c) {
    var d = Math.abs(c);
    return d >= r ? u(c, d, r, "day") : d >= a ? u(c, d, a, "hour") : d >= t ? u(c, d, t, "minute") : d >= e ? u(c, d, e, "second") : c + " ms";
  }
  function u(c, d, m, v) {
    var p = d >= m * 1.5;
    return Math.round(c / m) + " " + v + (p ? "s" : "");
  }
  return xl;
}
function uP(e) {
  a.debug = a, a.default = a, a.coerce = l, a.disable = s, a.enable = i, a.enabled = o, a.humanize = oP(), a.destroy = u, Object.keys(e).forEach((c) => {
    a[c] = e[c];
  }), a.names = [], a.skips = [], a.formatters = {};
  function t(c) {
    let d = 0;
    for (let m = 0; m < c.length; m++)
      d = (d << 5) - d + c.charCodeAt(m), d |= 0;
    return a.colors[Math.abs(d) % a.colors.length];
  }
  a.selectColor = t;
  function a(c) {
    let d, m = null, v, p;
    function h(...y) {
      if (!h.enabled)
        return;
      const f = h, g = Number(/* @__PURE__ */ new Date()), P = g - (d || g);
      f.diff = P, f.prev = d, f.curr = g, d = g, y[0] = a.coerce(y[0]), typeof y[0] != "string" && y.unshift("%O");
      let S = 0;
      y[0] = y[0].replace(/%([a-zA-Z%])/g, (j, F) => {
        if (j === "%%")
          return "%";
        S++;
        const R = a.formatters[F];
        if (typeof R == "function") {
          const U = y[S];
          j = R.call(f, U), y.splice(S, 1), S--;
        }
        return j;
      }), a.formatArgs.call(f, y), (f.log || a.log).apply(f, y);
    }
    return h.namespace = c, h.useColors = a.useColors(), h.color = a.selectColor(c), h.extend = r, h.destroy = a.destroy, Object.defineProperty(h, "enabled", {
      enumerable: !0,
      configurable: !1,
      get: () => m !== null ? m : (v !== a.namespaces && (v = a.namespaces, p = a.enabled(c)), p),
      set: (y) => {
        m = y;
      }
    }), typeof a.init == "function" && a.init(h), h;
  }
  function r(c, d) {
    const m = a(this.namespace + (typeof d > "u" ? ":" : d) + c);
    return m.log = this.log, m;
  }
  function i(c) {
    a.save(c), a.namespaces = c, a.names = [], a.skips = [];
    const d = (typeof c == "string" ? c : "").trim().replace(" ", ",").split(",").filter(Boolean);
    for (const m of d)
      m[0] === "-" ? a.skips.push(m.slice(1)) : a.names.push(m);
  }
  function n(c, d) {
    let m = 0, v = 0, p = -1, h = 0;
    for (; m < c.length; )
      if (v < d.length && (d[v] === c[m] || d[v] === "*"))
        d[v] === "*" ? (p = v, h = m, v++) : (m++, v++);
      else if (p !== -1)
        v = p + 1, h++, m = h;
      else
        return !1;
    for (; v < d.length && d[v] === "*"; )
      v++;
    return v === d.length;
  }
  function s() {
    const c = [
      ...a.names,
      ...a.skips.map((d) => "-" + d)
    ].join(",");
    return a.enable(""), c;
  }
  function o(c) {
    for (const d of a.skips)
      if (n(c, d))
        return !1;
    for (const d of a.names)
      if (n(c, d))
        return !0;
    return !1;
  }
  function l(c) {
    return c instanceof Error ? c.stack || c.message : c;
  }
  function u() {
    console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
  }
  return a.enable(a.load()), a;
}
var cP = uP;
(function(e, t) {
  var a = {};
  t.formatArgs = i, t.save = n, t.load = s, t.useColors = r, t.storage = o(), t.destroy = /* @__PURE__ */ (() => {
    let u = !1;
    return () => {
      u || (u = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
    };
  })(), t.colors = [
    "#0000CC",
    "#0000FF",
    "#0033CC",
    "#0033FF",
    "#0066CC",
    "#0066FF",
    "#0099CC",
    "#0099FF",
    "#00CC00",
    "#00CC33",
    "#00CC66",
    "#00CC99",
    "#00CCCC",
    "#00CCFF",
    "#3300CC",
    "#3300FF",
    "#3333CC",
    "#3333FF",
    "#3366CC",
    "#3366FF",
    "#3399CC",
    "#3399FF",
    "#33CC00",
    "#33CC33",
    "#33CC66",
    "#33CC99",
    "#33CCCC",
    "#33CCFF",
    "#6600CC",
    "#6600FF",
    "#6633CC",
    "#6633FF",
    "#66CC00",
    "#66CC33",
    "#9900CC",
    "#9900FF",
    "#9933CC",
    "#9933FF",
    "#99CC00",
    "#99CC33",
    "#CC0000",
    "#CC0033",
    "#CC0066",
    "#CC0099",
    "#CC00CC",
    "#CC00FF",
    "#CC3300",
    "#CC3333",
    "#CC3366",
    "#CC3399",
    "#CC33CC",
    "#CC33FF",
    "#CC6600",
    "#CC6633",
    "#CC9900",
    "#CC9933",
    "#CCCC00",
    "#CCCC33",
    "#FF0000",
    "#FF0033",
    "#FF0066",
    "#FF0099",
    "#FF00CC",
    "#FF00FF",
    "#FF3300",
    "#FF3333",
    "#FF3366",
    "#FF3399",
    "#FF33CC",
    "#FF33FF",
    "#FF6600",
    "#FF6633",
    "#FF9900",
    "#FF9933",
    "#FFCC00",
    "#FFCC33"
  ];
  function r() {
    if (typeof window < "u" && window.process && (window.process.type === "renderer" || window.process.__nwjs))
      return !0;
    if (typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))
      return !1;
    let u;
    return typeof document < "u" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
    typeof window < "u" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    typeof navigator < "u" && navigator.userAgent && (u = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(u[1], 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
    typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
  }
  function i(u) {
    if (u[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + u[0] + (this.useColors ? "%c " : " ") + "+" + e.exports.humanize(this.diff), !this.useColors)
      return;
    const c = "color: " + this.color;
    u.splice(1, 0, c, "color: inherit");
    let d = 0, m = 0;
    u[0].replace(/%[a-zA-Z%]/g, (v) => {
      v !== "%%" && (d++, v === "%c" && (m = d));
    }), u.splice(m, 0, c);
  }
  t.log = console.debug || console.log || (() => {
  });
  function n(u) {
    try {
      u ? t.storage.setItem("debug", u) : t.storage.removeItem("debug");
    } catch {
    }
  }
  function s() {
    let u;
    try {
      u = t.storage.getItem("debug");
    } catch {
    }
    return !u && typeof process < "u" && "env" in process && (u = a.DEBUG), u;
  }
  function o() {
    try {
      return localStorage;
    } catch {
    }
  }
  e.exports = cP(t);
  const { formatters: l } = e.exports;
  l.j = function(u) {
    try {
      return JSON.stringify(u);
    } catch (c) {
      return "[UnexpectedJSONParseError]: " + c.message;
    }
  };
})(ho, ho.exports);
var dP = ho.exports;
const ya = /* @__PURE__ */ xr(dP), fP = Symbol.for("vuetify:date-options");
function mP(e, t, a) {
  const r = e.getDiff(e.endOfDay(a ?? t), e.startOfDay(t), "days"), i = [t];
  for (let n = 1; n < r; n++) {
    const s = e.addDays(t, n);
    i.push(s);
  }
  return a && i.push(e.endOfDay(a)), i;
}
function vP(e, t) {
  const a = jn(typeof e.adapter == "function" ? new e.adapter({
    locale: e.locale[t.current.value] ?? t.current.value,
    formats: e.formats
  }) : e.adapter);
  return fe(t.current, (r) => {
    a.locale = e.locale[r] ?? r ?? a.locale;
  }), a;
}
function Gn() {
  const e = Fe(fP);
  if (!e) throw new Error("[Vuetify] Could not find injected date options");
  const t = dt();
  return vP(e, t);
}
const pP = Symbol.for("vuetify:goto");
function hP() {
  return {
    container: void 0,
    duration: 300,
    layout: !1,
    offset: 0,
    easing: "easeInOutCubic",
    patterns: G_
  };
}
function yP(e) {
  return dc(e) ?? (document.scrollingElement || document.body);
}
function dc(e) {
  return typeof e == "string" ? document.querySelector(e) : Bv(e);
}
function Vl(e, t, a) {
  if (typeof e == "number") return t && a ? -e : e;
  let r = dc(e), i = 0;
  for (; r; )
    i += t ? r.offsetLeft : r.offsetTop, r = r.offsetParent;
  return i;
}
async function Pf(e, t, a, r) {
  const i = a ? "scrollLeft" : "scrollTop", n = Ga((r == null ? void 0 : r.options) ?? hP(), t), s = r == null ? void 0 : r.rtl.value, o = (typeof e == "number" ? e : dc(e)) ?? 0, l = n.container === "parent" && o instanceof HTMLElement ? o.parentElement : yP(n.container), u = Ln() ? n.patterns.instant : typeof n.easing == "function" ? n.easing : n.patterns[n.easing];
  if (!u) throw new TypeError(`Easing function "${n.easing}" not found.`);
  let c;
  if (typeof o == "number")
    c = Vl(o, a, s);
  else if (c = Vl(o, a, s) - Vl(l, a, s), n.layout) {
    const p = window.getComputedStyle(o).getPropertyValue("--v-layout-top");
    p && (c -= parseInt(p, 10));
  }
  c += n.offset, c = bP(l, c, !!s, !!a);
  const d = l[i] ?? 0;
  if (c === d) return Promise.resolve(c);
  const m = performance.now();
  return new Promise((v) => requestAnimationFrame(function p(h) {
    const f = (h - m) / n.duration, g = Math.floor(d + (c - d) * u(lt(f, 0, 1)));
    if (l[i] = g, f >= 1 && Math.abs(g - l[i]) < 10)
      return v(c);
    if (f > 2)
      return Ja("Scroll target is not reachable"), v(l[i]);
    requestAnimationFrame(p);
  }));
}
function gP() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const t = Fe(pP), {
    isRtl: a
  } = jt();
  if (!t) throw new Error("[Vuetify] Could not find injected goto instance");
  const r = {
    ...t,
    // can be set via VLocaleProvider
    rtl: q(() => t.rtl.value || a.value)
  };
  async function i(n, s) {
    return Pf(n, Ga(e, s), !1, r);
  }
  return i.horizontal = async (n, s) => Pf(n, Ga(e, s), !0, r), i;
}
function bP(e, t, a, r) {
  const {
    scrollWidth: i,
    scrollHeight: n
  } = e, [s, o] = e === document.scrollingElement ? [window.innerWidth, window.innerHeight] : [e.offsetWidth, e.offsetHeight];
  let l, u;
  return r ? a ? (l = -(i - s), u = 0) : (l = 0, u = i - s) : (l = 0, u = n + -o), lt(t, l, u);
}
const xe = [String, Function, Object, Array], kP = Symbol.for("vuetify:icons"), Zs = Z({
  icon: {
    type: xe
  },
  // Could not remove this and use makeTagProps, types complained because it is not required
  tag: {
    type: [String, Object, Function],
    required: !0
  }
}, "icon"), Cf = oe()({
  name: "VComponentIcon",
  props: Zs(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return () => {
      const r = e.icon;
      return w(e.tag, null, {
        default: () => {
          var i;
          return [e.icon ? w(r, null, null) : (i = a.default) == null ? void 0 : i.call(a)];
        }
      });
    };
  }
}), wP = Ha({
  name: "VSvgIcon",
  inheritAttrs: !1,
  props: Zs(),
  setup(e, t) {
    let {
      attrs: a
    } = t;
    return () => w(e.tag, ne(a, {
      style: null
    }), {
      default: () => [T("svg", {
        class: "v-icon__svg",
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24",
        role: "img",
        "aria-hidden": "true"
      }, [Array.isArray(e.icon) ? e.icon.map((r) => Array.isArray(r) ? T("path", {
        d: r[0],
        "fill-opacity": r[1]
      }, null) : T("path", {
        d: r
      }, null)) : T("path", {
        d: e.icon
      }, null)])]
    });
  }
});
Ha({
  name: "VLigatureIcon",
  props: Zs(),
  setup(e) {
    return () => w(e.tag, null, {
      default: () => [e.icon]
    });
  }
});
Ha({
  name: "VClassIcon",
  props: Zs(),
  setup(e) {
    return () => w(e.tag, {
      class: te(e.icon)
    }, null);
  }
});
const $P = (e) => {
  const t = Fe(kP);
  if (!t) throw new Error("Missing Vuetify Icons provide!");
  return {
    iconData: C(() => {
      var l;
      const r = Tt(e);
      if (!r) return {
        component: Cf
      };
      let i = r;
      if (typeof i == "string" && (i = i.trim(), i.startsWith("$") && (i = (l = t.aliases) == null ? void 0 : l[i.slice(1)])), i || Ja(`Could not find aliased icon "${r}"`), Array.isArray(i))
        return {
          component: wP,
          icon: i
        };
      if (typeof i != "string")
        return {
          component: Cf,
          icon: i
        };
      const n = Object.keys(t.sets).find((u) => typeof i == "string" && i.startsWith(`${u}:`)), s = n ? i.slice(n.length + 1) : i;
      return {
        component: t.sets[n ?? t.defaultSet].component,
        icon: s
      };
    })
  };
}, yo = Symbol.for("vuetify:theme"), it = Z({
  theme: String
}, "theme");
function ht(e) {
  kt("provideTheme");
  const t = Fe(yo, null);
  if (!t) throw new Error("Could not find Vuetify theme injection");
  const a = q(() => e.theme ?? t.name.value), r = q(() => t.themes.value[a.value]), i = q(() => t.isDisabled ? void 0 : `${t.prefix}theme--${a.value}`), n = {
    ...t,
    name: a,
    current: r,
    themeClasses: i
  };
  return St(yo, n), n;
}
function fc() {
  kt("useTheme");
  const e = Fe(yo, null);
  if (!e) throw new Error("Could not find Vuetify theme injection");
  return e;
}
function Bn(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "content";
  const a = ks(), r = ee();
  if (rt) {
    const i = new ResizeObserver((n) => {
      e == null || e(n, i), n.length && (t === "content" ? r.value = n[0].contentRect : r.value = n[0].target.getBoundingClientRect());
    });
    Aa(() => {
      i.disconnect();
    }), fe(() => a.el, (n, s) => {
      s && (i.unobserve(s), r.value = void 0), n && i.observe(n);
    }, {
      flush: "post"
    });
  }
  return {
    resizeRef: a,
    contentRect: No(r)
  };
}
const SP = Z({
  defaults: Object,
  disabled: Boolean,
  reset: [Number, String],
  root: [Boolean, String],
  scoped: Boolean
}, "VDefaultsProvider"), ze = oe(!1)({
  name: "VDefaultsProvider",
  props: SP(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      defaults: r,
      disabled: i,
      reset: n,
      root: s,
      scoped: o
    } = dm(e);
    return Ta(r, {
      reset: n,
      root: s,
      scoped: o,
      disabled: i
    }), () => {
      var l;
      return (l = a.default) == null ? void 0 : l.call(a);
    };
  }
}), Yr = {
  props: {
    layoutSlot: {
      /** @type import('vue').PropType<import('@json-layout/vocabulary').Slot> */
      type: Object,
      required: !0
    },
    node: {
      /** @type import('vue').PropType<import('../../types.js').VjsfNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    },
    tag: {
      /** @type import('vue').PropType<string> */
      type: String,
      default: null
    }
  },
  render() {
    const e = this.tag ?? (Jc(this.layoutSlot) ? "p" : "div");
    if (Jc(this.layoutSlot))
      return De(e, this.layoutSlot.text);
    if (ag(this.layoutSlot))
      return De(e, { innerHTML: this.layoutSlot.markdown });
    if (ng(this.layoutSlot))
      if (!this.statefulLayout.options.vjsfSlots[this.layoutSlot.name])
        console.error(`vjsf: layout references a code slot "${this.layoutSlot.name}" that was not provided.`);
      else {
        const t = {
          node: this.node,
          statefulLayout: this.statefulLayout
        };
        return this.layoutSlot.props && Object.assign(t, this.layoutSlot.props), De(e, this.statefulLayout.options.vjsfSlots[this.layoutSlot.name](t));
      }
    return null;
  }
}, _P = Mr("v-alert-title"), sn = Z({
  border: [Boolean, Number, String]
}, "border");
function ln(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ka();
  return {
    borderClasses: C(() => {
      const r = e.border;
      return r === !0 || r === "" ? `${t}--border` : typeof r == "string" || r === 0 ? String(r).split(" ").map((i) => `border-${i}`) : [];
    })
  };
}
const PP = [null, "default", "comfortable", "compact"], ga = Z({
  density: {
    type: String,
    default: "default",
    validator: (e) => PP.includes(e)
  }
}, "density");
function ja(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ka();
  return {
    densityClasses: q(() => `${t}--density-${e.density}`)
  };
}
const ba = Z({
  elevation: {
    type: [Number, String],
    validator(e) {
      const t = parseInt(e);
      return !isNaN(t) && t >= 0 && // Material Design has a maximum elevation of 24
      // https://material.io/design/environment/elevation.html#default-elevations
      t <= 24;
    }
  }
}, "elevation");
function ka(e) {
  return {
    elevationClasses: q(() => {
      const a = Ll(e) ? e.value : e.elevation;
      return a == null ? [] : [`elevation-${a}`];
    })
  };
}
const Kt = Z({
  rounded: {
    type: [Boolean, Number, String],
    default: void 0
  },
  tile: Boolean
}, "rounded");
function Ht(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ka();
  return {
    roundedClasses: C(() => {
      const r = Ll(e) ? e.value : e.rounded, i = Ll(e) ? !1 : e.tile, n = [];
      if (i || r === !1)
        n.push("rounded-0");
      else if (r === !0 || r === "")
        n.push(`${t}--rounded`);
      else if (typeof r == "string" || r === 0)
        for (const s of String(r).split(" "))
          n.push(`rounded-${s}`);
      return n;
    })
  };
}
function mc(e) {
  return rc(() => {
    const {
      class: t,
      style: a
    } = CP(e);
    return {
      colorClasses: t,
      colorStyles: a
    };
  });
}
function Bt(e) {
  const {
    colorClasses: t,
    colorStyles: a
  } = mc(() => ({
    text: Tt(e)
  }));
  return {
    textColorClasses: t,
    textColorStyles: a
  };
}
function pt(e) {
  const {
    colorClasses: t,
    colorStyles: a
  } = mc(() => ({
    background: Tt(e)
  }));
  return {
    backgroundColorClasses: t,
    backgroundColorStyles: a
  };
}
function CP(e) {
  const t = Tt(e), a = [], r = {};
  if (t.background)
    if (vo(t.background)) {
      if (r.backgroundColor = t.background, !t.text && z_(t.background)) {
        const i = Ya(t.background);
        if (i.a == null || i.a === 1) {
          const n = H_(i);
          r.color = n, r.caretColor = n;
        }
      }
    } else
      a.push(`bg-${t.background}`);
  return t.text && (vo(t.text) ? (r.color = t.text, r.caretColor = t.text) : a.push(`text-${t.text}`)), {
    class: a,
    style: r
  };
}
const xP = ["elevated", "flat", "tonal", "outlined", "text", "plain"];
function Yn(e, t) {
  return T(ve, null, [e && T("span", {
    key: "overlay",
    class: te(`${t}__overlay`)
  }, null), T("span", {
    key: "underlay",
    class: te(`${t}__underlay`)
  }, null)]);
}
const on = Z({
  color: String,
  variant: {
    type: String,
    default: "elevated",
    validator: (e) => xP.includes(e)
  }
}, "variant");
function Dr(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ka();
  const a = q(() => {
    const {
      variant: n
    } = Tt(e);
    return `${t}--variant-${n}`;
  }), {
    colorClasses: r,
    colorStyles: i
  } = mc(() => {
    const {
      variant: n,
      color: s
    } = Tt(e);
    return {
      [["elevated", "flat"].includes(n) ? "background" : "text"]: s
    };
  });
  return {
    colorClasses: r,
    colorStyles: i,
    variantClasses: a
  };
}
const bp = Z({
  baseColor: String,
  divided: Boolean,
  direction: {
    type: String,
    default: "horizontal"
  },
  ...sn(),
  ..._e(),
  ...ga(),
  ...ba(),
  ...Kt(),
  ...Ke(),
  ...it(),
  ...on()
}, "VBtnGroup"), xf = oe()({
  name: "VBtnGroup",
  props: bp(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      themeClasses: r
    } = ht(e), {
      densityClasses: i
    } = ja(e), {
      borderClasses: n
    } = ln(e), {
      elevationClasses: s
    } = ka(e), {
      roundedClasses: o
    } = Ht(e);
    Ta({
      VBtn: {
        height: q(() => e.direction === "horizontal" ? "auto" : null),
        baseColor: q(() => e.baseColor),
        color: q(() => e.color),
        density: q(() => e.density),
        flat: !0,
        variant: q(() => e.variant)
      }
    }), ce(() => w(e.tag, {
      class: te(["v-btn-group", `v-btn-group--${e.direction}`, {
        "v-btn-group--divided": e.divided
      }, r.value, n.value, i.value, s.value, o.value, e.class]),
      style: ye(e.style)
    }, a));
  }
}), Pi = Z({
  modelValue: {
    type: null,
    default: void 0
  },
  multiple: Boolean,
  mandatory: [Boolean, String],
  max: Number,
  selectedClass: String,
  disabled: Boolean
}, "group"), Ci = Z({
  value: null,
  disabled: Boolean,
  selectedClass: String
}, "group-item");
function wr(e, t) {
  let a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0;
  const r = kt("useGroupItem");
  if (!r)
    throw new Error("[Vuetify] useGroupItem composable must be used inside a component setup function");
  const i = pa();
  St(Symbol.for(`${t.description}:id`), i);
  const n = Fe(t, null);
  if (!n) {
    if (!a) return n;
    throw new Error(`[Vuetify] Could not find useGroup injection with symbol ${t.description}`);
  }
  const s = q(() => e.value), o = C(() => !!(n.disabled.value || e.disabled));
  function l() {
    n == null || n.register({
      id: i,
      value: s,
      disabled: o
    }, r);
  }
  function u() {
    n == null || n.unregister(i);
  }
  ha(() => l()), Aa(() => u());
  const c = C(() => n.isSelected(i)), d = C(() => n.items.value[0].id === i), m = C(() => n.items.value[n.items.value.length - 1].id === i), v = C(() => c.value && [n.selectedClass.value, e.selectedClass]);
  return fe(c, (p) => {
    r.emit("group:selected", {
      value: p
    });
  }, {
    flush: "sync"
  }), {
    id: i,
    isSelected: c,
    isFirst: d,
    isLast: m,
    toggle: () => n.select(i, !c.value),
    select: (p) => n.select(i, p),
    selectedClass: v,
    value: s,
    disabled: o,
    group: n,
    register: l,
    unregister: u
  };
}
function Rr(e, t) {
  let a = !1;
  const r = jn([]), i = Ce(e, "modelValue", [], (m) => m === void 0 ? [] : kp(r, m === null ? [null] : ot(m)), (m) => {
    const v = IP(r, m);
    return e.multiple ? v : v[0];
  }), n = kt("useGroup");
  function s(m, v) {
    const p = m, h = Symbol.for(`${t.description}:id`), f = Gr(h, n == null ? void 0 : n.vnode).indexOf(v);
    H(p.value) === void 0 && (p.value = f, p.useIndexAsValue = !0), f > -1 ? r.splice(f, 0, p) : r.push(p);
  }
  function o(m) {
    if (a) return;
    l();
    const v = r.findIndex((p) => p.id === m);
    r.splice(v, 1);
  }
  function l() {
    const m = r.find((v) => !v.disabled);
    m && e.mandatory === "force" && !i.value.length && (i.value = [m.id]);
  }
  ha(() => {
    l();
  }), Aa(() => {
    a = !0;
  }), sy(() => {
    for (let m = 0; m < r.length; m++)
      r[m].useIndexAsValue && (r[m].value = m);
  });
  function u(m, v) {
    const p = r.find((h) => h.id === m);
    if (!(v && (p != null && p.disabled)))
      if (e.multiple) {
        const h = i.value.slice(), y = h.findIndex((g) => g === m), f = ~y;
        if (v = v ?? !f, f && e.mandatory && h.length <= 1 || !f && e.max != null && h.length + 1 > e.max) return;
        y < 0 && v ? h.push(m) : y >= 0 && !v && h.splice(y, 1), i.value = h;
      } else {
        const h = i.value.includes(m);
        if (e.mandatory && h || !h && !v) return;
        i.value = v ?? !h ? [m] : [];
      }
  }
  function c(m) {
    if (e.multiple && Ja('This method is not supported when using "multiple" prop'), i.value.length) {
      const v = i.value[0], p = r.findIndex((f) => f.id === v);
      let h = (p + m) % r.length, y = r[h];
      for (; y.disabled && h !== p; )
        h = (h + m) % r.length, y = r[h];
      if (y.disabled) return;
      i.value = [r[h].id];
    } else {
      const v = r.find((p) => !p.disabled);
      v && (i.value = [v.id]);
    }
  }
  const d = {
    register: s,
    unregister: o,
    selected: i,
    select: u,
    disabled: q(() => e.disabled),
    prev: () => c(r.length - 1),
    next: () => c(1),
    isSelected: (m) => i.value.includes(m),
    selectedClass: q(() => e.selectedClass),
    items: q(() => r),
    getItemIndex: (m) => VP(r, m)
  };
  return St(t, d), d;
}
function VP(e, t) {
  const a = kp(e, [t]);
  return a.length ? e.findIndex((r) => r.id === a[0]) : -1;
}
function kp(e, t) {
  const a = [];
  return t.forEach((r) => {
    const i = e.find((s) => Et(r, s.value)), n = e[r];
    (i == null ? void 0 : i.value) !== void 0 ? a.push(i.id) : n != null && n.useIndexAsValue && a.push(n.id);
  }), a;
}
function IP(e, t) {
  const a = [];
  return t.forEach((r) => {
    const i = e.findIndex((n) => n.id === r);
    if (~i) {
      const n = e[i];
      a.push(n.value !== void 0 ? n.value : i);
    }
  }), a;
}
const wp = Symbol.for("vuetify:v-btn-toggle"), OP = Z({
  ...bp(),
  ...Pi()
}, "VBtnToggle");
oe()({
  name: "VBtnToggle",
  props: OP(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      isSelected: r,
      next: i,
      prev: n,
      select: s,
      selected: o
    } = Rr(e, wp);
    return ce(() => {
      const l = xf.filterProps(e);
      return w(xf, ne({
        class: ["v-btn-toggle", e.class]
      }, l, {
        style: e.style
      }), {
        default: () => {
          var u;
          return [(u = a.default) == null ? void 0 : u.call(a, {
            isSelected: r,
            next: i,
            prev: n,
            select: s,
            selected: o
          })];
        }
      });
    }), {
      next: i,
      prev: n,
      select: s
    };
  }
});
const EP = ["x-small", "small", "default", "large", "x-large"], xi = Z({
  size: {
    type: [String, Number],
    default: "default"
  }
}, "size");
function Vi(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ka();
  return rc(() => {
    const a = e.size;
    let r, i;
    return bs(EP, a) ? r = `${t}--size-${a}` : a && (i = {
      width: ge(a),
      height: ge(a)
    }), {
      sizeClasses: r,
      sizeStyles: i
    };
  });
}
const AP = Z({
  color: String,
  disabled: Boolean,
  start: Boolean,
  end: Boolean,
  icon: xe,
  opacity: [String, Number],
  ..._e(),
  ...xi(),
  ...Ke({
    tag: "i"
  }),
  ...it()
}, "VIcon"), Ae = oe()({
  name: "VIcon",
  props: AP(),
  setup(e, t) {
    let {
      attrs: a,
      slots: r
    } = t;
    const i = me(), {
      themeClasses: n
    } = fc(), {
      iconData: s
    } = $P(() => i.value || e.icon), {
      sizeClasses: o
    } = Vi(e), {
      textColorClasses: l,
      textColorStyles: u
    } = Bt(() => e.color);
    return ce(() => {
      var m, v;
      const c = (m = r.default) == null ? void 0 : m.call(r);
      c && (i.value = (v = Uv(c).filter((p) => p.type === ly && p.children && typeof p.children == "string")[0]) == null ? void 0 : v.children);
      const d = !!(a.onClick || a.onClickOnce);
      return w(s.value.component, {
        tag: e.tag,
        icon: s.value.icon,
        class: te(["v-icon", "notranslate", n.value, o.value, l.value, {
          "v-icon--clickable": d,
          "v-icon--disabled": e.disabled,
          "v-icon--start": e.start,
          "v-icon--end": e.end
        }, e.class]),
        style: ye([{
          "--v-icon-opacity": e.opacity
        }, o.value ? void 0 : {
          fontSize: ge(e.size),
          height: ge(e.size),
          width: ge(e.size)
        }, u.value, e.style]),
        role: d ? "button" : void 0,
        "aria-hidden": !d,
        tabindex: d ? e.disabled ? -1 : 0 : void 0
      }, {
        default: () => [c]
      });
    }), {};
  }
});
function $p(e, t) {
  const a = ee(), r = me(!1);
  if (nc) {
    const i = new IntersectionObserver((n) => {
      r.value = !!n.find((s) => s.isIntersecting);
    }, t);
    It(() => {
      i.disconnect();
    }), fe(a, (n, s) => {
      s && (i.unobserve(s), r.value = !1), n && i.observe(n);
    }, {
      flush: "post"
    });
  }
  return {
    intersectionRef: a,
    isIntersecting: r
  };
}
const TP = Z({
  bgColor: String,
  color: String,
  indeterminate: [Boolean, String],
  modelValue: {
    type: [Number, String],
    default: 0
  },
  rotate: {
    type: [Number, String],
    default: 0
  },
  width: {
    type: [Number, String],
    default: 4
  },
  ..._e(),
  ...xi(),
  ...Ke({
    tag: "div"
  }),
  ...it()
}, "VProgressCircular"), Sp = oe()({
  name: "VProgressCircular",
  props: TP(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = 20, i = 2 * Math.PI * r, n = ee(), {
      themeClasses: s
    } = ht(e), {
      sizeClasses: o,
      sizeStyles: l
    } = Vi(e), {
      textColorClasses: u,
      textColorStyles: c
    } = Bt(() => e.color), {
      textColorClasses: d,
      textColorStyles: m
    } = Bt(() => e.bgColor), {
      intersectionRef: v,
      isIntersecting: p
    } = $p(), {
      resizeRef: h,
      contentRect: y
    } = Bn(), f = q(() => lt(parseFloat(e.modelValue), 0, 100)), g = q(() => Number(e.width)), P = q(() => l.value ? Number(e.size) : y.value ? y.value.width : Math.max(g.value, 32)), S = q(() => r / (1 - g.value / P.value) * 2), _ = q(() => g.value / P.value * S.value), j = q(() => ge((100 - f.value) / 100 * i));
    return At(() => {
      v.value = n.value, h.value = n.value;
    }), ce(() => w(e.tag, {
      ref: n,
      class: te(["v-progress-circular", {
        "v-progress-circular--indeterminate": !!e.indeterminate,
        "v-progress-circular--visible": p.value,
        "v-progress-circular--disable-shrink": e.indeterminate && (e.indeterminate === "disable-shrink" || Ln())
      }, s.value, o.value, u.value, e.class]),
      style: ye([l.value, c.value, e.style]),
      role: "progressbar",
      "aria-valuemin": "0",
      "aria-valuemax": "100",
      "aria-valuenow": e.indeterminate ? void 0 : f.value
    }, {
      default: () => [T("svg", {
        style: {
          transform: `rotate(calc(-90deg + ${Number(e.rotate)}deg))`
        },
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: `0 0 ${S.value} ${S.value}`
      }, [T("circle", {
        class: te(["v-progress-circular__underlay", d.value]),
        style: ye(m.value),
        fill: "transparent",
        cx: "50%",
        cy: "50%",
        r,
        "stroke-width": _.value,
        "stroke-dasharray": i,
        "stroke-dashoffset": 0
      }, null), T("circle", {
        class: "v-progress-circular__overlay",
        fill: "transparent",
        cx: "50%",
        cy: "50%",
        r,
        "stroke-width": _.value,
        "stroke-dasharray": i,
        "stroke-dashoffset": j.value
      }, null)]), a.default && T("div", {
        class: "v-progress-circular__content"
      }, [a.default({
        value: f.value
      })])]
    })), {};
  }
}), Vf = {
  center: "center",
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left"
}, Ii = Z({
  location: String
}, "location");
function Oi(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, a = arguments.length > 2 ? arguments[2] : void 0;
  const {
    isRtl: r
  } = jt();
  return {
    locationStyles: C(() => {
      if (!e.location) return {};
      const {
        side: n,
        align: s
      } = mo(e.location.split(" ").length > 1 ? e.location : `${e.location} center`, r.value);
      function o(u) {
        return a ? a(u) : 0;
      }
      const l = {};
      return n !== "center" && (t ? l[Vf[n]] = `calc(100% - ${o(n)}px)` : l[n] = 0), s !== "center" ? t ? l[Vf[s]] = `calc(100% - ${o(s)}px)` : l[s] = 0 : (n === "center" ? l.top = l.left = "50%" : l[{
        top: "left",
        bottom: "left",
        left: "top",
        right: "top"
      }[n]] = "50%", l.transform = {
        top: "translateX(-50%)",
        bottom: "translateX(-50%)",
        left: "translateY(-50%)",
        right: "translateY(-50%)",
        center: "translate(-50%, -50%)"
      }[n]), l;
    })
  };
}
const jP = Z({
  chunkCount: {
    type: [Number, String],
    default: null
  },
  chunkWidth: {
    type: [Number, String],
    default: null
  },
  chunkGap: {
    type: [Number, String],
    default: 4
  }
}, "chunks");
function MP(e, t) {
  const a = q(() => !!e.chunkCount || !!e.chunkWidth), r = C(() => {
    const o = Tt(t);
    if (!o)
      return 0;
    if (!e.chunkCount)
      return Number(e.chunkWidth);
    const l = Number(e.chunkCount);
    return (o - Number(e.chunkGap) * (l - 1)) / l;
  }), i = q(() => Number(e.chunkGap)), n = C(() => {
    if (!a.value)
      return {};
    const o = ge(i.value), l = ge(r.value);
    return {
      maskRepeat: "repeat-x",
      maskImage: `linear-gradient(90deg, #000, #000 ${l}, transparent ${l}, transparent)`,
      maskSize: `calc(${l} + ${o}) 100%`
    };
  });
  function s(o) {
    const l = Tt(t);
    if (!l)
      return o;
    const u = 100 * i.value / l, c = 100 * (r.value + i.value) / l, d = Math.floor((o + u) / c);
    return lt(0, d * c - u / 2, 100);
  }
  return {
    hasChunks: a,
    chunksMaskStyles: n,
    snapValueToChunk: s
  };
}
const DP = Z({
  absolute: Boolean,
  active: {
    type: Boolean,
    default: !0
  },
  bgColor: String,
  bgOpacity: [Number, String],
  bufferValue: {
    type: [Number, String],
    default: 0
  },
  bufferColor: String,
  bufferOpacity: [Number, String],
  clickable: Boolean,
  color: String,
  height: {
    type: [Number, String],
    default: 4
  },
  indeterminate: Boolean,
  max: {
    type: [Number, String],
    default: 100
  },
  modelValue: {
    type: [Number, String],
    default: 0
  },
  opacity: [Number, String],
  reverse: Boolean,
  stream: Boolean,
  striped: Boolean,
  roundedBar: Boolean,
  ...jP(),
  ..._e(),
  ...Ii({
    location: "top"
  }),
  ...Kt(),
  ...Ke(),
  ...it()
}, "VProgressLinear"), RP = oe()({
  name: "VProgressLinear",
  props: DP(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = ee(), i = Ce(e, "modelValue"), {
      isRtl: n,
      rtlClasses: s
    } = jt(), {
      themeClasses: o
    } = ht(e), {
      locationStyles: l
    } = Oi(e), {
      textColorClasses: u,
      textColorStyles: c
    } = Bt(() => e.color), {
      backgroundColorClasses: d,
      backgroundColorStyles: m
    } = pt(() => e.bgColor || e.color), {
      backgroundColorClasses: v,
      backgroundColorStyles: p
    } = pt(() => e.bufferColor || e.bgColor || e.color), {
      backgroundColorClasses: h,
      backgroundColorStyles: y
    } = pt(() => e.color), {
      roundedClasses: f
    } = Ht(e), {
      intersectionRef: g,
      isIntersecting: P
    } = $p(), S = C(() => parseFloat(e.max)), _ = C(() => parseFloat(e.height)), j = C(() => lt(parseFloat(e.bufferValue) / S.value * 100, 0, 100)), F = C(() => lt(parseFloat(i.value) / S.value * 100, 0, 100)), R = C(() => n.value !== e.reverse), U = C(() => e.indeterminate ? "fade-transition" : "slide-x-transition"), W = me(0), {
      hasChunks: D,
      chunksMaskStyles: O,
      snapValueToChunk: B
    } = MP(e, W);
    pn(D, () => {
      const {
        resizeRef: ae
      } = Bn((X) => W.value = X[0].contentRect.width);
      At(() => ae.value = r.value);
    });
    const N = C(() => D.value ? B(j.value) : j.value), z = C(() => D.value ? B(F.value) : F.value);
    function J(ae) {
      if (!g.value) return;
      const {
        left: X,
        right: L,
        width: A
      } = g.value.getBoundingClientRect(), x = R.value ? A - ae.clientX + (L - A) : ae.clientX - X;
      i.value = Math.round(x / A * S.value);
    }
    return At(() => {
      g.value = r.value;
    }), ce(() => w(e.tag, {
      ref: r,
      class: te(["v-progress-linear", {
        "v-progress-linear--absolute": e.absolute,
        "v-progress-linear--active": e.active && P.value,
        "v-progress-linear--reverse": R.value,
        "v-progress-linear--rounded": e.rounded,
        "v-progress-linear--rounded-bar": e.roundedBar,
        "v-progress-linear--striped": e.striped,
        "v-progress-linear--clickable": e.clickable
      }, f.value, o.value, s.value, e.class]),
      style: ye([{
        bottom: e.location === "bottom" ? 0 : void 0,
        top: e.location === "top" ? 0 : void 0,
        height: e.active ? ge(_.value) : 0,
        "--v-progress-linear-height": ge(_.value),
        ...e.absolute ? l.value : {}
      }, O.value, e.style]),
      role: "progressbar",
      "aria-hidden": e.active ? "false" : "true",
      "aria-valuemin": "0",
      "aria-valuemax": e.max,
      "aria-valuenow": e.indeterminate ? void 0 : Math.min(parseFloat(i.value), S.value),
      onClick: e.clickable && J
    }, {
      default: () => [e.stream && T("div", {
        key: "stream",
        class: te(["v-progress-linear__stream", u.value]),
        style: {
          ...c.value,
          [R.value ? "left" : "right"]: ge(-_.value),
          borderTop: `${ge(_.value / 2)} dotted`,
          opacity: parseFloat(e.bufferOpacity),
          top: `calc(50% - ${ge(_.value / 4)})`,
          width: ge(100 - j.value, "%"),
          "--v-progress-linear-stream-to": ge(_.value * (R.value ? 1 : -1))
        }
      }, null), T("div", {
        class: te(["v-progress-linear__background", d.value]),
        style: ye([m.value, {
          opacity: parseFloat(e.bgOpacity),
          width: e.stream ? 0 : void 0
        }])
      }, null), T("div", {
        class: te(["v-progress-linear__buffer", v.value]),
        style: ye([p.value, {
          opacity: parseFloat(e.bufferOpacity),
          width: ge(N.value, "%")
        }])
      }, null), w(Mn, {
        name: U.value
      }, {
        default: () => [e.indeterminate ? T("div", {
          class: "v-progress-linear__indeterminate"
        }, [["long", "short"].map((ae) => T("div", {
          key: ae,
          class: te(["v-progress-linear__indeterminate", ae, h.value]),
          style: ye(y.value)
        }, null))]) : T("div", {
          class: te(["v-progress-linear__determinate", h.value]),
          style: ye([y.value, {
            width: ge(z.value, "%")
          }])
        }, null)]
      }), a.default && T("div", {
        class: "v-progress-linear__content"
      }, [a.default({
        value: F.value,
        buffer: j.value
      })])]
    })), {};
  }
}), vc = Z({
  loading: [Boolean, String]
}, "loader");
function Js(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ka();
  return {
    loaderClasses: q(() => ({
      [`${t}--loading`]: e.loading
    }))
  };
}
function pc(e, t) {
  var r;
  let {
    slots: a
  } = t;
  return T("div", {
    class: te(`${e.name}__loader`)
  }, [((r = a.default) == null ? void 0 : r.call(a, {
    color: e.color,
    isActive: e.active
  })) || w(RP, {
    absolute: e.absolute,
    active: e.active,
    color: e.color,
    height: "2",
    indeterminate: !0
  }, null)]);
}
const NP = ["static", "relative", "fixed", "absolute", "sticky"], Qs = Z({
  position: {
    type: String,
    validator: (
      /* istanbul ignore next */
      (e) => NP.includes(e)
    )
  }
}, "position");
function el(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ka();
  return {
    positionClasses: q(() => e.position ? `${t}--${e.position}` : void 0)
  };
}
function zP() {
  const e = kt("useRoute");
  return C(() => {
    var t;
    return (t = e == null ? void 0 : e.proxy) == null ? void 0 : t.$route;
  });
}
function LP() {
  var e, t;
  return (t = (e = kt("useRouter")) == null ? void 0 : e.proxy) == null ? void 0 : t.$router;
}
function tl(e, t) {
  var d, m;
  const a = zo("RouterLink"), r = q(() => !!(e.href || e.to)), i = C(() => (r == null ? void 0 : r.value) || sf(t, "click") || sf(e, "click"));
  if (typeof a == "string" || !("useLink" in a)) {
    const v = q(() => e.href);
    return {
      isLink: r,
      isRouterLink: q(() => !1),
      isClickable: i,
      href: v,
      linkProps: jn({
        href: v
      })
    };
  }
  const n = a.useLink({
    to: q(() => e.to || ""),
    replace: q(() => e.replace)
  }), s = C(() => e.to ? n : void 0), o = zP(), l = C(() => {
    var v, p, h;
    return s.value ? e.exact ? o.value ? ((h = s.value.isExactActive) == null ? void 0 : h.value) && Et(s.value.route.value.query, o.value.query) : ((p = s.value.isExactActive) == null ? void 0 : p.value) ?? !1 : ((v = s.value.isActive) == null ? void 0 : v.value) ?? !1 : !1;
  }), u = C(() => {
    var v;
    return e.to ? (v = s.value) == null ? void 0 : v.route.value.href : e.href;
  }), c = q(() => !!e.to);
  return {
    isLink: r,
    isRouterLink: c,
    isClickable: i,
    isActive: l,
    route: (d = s.value) == null ? void 0 : d.route,
    navigate: (m = s.value) == null ? void 0 : m.navigate,
    href: u,
    linkProps: jn({
      href: u,
      "aria-current": q(() => l.value ? "page" : void 0),
      "aria-disabled": q(() => e.disabled && r.value ? "true" : void 0),
      tabindex: q(() => e.disabled && r.value ? "-1" : void 0)
    })
  };
}
const al = Z({
  href: String,
  replace: Boolean,
  to: [String, Object],
  exact: Boolean
}, "router");
let Il = !1;
function BP(e, t) {
  let a = !1, r, i;
  rt && (e != null && e.beforeEach) && (qe(() => {
    window.addEventListener("popstate", n), r = e.beforeEach((s, o, l) => {
      Il ? a ? t(l) : l() : setTimeout(() => a ? t(l) : l()), Il = !0;
    }), i = e == null ? void 0 : e.afterEach(() => {
      Il = !1;
    });
  }), It(() => {
    window.removeEventListener("popstate", n), r == null || r(), i == null || i();
  }));
  function n(s) {
    var o;
    (o = s.state) != null && o.replaced || (a = !0, setTimeout(() => a = !1));
  }
}
function FP(e, t) {
  fe(() => {
    var a;
    return (a = e.isActive) == null ? void 0 : a.value;
  }, (a) => {
    e.isLink.value && a != null && t && qe(() => {
      t(a);
    });
  }, {
    immediate: !0
  });
}
const go = Symbol("rippleStop"), qP = 80;
function If(e, t) {
  e.style.transform = t, e.style.webkitTransform = t;
}
function bo(e) {
  return e.constructor.name === "TouchEvent";
}
function _p(e) {
  return e.constructor.name === "KeyboardEvent";
}
const KP = function(e, t) {
  var d;
  let a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, r = 0, i = 0;
  if (!_p(e)) {
    const m = t.getBoundingClientRect(), v = bo(e) ? e.touches[e.touches.length - 1] : e;
    r = v.clientX - m.left, i = v.clientY - m.top;
  }
  let n = 0, s = 0.3;
  (d = t._ripple) != null && d.circle ? (s = 0.15, n = t.clientWidth / 2, n = a.center ? n : n + Math.sqrt((r - n) ** 2 + (i - n) ** 2) / 4) : n = Math.sqrt(t.clientWidth ** 2 + t.clientHeight ** 2) / 2;
  const o = `${(t.clientWidth - n * 2) / 2}px`, l = `${(t.clientHeight - n * 2) / 2}px`, u = a.center ? o : `${r - n}px`, c = a.center ? l : `${i - n}px`;
  return {
    radius: n,
    scale: s,
    x: u,
    y: c,
    centerX: o,
    centerY: l
  };
}, Ps = {
  /* eslint-disable max-statements */
  show(e, t) {
    var v;
    let a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    if (!((v = t == null ? void 0 : t._ripple) != null && v.enabled))
      return;
    const r = document.createElement("span"), i = document.createElement("span");
    r.appendChild(i), r.className = "v-ripple__container", a.class && (r.className += ` ${a.class}`);
    const {
      radius: n,
      scale: s,
      x: o,
      y: l,
      centerX: u,
      centerY: c
    } = KP(e, t, a), d = `${n * 2}px`;
    i.className = "v-ripple__animation", i.style.width = d, i.style.height = d, t.appendChild(r);
    const m = window.getComputedStyle(t);
    m && m.position === "static" && (t.style.position = "relative", t.dataset.previousPosition = "static"), i.classList.add("v-ripple__animation--enter"), i.classList.add("v-ripple__animation--visible"), If(i, `translate(${o}, ${l}) scale3d(${s},${s},${s})`), i.dataset.activated = String(performance.now()), requestAnimationFrame(() => {
      requestAnimationFrame(() => {
        i.classList.remove("v-ripple__animation--enter"), i.classList.add("v-ripple__animation--in"), If(i, `translate(${u}, ${c}) scale3d(1,1,1)`);
      });
    });
  },
  hide(e) {
    var n;
    if (!((n = e == null ? void 0 : e._ripple) != null && n.enabled)) return;
    const t = e.getElementsByClassName("v-ripple__animation");
    if (t.length === 0) return;
    const a = Array.from(t).findLast((s) => !s.dataset.isHiding);
    if (a) a.dataset.isHiding = "true";
    else return;
    const r = performance.now() - Number(a.dataset.activated), i = Math.max(250 - r, 0);
    setTimeout(() => {
      a.classList.remove("v-ripple__animation--in"), a.classList.add("v-ripple__animation--out"), setTimeout(() => {
        var o;
        e.getElementsByClassName("v-ripple__animation").length === 1 && e.dataset.previousPosition && (e.style.position = e.dataset.previousPosition, delete e.dataset.previousPosition), ((o = a.parentNode) == null ? void 0 : o.parentNode) === e && e.removeChild(a.parentNode);
      }, 300);
    }, i);
  }
};
function Pp(e) {
  return typeof e > "u" || !!e;
}
function di(e) {
  const t = {}, a = e.currentTarget;
  if (!(!(a != null && a._ripple) || a._ripple.touched || e[go])) {
    if (e[go] = !0, bo(e))
      a._ripple.touched = !0, a._ripple.isTouch = !0;
    else if (a._ripple.isTouch) return;
    if (t.center = a._ripple.centered || _p(e), a._ripple.class && (t.class = a._ripple.class), bo(e)) {
      if (a._ripple.showTimerCommit) return;
      a._ripple.showTimerCommit = () => {
        Ps.show(e, a, t);
      }, a._ripple.showTimer = window.setTimeout(() => {
        var r;
        (r = a == null ? void 0 : a._ripple) != null && r.showTimerCommit && (a._ripple.showTimerCommit(), a._ripple.showTimerCommit = null);
      }, qP);
    } else
      Ps.show(e, a, t);
  }
}
function Of(e) {
  e[go] = !0;
}
function na(e) {
  const t = e.currentTarget;
  if (t != null && t._ripple) {
    if (window.clearTimeout(t._ripple.showTimer), e.type === "touchend" && t._ripple.showTimerCommit) {
      t._ripple.showTimerCommit(), t._ripple.showTimerCommit = null, t._ripple.showTimer = window.setTimeout(() => {
        na(e);
      });
      return;
    }
    window.setTimeout(() => {
      t._ripple && (t._ripple.touched = !1);
    }), Ps.hide(t);
  }
}
function Cp(e) {
  const t = e.currentTarget;
  t != null && t._ripple && (t._ripple.showTimerCommit && (t._ripple.showTimerCommit = null), window.clearTimeout(t._ripple.showTimer));
}
let fi = !1;
function Ef(e, t) {
  !fi && t.includes(e.key) && (fi = !0, di(e));
}
function xp(e) {
  fi = !1, na(e);
}
function Vp(e) {
  fi && (fi = !1, na(e));
}
function Ip(e, t, a) {
  const {
    value: r,
    modifiers: i
  } = t, n = Pp(r);
  n || Ps.hide(e), e._ripple = e._ripple ?? {}, e._ripple.enabled = n, e._ripple.centered = i.center, e._ripple.circle = i.circle;
  const s = gs(r) ? r : {};
  s.class && (e._ripple.class = s.class);
  const o = s.keys ?? ["Enter", "Space"];
  if (e._ripple.keyDownHandler = (l) => Ef(l, o), n && !a) {
    if (i.stop) {
      e.addEventListener("touchstart", Of, {
        passive: !0
      }), e.addEventListener("mousedown", Of);
      return;
    }
    e.addEventListener("touchstart", di, {
      passive: !0
    }), e.addEventListener("touchend", na, {
      passive: !0
    }), e.addEventListener("touchmove", Cp, {
      passive: !0
    }), e.addEventListener("touchcancel", na), e.addEventListener("mousedown", di), e.addEventListener("mouseup", na), e.addEventListener("mouseleave", na), e.addEventListener("keydown", (l) => Ef(l, o)), e.addEventListener("keyup", xp), e.addEventListener("blur", Vp), e.addEventListener("dragstart", na, {
      passive: !0
    });
  } else !n && a && Op(e);
}
function Op(e) {
  var t;
  e.removeEventListener("mousedown", di), e.removeEventListener("touchstart", di), e.removeEventListener("touchend", na), e.removeEventListener("touchmove", Cp), e.removeEventListener("touchcancel", na), e.removeEventListener("mouseup", na), e.removeEventListener("mouseleave", na), (t = e._ripple) != null && t.keyDownHandler && e.removeEventListener("keydown", e._ripple.keyDownHandler), e.removeEventListener("keyup", xp), e.removeEventListener("dragstart", na), e.removeEventListener("blur", Vp);
}
function HP(e, t) {
  Ip(e, t, !1);
}
function UP(e) {
  Op(e), delete e._ripple;
}
function WP(e, t) {
  if (t.value === t.oldValue)
    return;
  const a = Pp(t.oldValue);
  Ip(e, t, a);
}
const Ft = {
  mounted: HP,
  unmounted: UP,
  updated: WP
}, Ep = Z({
  active: {
    type: Boolean,
    default: void 0
  },
  activeColor: String,
  baseColor: String,
  symbol: {
    type: null,
    default: wp
  },
  flat: Boolean,
  icon: [Boolean, String, Function, Object],
  prependIcon: xe,
  appendIcon: xe,
  block: Boolean,
  readonly: Boolean,
  slim: Boolean,
  stacked: Boolean,
  spaced: String,
  ripple: {
    type: [Boolean, Object],
    default: !0
  },
  text: {
    type: [String, Number, Boolean],
    default: void 0
  },
  ...sn(),
  ..._e(),
  ...ga(),
  ...la(),
  ...ba(),
  ...Ci(),
  ...vc(),
  ...Ii(),
  ...Qs(),
  ...Kt(),
  ...al(),
  ...xi(),
  ...Ke({
    tag: "button"
  }),
  ...it(),
  ...on({
    variant: "elevated"
  })
}, "VBtn"), Be = oe()({
  name: "VBtn",
  props: Ep(),
  emits: {
    "group:selected": (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      slots: r
    } = t;
    const {
      themeClasses: i
    } = ht(e), {
      borderClasses: n
    } = ln(e), {
      densityClasses: s
    } = ja(e), {
      dimensionStyles: o
    } = oa(e), {
      elevationClasses: l
    } = ka(e), {
      loaderClasses: u
    } = Js(e), {
      locationStyles: c
    } = Oi(e), {
      positionClasses: d
    } = el(e), {
      roundedClasses: m
    } = Ht(e), {
      sizeClasses: v,
      sizeStyles: p
    } = Vi(e), h = wr(e, e.symbol, !1), y = tl(e, a), f = C(() => {
      var D;
      return e.active !== void 0 ? e.active : y.isRouterLink.value ? (D = y.isActive) == null ? void 0 : D.value : h == null ? void 0 : h.isSelected.value;
    }), g = q(() => f.value ? e.activeColor ?? e.color : e.color), P = C(() => {
      var O, B;
      return {
        color: (h == null ? void 0 : h.isSelected.value) && (!y.isLink.value || ((O = y.isActive) == null ? void 0 : O.value)) || !h || ((B = y.isActive) == null ? void 0 : B.value) ? g.value ?? e.baseColor : e.baseColor,
        variant: e.variant
      };
    }), {
      colorClasses: S,
      colorStyles: _,
      variantClasses: j
    } = Dr(P), F = C(() => (h == null ? void 0 : h.disabled.value) || e.disabled), R = q(() => e.variant === "elevated" && !(e.disabled || e.flat || e.border)), U = C(() => {
      if (!(e.value === void 0 || typeof e.value == "symbol"))
        return Object(e.value) === e.value ? JSON.stringify(e.value, null, 0) : e.value;
    });
    function W(D) {
      var O;
      F.value || y.isLink.value && (D.metaKey || D.ctrlKey || D.shiftKey || D.button !== 0 || a.target === "_blank") || (y.isRouterLink.value ? (O = y.navigate) == null || O.call(y, D) : h == null || h.toggle());
    }
    return FP(y, h == null ? void 0 : h.select), ce(() => {
      const D = y.isLink.value ? "a" : e.tag, O = !!(e.prependIcon || r.prepend), B = !!(e.appendIcon || r.append), N = !!(e.icon && e.icon !== !0);
      return nt(w(D, ne(y.linkProps, {
        type: D === "a" ? void 0 : "button",
        class: ["v-btn", h == null ? void 0 : h.selectedClass.value, {
          "v-btn--active": f.value,
          "v-btn--block": e.block,
          "v-btn--disabled": F.value,
          "v-btn--elevated": R.value,
          "v-btn--flat": e.flat,
          "v-btn--icon": !!e.icon,
          "v-btn--loading": e.loading,
          "v-btn--readonly": e.readonly,
          "v-btn--slim": e.slim,
          "v-btn--stacked": e.stacked
        }, e.spaced ? ["v-btn--spaced", `v-btn--spaced-${e.spaced}`] : [], i.value, n.value, S.value, s.value, l.value, u.value, d.value, m.value, v.value, j.value, e.class],
        style: [_.value, o.value, c.value, p.value, e.style],
        "aria-busy": e.loading ? !0 : void 0,
        disabled: F.value && D !== "a" || void 0,
        tabindex: e.loading || e.readonly ? -1 : void 0,
        onClick: W,
        value: U.value
      }), {
        default: () => {
          var z;
          return [Yn(!0, "v-btn"), !e.icon && O && T("span", {
            key: "prepend",
            class: "v-btn__prepend"
          }, [r.prepend ? w(ze, {
            key: "prepend-defaults",
            disabled: !e.prependIcon,
            defaults: {
              VIcon: {
                icon: e.prependIcon
              }
            }
          }, r.prepend) : w(Ae, {
            key: "prepend-icon",
            icon: e.prependIcon
          }, null)]), T("span", {
            class: "v-btn__content",
            "data-no-activator": ""
          }, [!r.default && N ? w(Ae, {
            key: "content-icon",
            icon: e.icon
          }, null) : w(ze, {
            key: "content-defaults",
            disabled: !N,
            defaults: {
              VIcon: {
                icon: e.icon
              }
            }
          }, {
            default: () => {
              var J;
              return [((J = r.default) == null ? void 0 : J.call(r)) ?? Xe(e.text)];
            }
          })]), !e.icon && B && T("span", {
            key: "append",
            class: "v-btn__append"
          }, [r.append ? w(ze, {
            key: "append-defaults",
            disabled: !e.appendIcon,
            defaults: {
              VIcon: {
                icon: e.appendIcon
              }
            }
          }, r.append) : w(Ae, {
            key: "append-icon",
            icon: e.appendIcon
          }, null)]), !!e.loading && T("span", {
            key: "loader",
            class: "v-btn__loader"
          }, [((z = r.loader) == null ? void 0 : z.call(r)) ?? w(Sp, {
            color: typeof e.loading == "boolean" ? void 0 : e.loading,
            indeterminate: !0,
            width: "2"
          }, null)])];
        }
      }), [[Ft, !F.value && e.ripple, "", {
        center: !!e.icon
      }]]);
    }), {
      group: h
    };
  }
}), GP = Z({
  iconSize: [Number, String],
  iconSizes: {
    type: Array,
    default: () => [["x-small", 10], ["small", 16], ["default", 24], ["large", 28], ["x-large", 32]]
  }
}, "iconSize");
function YP(e, t) {
  return {
    iconSize: C(() => {
      const r = new Map(e.iconSizes), i = e.iconSize ?? t() ?? "default";
      return r.has(i) ? r.get(i) : i;
    })
  };
}
const XP = ["success", "info", "warning", "error"], ZP = Z({
  border: {
    type: [Boolean, String],
    validator: (e) => typeof e == "boolean" || ["top", "end", "bottom", "start"].includes(e)
  },
  borderColor: String,
  closable: Boolean,
  closeIcon: {
    type: xe,
    default: "$close"
  },
  closeLabel: {
    type: String,
    default: "$vuetify.close"
  },
  icon: {
    type: [Boolean, String, Function, Object],
    default: null
  },
  modelValue: {
    type: Boolean,
    default: !0
  },
  prominent: Boolean,
  title: String,
  text: String,
  type: {
    type: String,
    validator: (e) => XP.includes(e)
  },
  ..._e(),
  ...ga(),
  ...la(),
  ...ba(),
  ...GP(),
  ...Ii(),
  ...Qs(),
  ...Kt(),
  ...Ke(),
  ...it(),
  ...on({
    variant: "flat"
  })
}, "VAlert"), Ap = oe()({
  name: "VAlert",
  props: ZP(),
  emits: {
    "click:close": (e) => !0,
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      emit: a,
      slots: r
    } = t;
    const i = Ce(e, "modelValue"), n = q(() => {
      if (e.icon !== !1)
        return e.type ? e.icon ?? `$${e.type}` : e.icon;
    }), {
      iconSize: s
    } = YP(e, () => e.prominent ? 44 : void 0), {
      themeClasses: o
    } = ht(e), {
      colorClasses: l,
      colorStyles: u,
      variantClasses: c
    } = Dr(() => ({
      color: e.color ?? e.type,
      variant: e.variant
    })), {
      densityClasses: d
    } = ja(e), {
      dimensionStyles: m
    } = oa(e), {
      elevationClasses: v
    } = ka(e), {
      locationStyles: p
    } = Oi(e), {
      positionClasses: h
    } = el(e), {
      roundedClasses: y
    } = Ht(e), {
      textColorClasses: f,
      textColorStyles: g
    } = Bt(() => e.borderColor), {
      t: P
    } = dt(), S = q(() => ({
      "aria-label": P(e.closeLabel),
      onClick(_) {
        i.value = !1, a("click:close", _);
      }
    }));
    return () => {
      const _ = !!(r.prepend || n.value), j = !!(r.title || e.title), F = !!(r.close || e.closable), R = {
        density: e.density,
        icon: n.value,
        size: e.iconSize || e.prominent ? s.value : void 0
      };
      return i.value && w(e.tag, {
        class: te(["v-alert", e.border && {
          "v-alert--border": !!e.border,
          [`v-alert--border-${e.border === !0 ? "start" : e.border}`]: !0
        }, {
          "v-alert--prominent": e.prominent
        }, o.value, l.value, d.value, v.value, h.value, y.value, c.value, e.class]),
        style: ye([u.value, m.value, p.value, e.style]),
        role: "alert"
      }, {
        default: () => {
          var U, W;
          return [Yn(!1, "v-alert"), e.border && T("div", {
            key: "border",
            class: te(["v-alert__border", f.value]),
            style: ye(g.value)
          }, null), _ && T("div", {
            key: "prepend",
            class: "v-alert__prepend"
          }, [r.prepend ? w(ze, {
            key: "prepend-defaults",
            disabled: !n.value,
            defaults: {
              VIcon: {
                ...R
              }
            }
          }, r.prepend) : w(Ae, ne({
            key: "prepend-icon"
          }, R), null)]), T("div", {
            class: "v-alert__content"
          }, [j && w(_P, {
            key: "title"
          }, {
            default: () => {
              var D;
              return [((D = r.title) == null ? void 0 : D.call(r)) ?? e.title];
            }
          }), ((U = r.text) == null ? void 0 : U.call(r)) ?? e.text, (W = r.default) == null ? void 0 : W.call(r)]), r.append && T("div", {
            key: "append",
            class: "v-alert__append"
          }, [r.append()]), F && T("div", {
            key: "close",
            class: "v-alert__close"
          }, [r.close ? w(ze, {
            key: "close-defaults",
            defaults: {
              VBtn: {
                icon: e.closeIcon,
                size: "x-small",
                variant: "text"
              }
            }
          }, {
            default: () => {
              var D;
              return [(D = r.close) == null ? void 0 : D.call(r, {
                props: S.value
              })];
            }
          }) : w(Be, ne({
            key: "close-btn",
            icon: e.closeIcon,
            size: "x-small",
            variant: "text"
          }, S.value), null)])];
        }
      });
    };
  }
}), JP = Z({
  disabled: Boolean,
  group: Boolean,
  hideOnLeave: Boolean,
  leaveAbsolute: Boolean,
  mode: String,
  origin: String
}, "transition");
function ua(e, t, a) {
  return oe()({
    name: e,
    props: JP({
      mode: a,
      origin: t
    }),
    setup(r, i) {
      let {
        slots: n
      } = i;
      const s = {
        onBeforeEnter(o) {
          r.origin && (o.style.transformOrigin = r.origin);
        },
        onLeave(o) {
          if (r.leaveAbsolute) {
            const {
              offsetTop: l,
              offsetLeft: u,
              offsetWidth: c,
              offsetHeight: d
            } = o;
            o._transitionInitialStyles = {
              position: o.style.position,
              top: o.style.top,
              left: o.style.left,
              width: o.style.width,
              height: o.style.height
            }, o.style.position = "absolute", o.style.top = `${l}px`, o.style.left = `${u}px`, o.style.width = `${c}px`, o.style.height = `${d}px`;
          }
          r.hideOnLeave && o.style.setProperty("display", "none", "important");
        },
        onAfterLeave(o) {
          if (r.leaveAbsolute && (o != null && o._transitionInitialStyles)) {
            const {
              position: l,
              top: u,
              left: c,
              width: d,
              height: m
            } = o._transitionInitialStyles;
            delete o._transitionInitialStyles, o.style.position = l || "", o.style.top = u || "", o.style.left = c || "", o.style.width = d || "", o.style.height = m || "";
          }
        }
      };
      return () => {
        const o = r.group ? Lo : Mn;
        return De(o, {
          name: r.disabled ? "" : e,
          css: !r.disabled,
          ...r.group ? void 0 : {
            mode: r.mode
          },
          ...r.disabled ? {} : s
        }, n.default);
      };
    }
  });
}
function Tp(e, t) {
  let a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "in-out";
  return oe()({
    name: e,
    props: {
      mode: {
        type: String,
        default: a
      },
      disabled: {
        type: Boolean,
        default: Ln()
      },
      group: Boolean
    },
    setup(r, i) {
      let {
        slots: n
      } = i;
      const s = r.group ? Lo : Mn;
      return () => De(s, {
        name: r.disabled ? "" : e,
        css: !r.disabled,
        // mode: props.mode, // TODO: vuejs/vue-next#3104
        ...r.disabled ? {} : t
      }, n.default);
    }
  });
}
function jp() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  const a = (arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1) ? "width" : "height", r = Is(`offset-${a}`);
  return {
    onBeforeEnter(s) {
      s._parent = s.parentNode, s._initialStyle = {
        transition: s.style.transition,
        overflow: s.style.overflow,
        [a]: s.style[a]
      };
    },
    onEnter(s) {
      const o = s._initialStyle;
      if (!o) return;
      s.style.setProperty("transition", "none", "important"), s.style.overflow = "hidden";
      const l = `${s[r]}px`;
      s.style[a] = "0", s.offsetHeight, s.style.transition = o.transition, e && s._parent && s._parent.classList.add(e), requestAnimationFrame(() => {
        s.style[a] = l;
      });
    },
    onAfterEnter: n,
    onEnterCancelled: n,
    onLeave(s) {
      s._initialStyle = {
        transition: "",
        overflow: s.style.overflow,
        [a]: s.style[a]
      }, s.style.overflow = "hidden", s.style[a] = `${s[r]}px`, s.offsetHeight, requestAnimationFrame(() => s.style[a] = "0");
    },
    onAfterLeave: i,
    onLeaveCancelled: i
  };
  function i(s) {
    e && s._parent && s._parent.classList.remove(e), n(s);
  }
  function n(s) {
    if (!s._initialStyle) return;
    const o = s._initialStyle[a];
    s.style.overflow = s._initialStyle.overflow, o != null && (s.style[a] = o), delete s._initialStyle;
  }
}
const QP = Z({
  target: [Object, Array]
}, "v-dialog-transition"), Ol = /* @__PURE__ */ new WeakMap(), hc = oe()({
  name: "VDialogTransition",
  props: QP(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = {
      onBeforeEnter(i) {
        i.style.pointerEvents = "none", i.style.visibility = "hidden";
      },
      async onEnter(i, n) {
        var m;
        await new Promise((v) => requestAnimationFrame(v)), await new Promise((v) => requestAnimationFrame(v)), i.style.visibility = "";
        const s = Tf(e.target, i), {
          x: o,
          y: l,
          sx: u,
          sy: c,
          speed: d
        } = s;
        if (Ol.set(i, s), Ln())
          Wa(i, [{
            opacity: 0
          }, {}], {
            duration: 125 * d,
            easing: kf
          }).finished.then(() => n());
        else {
          const v = Wa(i, [{
            transform: `translate(${o}px, ${l}px) scale(${u}, ${c})`,
            opacity: 0
          }, {}], {
            duration: 225 * d,
            easing: kf
          });
          (m = Af(i)) == null || m.forEach((p) => {
            Wa(p, [{
              opacity: 0
            }, {
              opacity: 0,
              offset: 0.33
            }, {}], {
              duration: 225 * 2 * d,
              easing: ci
            });
          }), v.finished.then(() => n());
        }
      },
      onAfterEnter(i) {
        i.style.removeProperty("pointer-events");
      },
      onBeforeLeave(i) {
        i.style.pointerEvents = "none";
      },
      async onLeave(i, n) {
        var m;
        await new Promise((v) => requestAnimationFrame(v));
        let s;
        !Ol.has(i) || Array.isArray(e.target) || e.target.offsetParent || e.target.getClientRects().length ? s = Tf(e.target, i) : s = Ol.get(i);
        const {
          x: o,
          y: l,
          sx: u,
          sy: c,
          speed: d
        } = s;
        Ln() ? Wa(i, [{}, {
          opacity: 0
        }], {
          duration: 85 * d,
          easing: wf
        }).finished.then(() => n()) : (Wa(i, [{}, {
          transform: `translate(${o}px, ${l}px) scale(${u}, ${c})`,
          opacity: 0
        }], {
          duration: 125 * d,
          easing: wf
        }).finished.then(() => n()), (m = Af(i)) == null || m.forEach((p) => {
          Wa(p, [{}, {
            opacity: 0,
            offset: 0.2
          }, {
            opacity: 0
          }], {
            duration: 125 * 2 * d,
            easing: ci
          });
        }));
      },
      onAfterLeave(i) {
        i.style.removeProperty("pointer-events");
      }
    };
    return () => e.target ? w(Mn, ne({
      name: "dialog-transition"
    }, r, {
      css: !1
    }), a) : w(Mn, {
      name: "dialog-transition"
    }, a);
  }
});
function Af(e) {
  var a;
  const t = (a = e.querySelector(":scope > .v-card, :scope > .v-sheet, :scope > .v-list")) == null ? void 0 : a.children;
  return t && [...t];
}
function Tf(e, t) {
  const a = Zv(e), r = ic(t), [i, n] = getComputedStyle(t).transformOrigin.split(" ").map((f) => parseFloat(f)), [s, o] = getComputedStyle(t).getPropertyValue("--v-overlay-anchor-origin").split(" ");
  let l = a.left + a.width / 2;
  s === "left" || o === "left" ? l -= a.width / 2 : (s === "right" || o === "right") && (l += a.width / 2);
  let u = a.top + a.height / 2;
  s === "top" || o === "top" ? u -= a.height / 2 : (s === "bottom" || o === "bottom") && (u += a.height / 2);
  const c = a.width / r.width, d = a.height / r.height, m = Math.max(1, c, d), v = c / m || 0, p = d / m || 0, h = r.width * r.height / (window.innerWidth * window.innerHeight), y = h > 0.12 ? Math.min(1.5, (h - 0.12) * 10 + 1) : 1;
  return {
    x: l - (i + r.left),
    y: u - (n + r.top),
    sx: v,
    sy: p,
    speed: y
  };
}
ua("fab-transition", "center center", "out-in");
ua("dialog-bottom-transition");
ua("dialog-top-transition");
const ko = ua("fade-transition"), Mp = ua("scale-transition");
ua("scroll-x-transition");
ua("scroll-x-reverse-transition");
ua("scroll-y-transition");
ua("scroll-y-reverse-transition");
ua("slide-x-transition");
ua("slide-x-reverse-transition");
const Dp = ua("slide-y-transition");
ua("slide-y-reverse-transition");
const yc = Tp("expand-transition", jp()), Rp = Tp("expand-x-transition", jp("", !0));
function El(e, t) {
  return {
    x: e.x + t.x,
    y: e.y + t.y
  };
}
function eC(e, t) {
  return {
    x: e.x - t.x,
    y: e.y - t.y
  };
}
function jf(e, t) {
  if (e.side === "top" || e.side === "bottom") {
    const {
      side: a,
      align: r
    } = e, i = r === "left" ? 0 : r === "center" ? t.width / 2 : r === "right" ? t.width : r, n = a === "top" ? 0 : a === "bottom" ? t.height : a;
    return El({
      x: i,
      y: n
    }, t);
  } else if (e.side === "left" || e.side === "right") {
    const {
      side: a,
      align: r
    } = e, i = a === "left" ? 0 : a === "right" ? t.width : a, n = r === "top" ? 0 : r === "center" ? t.height / 2 : r === "bottom" ? t.height : r;
    return El({
      x: i,
      y: n
    }, t);
  }
  return El({
    x: t.width / 2,
    y: t.height / 2
  }, t);
}
const Np = {
  static: nC,
  // specific viewport position, usually centered
  connected: iC
  // connected to a certain element
}, tC = Z({
  locationStrategy: {
    type: [String, Function],
    default: "static",
    validator: (e) => typeof e == "function" || e in Np
  },
  location: {
    type: String,
    default: "bottom"
  },
  origin: {
    type: String,
    default: "auto"
  },
  offset: [Number, String, Array],
  stickToTarget: Boolean
}, "VOverlay-location-strategies");
function aC(e, t) {
  const a = ee({}), r = ee();
  rt && pn(() => !!(t.isActive.value && e.locationStrategy), (o) => {
    var l, u;
    fe(() => e.locationStrategy, o), It(() => {
      window.removeEventListener("resize", i), visualViewport == null || visualViewport.removeEventListener("resize", n), visualViewport == null || visualViewport.removeEventListener("scroll", s), r.value = void 0;
    }), window.addEventListener("resize", i, {
      passive: !0
    }), visualViewport == null || visualViewport.addEventListener("resize", n, {
      passive: !0
    }), visualViewport == null || visualViewport.addEventListener("scroll", s, {
      passive: !0
    }), typeof e.locationStrategy == "function" ? r.value = (l = e.locationStrategy(t, e, a)) == null ? void 0 : l.updateLocation : r.value = (u = Np[e.locationStrategy](t, e, a)) == null ? void 0 : u.updateLocation;
  });
  function i(o) {
    var l;
    (l = r.value) == null || l.call(r, o);
  }
  function n(o) {
    var l;
    (l = r.value) == null || l.call(r, o);
  }
  function s(o) {
    var l;
    (l = r.value) == null || l.call(r, o);
  }
  return {
    contentStyles: a,
    updateLocation: r
  };
}
function nC() {
}
function rC(e, t) {
  const a = ic(e);
  return t ? a.x += parseFloat(e.style.right || 0) : a.x -= parseFloat(e.style.left || 0), a.y -= parseFloat(e.style.top || 0), a;
}
function iC(e, t, a) {
  (Array.isArray(e.target.value) || X_(e.target.value)) && Object.assign(a.value, {
    position: "fixed",
    top: 0,
    [e.isRtl.value ? "right" : "left"]: 0
  });
  const {
    preferredAnchor: i,
    preferredOrigin: n
  } = rc(() => {
    const f = mo(t.location, e.isRtl.value), g = t.origin === "overlap" ? f : t.origin === "auto" ? Pl(f) : mo(t.origin, e.isRtl.value);
    return f.side === g.side && f.align === Cl(g).align ? {
      preferredAnchor: of(f),
      preferredOrigin: of(g)
    } : {
      preferredAnchor: f,
      preferredOrigin: g
    };
  }), [s, o, l, u] = ["minWidth", "minHeight", "maxWidth", "maxHeight"].map((f) => C(() => {
    const g = parseFloat(t[f]);
    return isNaN(g) ? 1 / 0 : g;
  })), c = C(() => {
    if (Array.isArray(t.offset))
      return t.offset;
    if (typeof t.offset == "string") {
      const f = t.offset.split(" ").map(parseFloat);
      return f.length < 2 && f.push(0), f;
    }
    return typeof t.offset == "number" ? [t.offset, 0] : [0, 0];
  });
  let d = !1, m = -1;
  const v = new p_(4), p = new ResizeObserver(() => {
    if (!d) return;
    if (requestAnimationFrame((g) => {
      g !== m && v.clear(), requestAnimationFrame((P) => {
        m = P;
      });
    }), v.isFull) {
      const g = v.values();
      if (Et(g.at(-1), g.at(-3)) && !Et(g.at(-1), g.at(-2)))
        return;
    }
    const f = y();
    f && v.push(f.flipped);
  });
  let h = new va({
    x: 0,
    y: 0,
    width: 0,
    height: 0
  });
  fe(e.target, (f, g) => {
    g && !Array.isArray(g) && p.unobserve(g), Array.isArray(f) ? Et(f, g) || y() : f && p.observe(f);
  }, {
    immediate: !0
  }), fe(e.contentEl, (f, g) => {
    g && p.unobserve(g), f && p.observe(f);
  }, {
    immediate: !0
  }), It(() => {
    p.disconnect();
  });
  function y() {
    if (d = !1, requestAnimationFrame(() => d = !0), !e.target.value || !e.contentEl.value) return;
    (Array.isArray(e.target.value) || e.target.value.offsetParent || e.target.value.getClientRects().length) && (h = Zv(e.target.value));
    const f = rC(e.contentEl.value, e.isRtl.value), g = Ss(e.contentEl.value), P = 12;
    g.length || (g.push(document.documentElement), e.contentEl.value.style.top && e.contentEl.value.style.left || (f.x -= parseFloat(document.documentElement.style.getPropertyValue("--v-body-scroll-x") || 0), f.y -= parseFloat(document.documentElement.style.getPropertyValue("--v-body-scroll-y") || 0)));
    const S = g.reduce((B, N) => {
      const z = S_(N);
      return B ? new va({
        x: Math.max(B.left, z.left),
        y: Math.max(B.top, z.top),
        width: Math.min(B.right, z.right) - Math.max(B.left, z.left),
        height: Math.min(B.bottom, z.bottom) - Math.max(B.top, z.top)
      }) : z;
    }, void 0);
    S.x += P, S.y += P, S.width -= P * 2, S.height -= P * 2;
    let _ = {
      anchor: i.value,
      origin: n.value
    };
    function j(B) {
      const N = new va(f), z = jf(B.anchor, h), J = jf(B.origin, N);
      let {
        x: ae,
        y: X
      } = eC(z, J);
      switch (B.anchor.side) {
        case "top":
          X -= c.value[0];
          break;
        case "bottom":
          X += c.value[0];
          break;
        case "left":
          ae -= c.value[0];
          break;
        case "right":
          ae += c.value[0];
          break;
      }
      switch (B.anchor.align) {
        case "top":
          X -= c.value[1];
          break;
        case "bottom":
          X += c.value[1];
          break;
        case "left":
          ae -= c.value[1];
          break;
        case "right":
          ae += c.value[1];
          break;
      }
      return N.x += ae, N.y += X, N.width = Math.min(N.width, l.value), N.height = Math.min(N.height, u.value), {
        overflows: cf(N, S),
        x: ae,
        y: X
      };
    }
    let F = 0, R = 0;
    const U = {
      x: 0,
      y: 0
    }, W = {
      x: !1,
      y: !1
    };
    let D = -1;
    for (; ; ) {
      if (D++ > 10) {
        Jv("Infinite loop detected in connectedLocationStrategy");
        break;
      }
      const {
        x: B,
        y: N,
        overflows: z
      } = j(_);
      F += B, R += N, f.x += B, f.y += N;
      {
        const J = uf(_.anchor), ae = z.x.before || z.x.after, X = z.y.before || z.y.after;
        let L = !1;
        if (["x", "y"].forEach((A) => {
          if (A === "x" && ae && !W.x || A === "y" && X && !W.y) {
            const x = {
              anchor: {
                ..._.anchor
              },
              origin: {
                ..._.origin
              }
            }, V = A === "x" ? J === "y" ? Cl : Pl : J === "y" ? Pl : Cl;
            x.anchor = V(x.anchor), x.origin = V(x.origin);
            const {
              overflows: $
            } = j(x);
            ($[A].before <= z[A].before && $[A].after <= z[A].after || $[A].before + $[A].after < (z[A].before + z[A].after) / 2) && (_ = x, L = W[A] = !0);
          }
        }), L) continue;
      }
      z.x.before && (t.stickToTarget || (F += z.x.before), f.x += z.x.before), z.x.after && (t.stickToTarget || (F -= z.x.after), f.x -= z.x.after), z.y.before && (t.stickToTarget || (R += z.y.before), f.y += z.y.before), z.y.after && (t.stickToTarget || (R -= z.y.after), f.y -= z.y.after);
      {
        const J = cf(f, S);
        U.x = S.width - J.x.before - J.x.after, U.y = S.height - J.y.before - J.y.after, t.stickToTarget || (F += J.x.before), f.x += J.x.before, t.stickToTarget || (R += J.y.before), f.y += J.y.before;
      }
      break;
    }
    const O = uf(_.anchor);
    return Object.assign(a.value, {
      "--v-overlay-anchor-origin": `${_.anchor.side} ${_.anchor.align}`,
      transformOrigin: `${_.origin.side} ${_.origin.align}`,
      // transform: `translate(${pixelRound(x)}px, ${pixelRound(y)}px)`,
      top: ge(Al(R)),
      left: e.isRtl.value ? void 0 : ge(Al(F)),
      right: e.isRtl.value ? ge(Al(-F)) : void 0,
      minWidth: ge(O === "y" ? Math.min(s.value, h.width) : s.value),
      maxWidth: ge(Mf(lt(U.x, s.value === 1 / 0 ? 0 : s.value, l.value))),
      maxHeight: ge(Mf(lt(U.y, o.value === 1 / 0 ? 0 : o.value, u.value)))
    }), {
      available: U,
      contentBox: f,
      flipped: W
    };
  }
  return fe(() => [i.value, n.value, t.offset, t.minWidth, t.minHeight, t.maxWidth, t.maxHeight], () => y()), qe(() => {
    const f = y();
    if (!f) return;
    const {
      available: g,
      contentBox: P
    } = f;
    P.height > g.y && requestAnimationFrame(() => {
      y(), requestAnimationFrame(() => {
        y();
      });
    });
  }), {
    updateLocation: y
  };
}
function Al(e) {
  return Math.round(e * devicePixelRatio) / devicePixelRatio;
}
function Mf(e) {
  return Math.ceil(e * devicePixelRatio) / devicePixelRatio;
}
let wo = !0;
const Cs = [];
function sC(e) {
  !wo || Cs.length ? (Cs.push(e), $o()) : (wo = !1, e(), $o());
}
let Df = -1;
function $o() {
  cancelAnimationFrame(Df), Df = requestAnimationFrame(() => {
    const e = Cs.shift();
    e && e(), Cs.length ? $o() : wo = !0;
  });
}
const rs = {
  none: null,
  close: uC,
  block: cC,
  reposition: dC
}, lC = Z({
  scrollStrategy: {
    type: [String, Function],
    default: "block",
    validator: (e) => typeof e == "function" || e in rs
  }
}, "VOverlay-scroll-strategies");
function oC(e, t) {
  if (!rt) return;
  let a;
  At(async () => {
    a == null || a.stop(), t.isActive.value && e.scrollStrategy && (a = Ro(), await new Promise((r) => setTimeout(r)), a.active && a.run(() => {
      var r;
      typeof e.scrollStrategy == "function" ? e.scrollStrategy(t, e, a) : (r = rs[e.scrollStrategy]) == null || r.call(rs, t, e, a);
    }));
  }), It(() => {
    a == null || a.stop();
  });
}
function uC(e) {
  function t(a) {
    e.isActive.value = !1;
  }
  zp(gc(e.target.value, e.contentEl.value), t);
}
function cC(e, t) {
  var o;
  const a = (o = e.root.value) == null ? void 0 : o.offsetParent, r = gc(e.target.value, e.contentEl.value), i = [.../* @__PURE__ */ new Set([...Ss(r, t.contained ? a : void 0), ...Ss(e.contentEl.value, t.contained ? a : void 0)])].filter((l) => !l.classList.contains("v-overlay-scroll-blocked")), n = window.innerWidth - document.documentElement.offsetWidth, s = ((l) => oc(l) && l)(a || document.documentElement);
  s && e.root.value.classList.add("v-overlay--scroll-blocked"), i.forEach((l, u) => {
    l.style.setProperty("--v-body-scroll-x", ge(-l.scrollLeft)), l.style.setProperty("--v-body-scroll-y", ge(-l.scrollTop)), l !== document.documentElement && l.style.setProperty("--v-scrollbar-offset", ge(n)), l.classList.add("v-overlay-scroll-blocked");
  }), It(() => {
    i.forEach((l, u) => {
      const c = parseFloat(l.style.getPropertyValue("--v-body-scroll-x")), d = parseFloat(l.style.getPropertyValue("--v-body-scroll-y")), m = l.style.scrollBehavior;
      l.style.scrollBehavior = "auto", l.style.removeProperty("--v-body-scroll-x"), l.style.removeProperty("--v-body-scroll-y"), l.style.removeProperty("--v-scrollbar-offset"), l.classList.remove("v-overlay-scroll-blocked"), l.scrollLeft = -c, l.scrollTop = -d, l.style.scrollBehavior = m;
    }), s && e.root.value.classList.remove("v-overlay--scroll-blocked");
  });
}
function dC(e, t, a) {
  let r = !1, i = -1, n = -1;
  function s(o) {
    sC(() => {
      var c, d;
      const l = performance.now();
      (d = (c = e.updateLocation).value) == null || d.call(c, o), r = (performance.now() - l) / (1e3 / 60) > 2;
    });
  }
  n = (typeof requestIdleCallback > "u" ? (o) => o() : requestIdleCallback)(() => {
    a.run(() => {
      zp(gc(e.target.value, e.contentEl.value), (o) => {
        r ? (cancelAnimationFrame(i), i = requestAnimationFrame(() => {
          i = requestAnimationFrame(() => {
            s(o);
          });
        })) : s(o);
      });
    });
  }), It(() => {
    typeof cancelIdleCallback < "u" && cancelIdleCallback(n), cancelAnimationFrame(i);
  });
}
function gc(e, t) {
  return Array.isArray(e) ? document.elementsFromPoint(...e).find((a) => !(t != null && t.contains(a))) : e ?? t;
}
function zp(e, t) {
  const a = [document, ...Ss(e)];
  a.forEach((r) => {
    r.addEventListener("scroll", t, {
      passive: !0
    });
  }), It(() => {
    a.forEach((r) => {
      r.removeEventListener("scroll", t);
    });
  });
}
const So = Symbol.for("vuetify:v-menu"), fC = Z({
  closeDelay: [Number, String],
  openDelay: [Number, String]
}, "delay");
function mC(e, t) {
  let a = () => {
  };
  function r(s) {
    a == null || a();
    const o = Number(s ? e.openDelay : e.closeDelay);
    return new Promise((l) => {
      a = y_(o, () => {
        t == null || t(s), l(s);
      });
    });
  }
  function i() {
    return r(!0);
  }
  function n() {
    return r(!1);
  }
  return {
    clearDelay: a,
    runOpenDelay: i,
    runCloseDelay: n
  };
}
const vC = Z({
  target: [String, Object],
  activator: [String, Object],
  activatorProps: {
    type: Object,
    default: () => ({})
  },
  openOnClick: {
    type: Boolean,
    default: void 0
  },
  openOnHover: Boolean,
  openOnFocus: {
    type: Boolean,
    default: void 0
  },
  closeOnContentClick: Boolean,
  ...fC()
}, "VOverlay-activator");
function pC(e, t) {
  let {
    isActive: a,
    isTop: r,
    contentEl: i
  } = t;
  const n = kt("useActivator"), s = ee();
  let o = !1, l = !1, u = !0;
  const c = C(() => e.openOnFocus || e.openOnFocus == null && e.openOnHover), d = C(() => e.openOnClick || e.openOnClick == null && !e.openOnHover && !c.value), {
    runOpenDelay: m,
    runCloseDelay: v
  } = mC(e, (R) => {
    R === (e.openOnHover && o || c.value && l) && !(e.openOnHover && a.value && !r.value) && (a.value !== R && (u = !0), a.value = R);
  }), p = ee(), h = {
    onClick: (R) => {
      R.stopPropagation(), s.value = R.currentTarget || R.target, a.value || (p.value = [R.clientX, R.clientY]), a.value = !a.value;
    },
    onMouseenter: (R) => {
      var U;
      (U = R.sourceCapabilities) != null && U.firesTouchEvents || (o = !0, s.value = R.currentTarget || R.target, m());
    },
    onMouseleave: (R) => {
      o = !1, v();
    },
    onFocus: (R) => {
      br(R.target, ":focus-visible") !== !1 && (l = !0, R.stopPropagation(), s.value = R.currentTarget || R.target, m());
    },
    onBlur: (R) => {
      l = !1, R.stopPropagation(), v();
    }
  }, y = C(() => {
    const R = {};
    return d.value && (R.onClick = h.onClick), e.openOnHover && (R.onMouseenter = h.onMouseenter, R.onMouseleave = h.onMouseleave), c.value && (R.onFocus = h.onFocus, R.onBlur = h.onBlur), R;
  }), f = C(() => {
    const R = {};
    if (e.openOnHover && (R.onMouseenter = () => {
      o = !0, m();
    }, R.onMouseleave = () => {
      o = !1, v();
    }), c.value && (R.onFocusin = () => {
      l = !0, m();
    }, R.onFocusout = () => {
      l = !1, v();
    }), e.closeOnContentClick) {
      const U = Fe(So, null);
      R.onClick = () => {
        a.value = !1, U == null || U.closeParents();
      };
    }
    return R;
  }), g = C(() => {
    const R = {};
    return e.openOnHover && (R.onMouseenter = () => {
      u && (o = !0, u = !1, m());
    }, R.onMouseleave = () => {
      o = !1, v();
    }), R;
  });
  fe(r, (R) => {
    var U;
    R && (e.openOnHover && !o && (!c.value || !l) || c.value && !l && (!e.openOnHover || !o)) && !((U = i.value) != null && U.contains(document.activeElement)) && (a.value = !1);
  }), fe(a, (R) => {
    R || setTimeout(() => {
      p.value = void 0;
    });
  }, {
    flush: "post"
  });
  const P = ks();
  At(() => {
    P.value && qe(() => {
      s.value = P.el;
    });
  });
  const S = ks(), _ = C(() => e.target === "cursor" && p.value ? p.value : S.value ? S.el : Lp(e.target, n) || s.value), j = C(() => Array.isArray(_.value) ? void 0 : _.value);
  let F;
  return fe(() => !!e.activator, (R) => {
    R && rt ? (F = Ro(), F.run(() => {
      hC(e, n, {
        activatorEl: s,
        activatorEvents: y
      });
    })) : F && F.stop();
  }, {
    flush: "post",
    immediate: !0
  }), It(() => {
    F == null || F.stop();
  }), {
    activatorEl: s,
    activatorRef: P,
    target: _,
    targetEl: j,
    targetRef: S,
    activatorEvents: y,
    contentEvents: f,
    scrimEvents: g
  };
}
function hC(e, t, a) {
  let {
    activatorEl: r,
    activatorEvents: i
  } = a;
  fe(() => e.activator, (l, u) => {
    if (u && l !== u) {
      const c = o(u);
      c && s(c);
    }
    l && qe(() => n());
  }, {
    immediate: !0
  }), fe(() => e.activatorProps, () => {
    n();
  }), It(() => {
    s();
  });
  function n() {
    let l = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : o(), u = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e.activatorProps;
    l && __(l, ne(i.value, u));
  }
  function s() {
    let l = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : o(), u = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e.activatorProps;
    l && P_(l, ne(i.value, u));
  }
  function o() {
    let l = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : e.activator;
    const u = Lp(l, t);
    return r.value = (u == null ? void 0 : u.nodeType) === Node.ELEMENT_NODE ? u : void 0, r.value;
  }
}
function Lp(e, t) {
  var r, i;
  if (!e) return;
  let a;
  if (e === "parent") {
    let n = (i = (r = t == null ? void 0 : t.proxy) == null ? void 0 : r.$el) == null ? void 0 : i.parentNode;
    for (; n != null && n.hasAttribute("data-no-activator"); )
      n = n.parentNode;
    a = n;
  } else typeof e == "string" ? a = document.querySelector(e) : "$el" in e ? a = e.$el : a = e;
  return a;
}
function yC() {
  if (!rt) return me(!1);
  const {
    ssr: e
  } = Xs();
  if (e) {
    const t = me(!1);
    return ha(() => {
      t.value = !0;
    }), t;
  } else
    return me(!0);
}
const bc = Z({
  eager: Boolean
}, "lazy");
function kc(e, t) {
  const a = me(!1), r = q(() => a.value || e.eager || t.value);
  fe(t, () => a.value = !0);
  function i() {
    e.eager || (a.value = !1);
  }
  return {
    isBooted: a,
    hasContent: r,
    onAfterLeave: i
  };
}
function nl() {
  const t = kt("useScopeId").vnode.scopeId;
  return {
    scopeId: t ? {
      [t]: ""
    } : void 0
  };
}
const Rf = Symbol.for("vuetify:stack"), Hr = jn([]);
function gC(e, t, a) {
  const r = kt("useStack"), i = !a, n = Fe(Rf, void 0), s = jn({
    activeChildren: /* @__PURE__ */ new Set()
  });
  St(Rf, s);
  const o = me(Number(Tt(t)));
  pn(e, () => {
    var d;
    const c = (d = Hr.at(-1)) == null ? void 0 : d[1];
    o.value = c ? c + 10 : Number(Tt(t)), i && Hr.push([r.uid, o.value]), n == null || n.activeChildren.add(r.uid), It(() => {
      if (i) {
        const m = Qe(Hr).findIndex((v) => v[0] === r.uid);
        Hr.splice(m, 1);
      }
      n == null || n.activeChildren.delete(r.uid);
    });
  });
  const l = me(!0);
  i && At(() => {
    var d;
    const c = ((d = Hr.at(-1)) == null ? void 0 : d[0]) === r.uid;
    setTimeout(() => l.value = c);
  });
  const u = q(() => !s.activeChildren.size);
  return {
    globalTop: No(l),
    localTop: u,
    stackStyles: q(() => ({
      zIndex: o.value
    }))
  };
}
function bC(e) {
  return {
    teleportTarget: C(() => {
      const a = e();
      if (a === !0 || !rt) return;
      const r = a === !1 ? document.body : typeof a == "string" ? document.querySelector(a) : a;
      if (r == null) {
        Os(`Unable to locate target ${a}`);
        return;
      }
      let i = [...r.children].find((n) => n.matches(".v-overlay-container"));
      return i || (i = document.createElement("div"), i.className = "v-overlay-container", r.appendChild(i)), i;
    })
  };
}
const Xn = Z({
  transition: {
    type: null,
    default: "fade-transition",
    validator: (e) => e !== !0
  }
}, "transition"), Ca = (e, t) => {
  let {
    slots: a
  } = t;
  const {
    transition: r,
    disabled: i,
    group: n,
    ...s
  } = e, {
    component: o = n ? Lo : Mn,
    ...l
  } = gs(r) ? r : {};
  let u;
  return gs(r) ? u = ne(l, w_({
    disabled: i,
    group: n
  }), s) : u = ne({
    name: i || !r ? "" : r
  }, s), De(o, u, a);
};
function kC() {
  return !0;
}
function Bp(e, t, a) {
  if (!e || Fp(e, a) === !1) return !1;
  const r = rp(t);
  if (typeof ShadowRoot < "u" && r instanceof ShadowRoot && r.host === e.target) return !1;
  const i = (typeof a.value == "object" && a.value.include || (() => []))();
  return i.push(t), !i.some((n) => n == null ? void 0 : n.contains(e.target));
}
function Fp(e, t) {
  return (typeof t.value == "object" && t.value.closeConditional || kC)(e);
}
function wC(e, t, a) {
  const r = typeof a.value == "function" ? a.value : a.value.handler;
  e.shadowTarget = e.target, t._clickOutside.lastMousedownWasOutside && Bp(e, t, a) && setTimeout(() => {
    Fp(e, a) && r && r(e);
  }, 0);
}
function Nf(e, t) {
  const a = rp(e);
  t(document), typeof ShadowRoot < "u" && a instanceof ShadowRoot && t(a);
}
const zf = {
  // [data-app] may not be found
  // if using bind, inserted makes
  // sure that the root element is
  // available, iOS does not support
  // clicks on body
  mounted(e, t) {
    const a = (i) => wC(i, e, t), r = (i) => {
      e._clickOutside.lastMousedownWasOutside = Bp(i, e, t);
    };
    Nf(e, (i) => {
      i.addEventListener("click", a, !0), i.addEventListener("mousedown", r, !0);
    }), e._clickOutside || (e._clickOutside = {
      lastMousedownWasOutside: !1
    }), e._clickOutside[t.instance.$.uid] = {
      onClick: a,
      onMousedown: r
    };
  },
  beforeUnmount(e, t) {
    e._clickOutside && (Nf(e, (a) => {
      var n;
      if (!a || !((n = e._clickOutside) != null && n[t.instance.$.uid])) return;
      const {
        onClick: r,
        onMousedown: i
      } = e._clickOutside[t.instance.$.uid];
      a.removeEventListener("click", r, !0), a.removeEventListener("mousedown", i, !0);
    }), delete e._clickOutside[t.instance.$.uid]);
  }
};
function $C(e) {
  const {
    modelValue: t,
    color: a,
    ...r
  } = e;
  return w(Mn, {
    name: "fade-transition",
    appear: !0
  }, {
    default: () => [e.modelValue && T("div", ne({
      class: ["v-overlay__scrim", e.color.backgroundColorClasses.value],
      style: e.color.backgroundColorStyles.value
    }, r), null)]
  });
}
const wc = Z({
  absolute: Boolean,
  attach: [Boolean, String, Object],
  closeOnBack: {
    type: Boolean,
    default: !0
  },
  contained: Boolean,
  contentClass: null,
  contentProps: null,
  disabled: Boolean,
  opacity: [Number, String],
  noClickAnimation: Boolean,
  modelValue: Boolean,
  persistent: Boolean,
  scrim: {
    type: [Boolean, String],
    default: !0
  },
  zIndex: {
    type: [Number, String],
    default: 2e3
  },
  ...vC(),
  ..._e(),
  ...la(),
  ...bc(),
  ...tC(),
  ...lC(),
  ...it(),
  ...Xn()
}, "VOverlay"), xs = oe()({
  name: "VOverlay",
  directives: {
    vClickOutside: zf
  },
  inheritAttrs: !1,
  props: {
    _disableGlobalStack: Boolean,
    ...wc()
  },
  emits: {
    "click:outside": (e) => !0,
    "update:modelValue": (e) => !0,
    keydown: (e) => !0,
    afterEnter: () => !0,
    afterLeave: () => !0
  },
  setup(e, t) {
    let {
      slots: a,
      attrs: r,
      emit: i
    } = t;
    const n = kt("VOverlay"), s = ee(), o = ee(), l = ee(), u = Ce(e, "modelValue"), c = C({
      get: () => u.value,
      set: (E) => {
        E && e.disabled || (u.value = E);
      }
    }), {
      themeClasses: d
    } = ht(e), {
      rtlClasses: m,
      isRtl: v
    } = jt(), {
      hasContent: p,
      onAfterLeave: h
    } = kc(e, c), y = pt(() => typeof e.scrim == "string" ? e.scrim : null), {
      globalTop: f,
      localTop: g,
      stackStyles: P
    } = gC(c, () => e.zIndex, e._disableGlobalStack), {
      activatorEl: S,
      activatorRef: _,
      target: j,
      targetEl: F,
      targetRef: R,
      activatorEvents: U,
      contentEvents: W,
      scrimEvents: D
    } = pC(e, {
      isActive: c,
      isTop: g,
      contentEl: l
    }), {
      teleportTarget: O
    } = bC(() => {
      var K, Y, le;
      const E = e.attach || e.contained;
      if (E) return E;
      const M = ((K = S == null ? void 0 : S.value) == null ? void 0 : K.getRootNode()) || ((le = (Y = n.proxy) == null ? void 0 : Y.$el) == null ? void 0 : le.getRootNode());
      return M instanceof ShadowRoot ? M : !1;
    }), {
      dimensionStyles: B
    } = oa(e), N = yC(), {
      scopeId: z
    } = nl();
    fe(() => e.disabled, (E) => {
      E && (c.value = !1);
    });
    const {
      contentStyles: J,
      updateLocation: ae
    } = aC(e, {
      isRtl: v,
      contentEl: l,
      target: j,
      isActive: c
    });
    oC(e, {
      root: s,
      contentEl: l,
      targetEl: F,
      target: j,
      isActive: c,
      updateLocation: ae
    });
    function X(E) {
      i("click:outside", E), e.persistent ? b() : c.value = !1;
    }
    function L(E) {
      return c.value && f.value && // If using scrim, only close if clicking on it rather than anything opened on top
      (!e.scrim || E.target === o.value || E instanceof MouseEvent && E.shadowTarget === o.value);
    }
    rt && fe(c, (E) => {
      E ? window.addEventListener("keydown", A) : window.removeEventListener("keydown", A);
    }, {
      immediate: !0
    }), Aa(() => {
      rt && window.removeEventListener("keydown", A);
    });
    function A(E) {
      var M, K, Y;
      E.key === "Escape" && f.value && ((M = l.value) != null && M.contains(document.activeElement) || i("keydown", E), e.persistent ? b() : (c.value = !1, (K = l.value) != null && K.contains(document.activeElement) && ((Y = S.value) == null || Y.focus())));
    }
    function x(E) {
      E.key === "Escape" && !f.value || i("keydown", E);
    }
    const V = LP();
    pn(() => e.closeOnBack, () => {
      BP(V, (E) => {
        f.value && c.value ? (E(!1), e.persistent ? b() : c.value = !1) : E();
      });
    });
    const $ = ee();
    fe(() => c.value && (e.absolute || e.contained) && O.value == null, (E) => {
      if (E) {
        const M = ip(s.value);
        M && M !== document.scrollingElement && ($.value = M.scrollTop);
      }
    });
    function b() {
      e.noClickAnimation || l.value && Wa(l.value, [{
        transformOrigin: "center"
      }, {
        transform: "scale(1.03)"
      }, {
        transformOrigin: "center"
      }], {
        duration: 150,
        easing: ci
      });
    }
    function I() {
      i("afterEnter");
    }
    function k() {
      h(), i("afterLeave");
    }
    return ce(() => {
      var E;
      return T(ve, null, [(E = a.activator) == null ? void 0 : E.call(a, {
        isActive: c.value,
        targetRef: R,
        props: ne({
          ref: _
        }, U.value, e.activatorProps)
      }), N.value && p.value && w(oy, {
        disabled: !O.value,
        to: O.value
      }, {
        default: () => [T("div", ne({
          class: ["v-overlay", {
            "v-overlay--absolute": e.absolute || e.contained,
            "v-overlay--active": c.value,
            "v-overlay--contained": e.contained
          }, d.value, m.value, e.class],
          style: [P.value, {
            "--v-overlay-opacity": e.opacity,
            top: ge($.value)
          }, e.style],
          ref: s,
          onKeydown: x
        }, z, r), [w($C, ne({
          color: y,
          modelValue: c.value && !!e.scrim,
          ref: o
        }, D.value), null), w(Ca, {
          appear: !0,
          persisted: !0,
          transition: e.transition,
          target: j.value,
          onAfterEnter: I,
          onAfterLeave: k
        }, {
          default: () => {
            var M;
            return [nt(T("div", ne({
              ref: l,
              class: ["v-overlay__content", e.contentClass],
              style: [B.value, J.value]
            }, W.value, e.contentProps), [(M = a.default) == null ? void 0 : M.call(a, {
              isActive: c
            })]), [[rn, c.value], [zf, {
              handler: X,
              closeConditional: L,
              include: () => [S.value]
            }]])];
          }
        })])]
      })]);
    }), {
      activatorEl: S,
      scrimEl: o,
      target: j,
      animateClick: b,
      contentEl: l,
      globalTop: f,
      localTop: g,
      updateLocation: ae
    };
  }
}), Tl = Symbol("Forwarded refs");
function jl(e, t) {
  let a = e;
  for (; a; ) {
    const r = Reflect.getOwnPropertyDescriptor(a, t);
    if (r) return r;
    a = Object.getPrototypeOf(a);
  }
}
function Ut(e) {
  for (var t = arguments.length, a = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++)
    a[r - 1] = arguments[r];
  return e[Tl] = a, new Proxy(e, {
    get(i, n) {
      if (Reflect.has(i, n))
        return Reflect.get(i, n);
      if (!(typeof n == "symbol" || n.startsWith("$") || n.startsWith("__"))) {
        for (const s of a)
          if (s.value && Reflect.has(s.value, n)) {
            const o = Reflect.get(s.value, n);
            return typeof o == "function" ? o.bind(s.value) : o;
          }
      }
    },
    has(i, n) {
      if (Reflect.has(i, n))
        return !0;
      if (typeof n == "symbol" || n.startsWith("$") || n.startsWith("__")) return !1;
      for (const s of a)
        if (s.value && Reflect.has(s.value, n))
          return !0;
      return !1;
    },
    set(i, n, s) {
      if (Reflect.has(i, n))
        return Reflect.set(i, n, s);
      if (typeof n == "symbol" || n.startsWith("$") || n.startsWith("__")) return !1;
      for (const o of a)
        if (o.value && Reflect.has(o.value, n))
          return Reflect.set(o.value, n, s);
      return !1;
    },
    getOwnPropertyDescriptor(i, n) {
      var o;
      const s = Reflect.getOwnPropertyDescriptor(i, n);
      if (s) return s;
      if (!(typeof n == "symbol" || n.startsWith("$") || n.startsWith("__"))) {
        for (const l of a) {
          if (!l.value) continue;
          const u = jl(l.value, n) ?? ("_" in l.value ? jl((o = l.value._) == null ? void 0 : o.setupState, n) : void 0);
          if (u) return u;
        }
        for (const l of a) {
          const u = l.value && l.value[Tl];
          if (!u) continue;
          const c = u.slice();
          for (; c.length; ) {
            const d = c.shift(), m = jl(d.value, n);
            if (m) return m;
            const v = d.value && d.value[Tl];
            v && c.push(...v);
          }
        }
      }
    }
  });
}
const SC = Z({
  // TODO
  // disableKeys: Boolean,
  id: String,
  submenu: Boolean,
  disableInitialFocus: Boolean,
  ...ut(wc({
    closeDelay: 250,
    closeOnContentClick: !0,
    locationStrategy: "connected",
    location: void 0,
    openDelay: 300,
    scrim: !1,
    scrollStrategy: "reposition",
    transition: {
      component: hc
    }
  }), ["absolute"])
}, "VMenu"), Fn = oe()({
  name: "VMenu",
  props: SC(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = Ce(e, "modelValue"), {
      scopeId: i
    } = nl(), {
      isRtl: n
    } = jt(), s = pa(), o = q(() => e.id || `v-menu-${s}`), l = ee(), u = Fe(So, null), c = me(/* @__PURE__ */ new Set());
    St(So, {
      register() {
        c.value.add(s);
      },
      unregister() {
        c.value.delete(s);
      },
      closeParents(y) {
        setTimeout(() => {
          var f;
          !c.value.size && !e.persistent && (y == null || (f = l.value) != null && f.contentEl && !g_(y, l.value.contentEl)) && (r.value = !1, u == null || u.closeParents());
        }, 40);
      }
    }), Aa(() => {
      u == null || u.unregister(), document.removeEventListener("focusin", d);
    }), uy(() => r.value = !1);
    async function d(y) {
      var P, S, _;
      const f = y.relatedTarget, g = y.target;
      await qe(), r.value && f !== g && ((P = l.value) != null && P.contentEl) && // We're the topmost menu
      ((S = l.value) != null && S.globalTop) && // It isn't the document or the menu body
      ![document, l.value.contentEl].includes(g) && // It isn't inside the menu body
      !l.value.contentEl.contains(g) && ((_ = gr(l.value.contentEl)[0]) == null || _.focus());
    }
    fe(r, (y) => {
      y ? (u == null || u.register(), rt && !e.disableInitialFocus && document.addEventListener("focusin", d, {
        once: !0
      })) : (u == null || u.unregister(), rt && document.removeEventListener("focusin", d));
    }, {
      immediate: !0
    });
    function m(y) {
      u == null || u.closeParents(y);
    }
    function v(y) {
      var f, g, P, S, _;
      if (!e.disabled)
        if (y.key === "Tab" || y.key === "Enter" && !e.closeOnContentClick) {
          if (y.key === "Enter" && (y.target instanceof HTMLTextAreaElement || y.target instanceof HTMLInputElement && y.target.closest("form"))) return;
          y.key === "Enter" && y.preventDefault(), Gv(gr((f = l.value) == null ? void 0 : f.contentEl, !1), y.shiftKey ? "prev" : "next", (F) => F.tabIndex >= 0) || (r.value = !1, (P = (g = l.value) == null ? void 0 : g.activatorEl) == null || P.focus());
        } else e.submenu && y.key === (n.value ? "ArrowRight" : "ArrowLeft") && (r.value = !1, (_ = (S = l.value) == null ? void 0 : S.activatorEl) == null || _.focus());
    }
    function p(y) {
      var g;
      if (e.disabled) return;
      const f = (g = l.value) == null ? void 0 : g.contentEl;
      f && r.value ? y.key === "ArrowDown" ? (y.preventDefault(), y.stopImmediatePropagation(), ii(f, "next")) : y.key === "ArrowUp" ? (y.preventDefault(), y.stopImmediatePropagation(), ii(f, "prev")) : e.submenu && (y.key === (n.value ? "ArrowRight" : "ArrowLeft") ? r.value = !1 : y.key === (n.value ? "ArrowLeft" : "ArrowRight") && (y.preventDefault(), ii(f, "first"))) : (e.submenu ? y.key === (n.value ? "ArrowLeft" : "ArrowRight") : ["ArrowDown", "ArrowUp"].includes(y.key)) && (r.value = !0, y.preventDefault(), setTimeout(() => setTimeout(() => p(y))));
    }
    const h = C(() => ne({
      "aria-haspopup": "menu",
      "aria-expanded": String(r.value),
      "aria-controls": o.value,
      onKeydown: p
    }, e.activatorProps));
    return ce(() => {
      const y = xs.filterProps(e);
      return w(xs, ne({
        ref: l,
        id: o.value,
        class: ["v-menu", e.class],
        style: e.style
      }, y, {
        modelValue: r.value,
        "onUpdate:modelValue": (f) => r.value = f,
        absolute: !0,
        activatorProps: h.value,
        location: e.location ?? (e.submenu ? "end" : "bottom"),
        "onClick:outside": m,
        onKeydown: v
      }, i), {
        activator: a.activator,
        default: function() {
          for (var f = arguments.length, g = new Array(f), P = 0; P < f; P++)
            g[P] = arguments[P];
          return w(ze, {
            root: "VMenu"
          }, {
            default: () => {
              var S;
              return [(S = a.default) == null ? void 0 : S.call(a, ...g)];
            }
          });
        }
      });
    }), Ut({
      id: o,
      ΨopenChildren: c
    }, l);
  }
}), Lf = Symbol.for("vjsf:z-index-stack"), Zn = (e) => {
  const t = Fe(Lf, { zIndex: 3e3, fullKey: e, initial: !0 }), a = t.zIndex + 10;
  return (t.initial || e.length > t.fullKey.length) && St(Lf, { zIndex: a, fullKey: e }), a;
}, _C = ["innerHTML"], PC = ["innerHTML"], CC = {
  __name: "help-message",
  props: {
    node: {
      /** @type import('vue').PropType<import('../../types.js').VjsfNode> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    const a = Zn(e.node.fullKey), r = ee(!1);
    return (i, n) => (ie(), Ne("div", {
      class: te(`vjsf-help-message vjsf-help-message-${e.node.options.density}`)
    }, [
      w(H(Fn), {
        modelValue: r.value,
        "onUpdate:modelValue": n[0] || (n[0] = (s) => r.value = s),
        class: te(`vjsf-help-message-tooltip vjsf-help-message-tooltip-${e.node.options.density}`),
        location: "top end",
        offset: "4",
        "z-index": H(a),
        "close-on-content-click": !1
      }, {
        activator: re(({ props: s }) => [
          w(H(Be), ne({
            color: e.node.layout.warning ? "warning" : "info",
            class: "vjsf-help-message-toggle",
            icon: e.node.layout.warning ? e.node.options.icons.alert : e.node.options.icons.infoSymbol,
            density: "compact",
            variant: e.node.layout.warning ? "text" : "flat",
            size: e.node.options.density === "default" ? 28 : 24,
            title: r.value ? "" : e.node.messages.showHelp
          }, s), null, 16, ["color", "icon", "variant", "size", "title"])
        ]),
        default: re(() => [
          w(H(Ap), {
            color: e.node.layout.warning ? "warning" : "info",
            density: e.node.options.density
          }, {
            default: re(() => [
              e.node.layout.warning ? (ie(), Ne("p", {
                key: 0,
                class: "mb-2",
                innerHTML: e.node.layout.warning
              }, null, 8, _C)) : Te("", !0),
              e.node.layout.help ? (ie(), Ne("div", {
                key: 1,
                innerHTML: e.node.layout.help
              }, null, 8, PC)) : Te("", !0)
            ]),
            _: 1
          }, 8, ["color", "density"])
        ]),
        _: 1
      }, 8, ["modelValue", "class", "z-index"])
    ], 2));
  }
}, Ia = {
  __name: "node",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../types.js').VjsfNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    var l, u;
    const t = ya("vjsf:render");
    Ye({}, "VjsfNode");
    const a = e, r = {
      compact: "my-1",
      comfortable: "my-2",
      default: "my-3"
    }, i = fc();
    t.enabled && (t("setup node", a.modelValue.fullKey, a.modelValue.layout.comp), cy(() => {
      t("render node", a.modelValue.fullKey, a.modelValue.layout.comp);
    }));
    const n = C(() => a.modelValue.parentFullKey === null || !a.modelValue.options.indent || a.modelValue.layout.comp !== "section" || !a.modelValue.layout.title ? 0 : typeof a.modelValue.options.indent == "number" ? a.modelValue.options.indent : a.modelValue.options.density === "compact" ? 2 : a.modelValue.options.density === "comfortable" ? 4 : 6), s = C(() => (a.modelValue.layout.help || a.modelValue.layout.warning) && !a.modelValue.options.summary), o = C(() => {
      let c = `vjsf-node vjsf-node-${a.modelValue.layout.comp} vjsf-density-${a.modelValue.options.density}`;
      return a.modelValue.options.readOnly && (c += " vjsf-readonly"), a.modelValue.options.summary && (c += " vjsf-summary"), i.current.value.dark && (c += " vjsf-dark"), n.value && (c += " ml-" + n.value), s.value && (c += " vjsf-has-help"), c;
    });
    return a.modelValue.layout.comp !== "none" && !((l = a.modelValue.slots) != null && l.component) && !((u = a.modelValue.slots) != null && u.compositeComponent) && !a.statefulLayout.options.nodeComponents[a.modelValue.layout.comp] && console.error(`vjsf: missing component to render vjsf node "${a.modelValue.layout.comp}", maybe you forgot to register a component from a plugin ?`), (c, d) => (ie(), pe(H(ze), {
      defaults: { global: { density: a.modelValue.options.density } }
    }, {
      default: re(() => [
        e.modelValue.layout.comp !== "none" ? (ie(), pe(H(dp), {
          key: 0,
          cols: e.modelValue.cols,
          class: te(o.value)
        }, {
          default: re(() => {
            var m, v, p, h, y, f, g, P;
            return [
              (m = e.modelValue.slots) != null && m.before ? (ie(), pe(Yr, {
                key: "before",
                "layout-slot": (v = e.modelValue.slots) == null ? void 0 : v.before,
                node: e.modelValue,
                "stateful-layout": e.statefulLayout,
                class: te(r[e.modelValue.options.density])
              }, null, 8, ["layout-slot", "node", "stateful-layout", "class"])) : Te("", !0),
              s.value ? (ie(), pe(CC, {
                key: 1,
                node: e.modelValue
              }, null, 8, ["node"])) : Te("", !0),
              (p = e.modelValue.slots) != null && p.component ? (ie(), pe(Yr, {
                key: "component",
                "layout-slot": (h = e.modelValue.slots) == null ? void 0 : h.component,
                node: e.modelValue,
                "stateful-layout": e.statefulLayout
              }, null, 8, ["layout-slot", "node", "stateful-layout"])) : (y = e.modelValue.slots) != null && y.compositeComponent ? (ie(), pe(Yr, {
                key: "compositeComponent",
                "layout-slot": (f = e.modelValue.slots) == null ? void 0 : f.compositeComponent,
                node: e.modelValue,
                "stateful-layout": e.statefulLayout
              }, null, 8, ["layout-slot", "node", "stateful-layout"])) : (ie(), pe(zo(a.statefulLayout.options.nodeComponents[e.modelValue.layout.comp]), {
                key: 4,
                "model-value": e.modelValue,
                "stateful-layout": e.statefulLayout
              }, null, 8, ["model-value", "stateful-layout"])),
              (g = e.modelValue.slots) != null && g.after ? (ie(), pe(Yr, {
                key: "after",
                "layout-slot": (P = e.modelValue.slots) == null ? void 0 : P.after,
                node: e.modelValue,
                "stateful-layout": e.statefulLayout,
                class: te(r[e.modelValue.options.density])
              }, null, 8, ["layout-slot", "node", "stateful-layout", "class"])) : Te("", !0)
            ];
          }),
          _: 1
        }, 8, ["cols", "class"])) : Te("", !0)
      ]),
      _: 1
    }, 8, ["defaults"]));
  }
}, xC = {
  __name: "tree",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('@json-layout/core').StateTree> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    return (t, a) => (ie(), pe(H(Va), { class: "vjsf-tree" }, {
      default: re(() => [
        w(Ia, {
          "stateful-layout": e.statefulLayout,
          "model-value": (
            /** @type import('../types.js').VjsfNode */
            e.modelValue.root
          )
        }, null, 8, ["stateful-layout", "model-value"])
      ]),
      _: 1
    }));
  }
}, Wi = ["xs", "sm", "md", "lg", "xl", "xxl"], gt = {
  xs: 0,
  sm: 600,
  md: 960,
  lg: 1280,
  xl: 1920,
  xxl: 2560
};
class _o {
  /**
   * @param {number} width
   */
  constructor(t) {
    /**
     * @readonly
     * @type {number}
     */
    Ee(this, "width");
    this.width = t;
  }
  /** @returns {BreakPointName} */
  get name() {
    for (let t = 0; t < Wi.length; t++)
      if (Wi[t + 1] && this.width < gt[Wi[t + 1]]) return Wi[t];
    return "xxl";
  }
  /** @returns {boolean} */
  get xs() {
    return this.width < gt.sm;
  }
  /** @returns {boolean} */
  get sm() {
    return this.width >= gt.sm && this.width < gt.md;
  }
  /** @returns {boolean} */
  get smAndDown() {
    return this.width < gt.md;
  }
  /** @returns {boolean} */
  get smAndUp() {
    return this.width >= gt.sm;
  }
  /** @returns {boolean} */
  get md() {
    return this.width >= gt.md && this.width < gt.lg;
  }
  /** @returns {boolean} */
  get mdAndDown() {
    return this.width < gt.lg;
  }
  /** @returns {boolean} */
  get mobile() {
    return this.mdAndDown;
  }
  /** @returns {boolean} */
  get mdAndUp() {
    return this.width >= gt.md;
  }
  /** @returns {boolean} */
  get lg() {
    return this.width >= gt.lg && this.width < gt.xl;
  }
  /** @returns {boolean} */
  get lgAndDown() {
    return this.width < gt.xl;
  }
  /** @returns {boolean} */
  get lgAndUp() {
    return this.width >= gt.lg;
  }
  /** @returns {boolean} */
  get xl() {
    return this.width >= gt.xl && this.width < gt.xxl;
  }
  /** @returns {boolean} */
  get xlAndDown() {
    return this.width < gt.xxl;
  }
  /** @returns {boolean} */
  get xlAndUp() {
    return this.width >= gt.xl;
  }
  /** @returns {boolean} */
  get xxl() {
    return this.width >= gt.xxl;
  }
}
function VC(e, t) {
  if (!t) return [e, 12];
  let a = t.xs;
  return e.smAndUp && t.sm !== void 0 && (a = t.sm), e.mdAndUp && t.md !== void 0 && (a = t.md), e.lgAndUp && t.lg !== void 0 && (a = t.lg), e.xlAndUp && t.xl !== void 0 && (a = t.xl), e.xxl && t.xxl !== void 0 && (a = t.xxl), [a === 12 ? e : new _o(Math.round(e.width * (a / 12))), a];
}
const Ml = {};
function $c(e) {
  return Ml[e] = Ml[e] ?? new RegExp(e), Ml[e];
}
const Bf = typeof window > "u" ? "http://test.com" : window.location.origin, IC = (e, t) => e.startsWith("http://") || e.startsWith("https://") ? new URL(e) : e.startsWith("/") ? new URL(Bf + e) : new URL(Bf + t + e), Gi = ya("jl:state-node"), OC = ya("jl:validation"), Dl = ya("jl:get-items"), is = (e) => !!(e === "" || e === void 0 || Array.isArray(e) && !e.length || typeof e == "object" && !Array.isArray(e) && e && Object.values(e).findIndex((t) => t !== void 0) === -1), qp = (e, t, a) => !!(a.defaultOn === "missing" && e === void 0 || a.defaultOn === "empty" && is(e)), EC = Vt((e, t, a, r, i, n, s, o, l, u, c, d, m, v, p, h, y, f, g, P) => {
  if (e.messages = o.messages ? AC(e.messages || {}, o.messages, v) : v.messages, e.key = t, e.fullKey = a, e.parentFullKey = r, e.dataPath = i, e.parentDataPath = n, e.skeleton = s, e.layout = o, e.width = l, e.options = v, e.cols = u, h || e.loading && e.data === c ? e.loading = !0 : delete e.loading, e.data = c, e.error = d, e.itemsCacheKey = g, e.childError = P && P.findIndex((S) => S.error || S.childError) !== -1, e.validated = m, p)
    e.autofocus = !0, delete e.autofocusChild;
  else {
    delete e.autofocus;
    const S = P == null ? void 0 : P.find((_) => _.autofocus);
    S ? e.autofocusChild = S.key : delete e.autofocusChild;
  }
  e.props = y, e.slots = f, e.children = P;
}), AC = Vt((e, t, a) => {
  Object.assign(e, a.messages, t);
}), TC = Vt((e, t) => {
  for (const a of t) {
    const r = (
      /** @type {number} */
      a.key
    );
    a.data === void 0 ? delete e[r] : e[r] = a.data;
  }
  for (; e.length && e[e.length - 1] === void 0; )
    e.pop();
}), jC = Vt((e, t, a, r, i) => {
  for (let n = 0; n < e.length; n++)
    typeof e[n] == "object" && e[n] !== null && !(e[n] instanceof File) && (e[n] = Po(e[n], t + "/" + n, a, r, i));
}), Po = Vt((e, t, a, r, i) => {
  if (r)
    for (const n of Object.keys(e))
      r.includes(n) || delete e[n];
  if (i)
    for (const n of i)
      delete e[n];
  if (a != null && a.length)
    for (const n of a)
      n.instancePath === t && (n.keyword === "additionalProperties" && delete e[n.params.additionalProperty], n.keyword === "unevaluatedProperties" && delete e[n.params.unevaluatedProperty]);
  for (const n of Object.keys(e))
    e[n] === void 0 && delete e[n];
}), Ff = Vt((e, t, a, r) => {
  if (a.dataPath === t) {
    if (a.data === void 0 || a.data === null) return;
    if (r && r.length > 1)
      for (const i of Object.keys(a.data))
        a.skeleton.propertyKeys.includes(i) && (!a.skeleton.propertyKeys.includes(i) && r.some((n) => n !== a.skeleton && n.propertyKeys.includes(i)) || (e[i] = /** @type {any} */
        a.data[i]));
    else
      Object.assign(e, a.data);
    for (const i of a.skeleton.propertyKeys)
      /** @type {any} */
      a.data[i] === void 0 && delete e[i];
  } else
    a.data === void 0 ? delete e[a.key] : e[a.key] = a.data;
}), MC = Vt((e, t, a, r) => {
  for (const i of Object.keys(t))
    a.includes(i) || r.some((n) => !!i.match($c(n))) && (e[i] = t[i]);
  for (const i of Object.keys(e))
    i in t || delete e[i];
}), DC = Vt((e, t, a = {}) => {
  for (const r in t)
    e[r] = a[r] ?? t[r];
  for (const r in a)
    e[r] = a[r];
  for (const r in e)
    !(r in t) && !(r in a) && delete e[r];
}), qf = Vt((e) => {
  e.readOnly = !0, e.summary = !0;
}), RC = Vt((e, t) => {
  t.title && e.titleDepth < 6 && (e.titleDepth += 1);
}), Kf = (e, t, a, r) => {
  var n, s, o, l;
  const i = ((s = (n = e.params) == null ? void 0 : n.errors) == null ? void 0 : s[0]) ?? e;
  return r === i.instancePath && ((o = i.params) == null ? void 0 : o.missingProperty) === t.key || i.instancePath === a && (i.schemaPath === t.pointer || i.schemaPath === t.refPointer) && !((l = i.params) != null && l.missingProperty);
}, sr = (e, t, a, r, i) => {
  var s, o;
  const n = ((o = (s = t.params) == null ? void 0 : s.errors) == null ? void 0 : o[0]) ?? t;
  if (!n.instancePath.startsWith(r)) return !1;
  if (n.schemaPath === a.pointer || n.schemaPath.startsWith(a.pointer + "/") || n.schemaPath === a.refPointer || n.schemaPath.startsWith(a.refPointer + "/")) return !0;
  if (a.children)
    for (const l of a.children) {
      const u = e.skeletonNodes[l];
      if (u && si(t, u.pointer, u.refPointer, r))
        return !0;
    }
  if (a.childrenTrees)
    for (const l of a.childrenTrees) {
      const u = e.skeletonTrees[l];
      if (u && si(t, u.root, u.refPointer, r))
        return !0;
    }
  return !1;
}, Hf = (e, t) => {
  var r, i;
  return (((i = (r = e.params) == null ? void 0 : r.errors) == null ? void 0 : i[0]) ?? e).instancePath.startsWith(t);
}, si = (e, t, a, r, i) => {
  var s, o;
  const n = ((o = (s = e.params) == null ? void 0 : s.errors) == null ? void 0 : o[0]) ?? e;
  return n.instancePath.startsWith(r) ? !!(n.schemaPath === t || n.schemaPath.startsWith(t + "/") || n.schemaPath === a || n.schemaPath.startsWith(a + "/")) : !1;
};
function ta(e, t, a, r, i, n, s, o, l) {
  if (t.ref === void 0) throw new Error("expression was not compiled : " + JSON.stringify(t));
  const u = e[t.ref];
  try {
    return t.pure ? u(a, a, r, r.context, i, n, r.readOnly, r.summary, s) : u(a, a, r, r.context, i, n, r.readOnly, r.summary, s, o, l);
  } catch (c) {
    const d = { expression: t, data: a, context: r.context, display: i };
    throw d[t.dataAlias] = a, t.pure || (d.rootData = o, d.parent = l), console.warn("json-layout: failed to evaluate expression", c, d), new Error("json-layout: failed to evaluate expression");
  }
}
const Rl = { comp: "none" }, NC = (e, t, a, r, i, n, s, o) => {
  if (_n(e)) {
    for (const l of e.switch)
      if (!l.if || ta(r.expressions, l.if, n, a, i, l, r.validates, s, o))
        return l;
  } else
    return t != null && t.if && !ta(r.expressions, t.if, n, a, i, e, r.validates, s, o) || e.if && !ta(r.expressions, e.if, n, a, i, e, r.validates, s, o) ? Rl : e;
  return Rl;
};
function or(e, t, a, r, i, n, s, o, l, u, c, d, m, v, p) {
  var J, ae, X, L, A, x, V, $, b, I, k, E, M, K, Y, le, se, Q, ue, G, de, $e, ke, Ve, Se, je, be, st, tt, ca, Wt, Gt, Ma, Da, Qn;
  Gi("createStateNode", i);
  let h = null;
  if (l.pure && !(p != null && p.error) && !(p != null && p.childError) && !t.noStateCache) {
    const Pe = v.validatedForm || v.validatedChildren.includes(i);
    if (h = [
      p,
      t,
      a,
      i,
      e.currentInput !== null && e.currentInput.startsWith(i),
      l,
      u,
      c.width,
      Pe,
      e.activatedItems,
      e.initial,
      ((J = e.rehydrateErrors) == null ? void 0 : J.length) ?? 0,
      d
    ], p && e.cacheKeys[i] && Rv(e.cacheKeys[i], h))
      return Gi("createStateNode cache hit", i), e._debugCache && (e._debugCache[i] = (e._debugCache[i] ?? []).concat(["hit"])), p.layout.comp === "list" && p.layout.getItems && Dl(i, "list component node is fully reused from cache, no fetch will be triggered"), p;
    Gi("createStateNode cache miss", i), e._debugCache && (e._debugCache[i] = (e._debugCache[i] ?? []).concat(["miss"]));
  } else
    Gi("createStateNode cache skip", i), e._debugCache && (e._debugCache[i] = (e._debugCache[i] ?? []).concat(["skip"]));
  const y = u && (mm(u) || eg(u)) ? u : a.normalizedLayouts[l.pointer], f = NC(y, u, t, a, c, d, e.rootData, m), [g, P] = VC(c, (u == null ? void 0 : u.cols) ?? f.cols), S = (u == null ? void 0 : u.slots) ?? f.slots, _ = f.getOptions ? DC(
    (p == null ? void 0 : p.options) ?? /** @type {import('./types.js').StateNodeOptions} */
    {},
    t,
    ta(a.expressions, f.getOptions, d, t, g, f, a.validates, e.rootData, m)
  ) : t;
  e.initial && t.autofocus && f.autofocus && f.comp !== "none" && (e.autofocusTarget = i);
  let j = d;
  j === null && !f.nullable && (j = void 0);
  const F = f.getDefaultData && qp(j, f, _) && e.currentInput !== i;
  if (f.getConstData)
    e.rehydrate || (j = ta(a.expressions, f.getConstData, j, _, g, f, a.validates, e.rootData, m));
  else if (F && f.getDefaultData && !e.rehydrate) {
    const Pe = ta(a.expressions, f.getDefaultData, j, _, g, f, a.validates, e.rootData, m);
    (j === void 0 || !is(Pe)) && (j = Pe);
  }
  let R;
  if (Xr(f, a.components)) {
    const Pe = RC(_, f);
    let We = l.propertyKeys;
    const Pt = _.readOnlyPropertiesMode === "remove" ? l.roPropertyKeys : [];
    R = [];
    let yt = e.autofocusTarget === i;
    for (let ft = 0; ft < f.children.length; ft++) {
      const Je = (
        /** @type {Record<string, unknown>} */
        j ?? {}
      ), at = f.children[ft];
      if (["remove", "hide"].includes(_.readOnlyPropertiesMode) && ((ae = l.roPropertyKeys) != null && ae.includes(
        /** @type {string} */
        at.key
      ))) continue;
      let Mt = l;
      const er = (X = l.children) == null ? void 0 : X.find((Ra) => a.skeletonNodes[Ra].key === at.key);
      if (er !== void 0 && (Mt = a.skeletonNodes[er]), Mt.condition && !ta(a.expressions, Mt.condition, Je, t, g, f, a.validates, e.rootData, m)) {
        if (at.key === "$then" || at.key === "$else") {
          const Ra = (L = l.children) == null ? void 0 : L.find((Mi) => a.skeletonNodes[Mi].key === (at.key === "$then" ? "$else" : "$then")), ji = Ra !== void 0 && a.skeletonNodes[Ra];
          if (ji)
            for (const Mi of Mt.propertyKeys)
              ji.propertyKeys.includes(Mi) || Pt.push(Mi);
        }
        continue;
      }
      const Uc = typeof at.key == "string" && at.key.startsWith("$"), fl = `${i}/${at.key}`;
      yt && (e.autofocusTarget = fl);
      const Wc = Uc ? Je : Je[at.key];
      let ml = Wc;
      if (at.key === "$patternProperties") {
        const Ra = (
          /** @type {import('@json-layout/vocabulary').List} */
          a.normalizedLayouts[Mt.pointer]
        );
        ml = MC(
          /** @type {Record<string, unknown>} */
          ((x = (A = p == null ? void 0 : p.children) == null ? void 0 : A.find((ji) => ji.key === "$patternProperties")) == null ? void 0 : x.data) ?? {},
          /** @type {Record<string, unknown>} */
          Je,
          l.propertyKeys,
          Ra.indexed ?? []
        ), We = We.concat(Object.keys(
          /** @type {any} */
          ml
        ));
      }
      const tr = or(
        e,
        Pe,
        a,
        at.key,
        fl,
        i,
        Uc ? s : `${s}/${at.key}`,
        s,
        Mt,
        at,
        g,
        ml,
        { parent: m, data: Je },
        v,
        (V = p == null ? void 0 : p.children) == null ? void 0 : V.find((Ra) => Ra.fullKey === fl)
      );
      (tr.autofocus || tr.autofocusChild !== void 0) && (yt = !1), tr.data !== Wc && (j = Ff(
        j ?? (typeof tr.key == "number" && r !== "$oneOf" ? [] : {}),
        s,
        tr,
        ($ = l.children) == null ? void 0 : $.map((Ra) => a.skeletonNodes[Ra])
      )), R.push(tr);
    }
    const Le = [!0, "unknown"].includes(_.removeAdditional) || (R == null ? void 0 : R.some((ft) => ft.key === "$patternProperties"));
    j = Po(
      /** @type {Record<string, unknown>} */
      j ?? {},
      s,
      e.additionalPropertiesErrors,
      Le ? We : void 0,
      Pt
    );
  }
  if (l.nullable && e.errors && (e.errors = e.errors.filter((Pe) => {
    var We;
    return Hf(Pe, s) ? !(Pe.keyword === "anyOf" || Pe.keyword === "type" && ((We = Pe.params) == null ? void 0 : We.type) === "null") : !0;
  })), r === "$oneOf" && l.childrenTrees) {
    let Pe = (
      /** @type {number} */
      e.activatedItems[i]
    );
    const We = (b = l.childrenTrees) == null ? void 0 : b.findIndex((Pt) => a.validates[a.skeletonTrees[Pt].refPointer](d));
    if (Pe === void 0 && (l.discriminator !== void 0 && We === -1 ? Pe = (I = l.childrenTrees) == null ? void 0 : I.findIndex((Pt) => l.discriminator !== void 0 && (d == null ? void 0 : d[l.discriminator]) !== void 0 && d[l.discriminator] === a.skeletonTrees[Pt].discriminatorValue) : Pe = We), Pe !== -1) {
      const Pt = a.skeletonTrees[l.childrenTrees[Pe]], yt = a.skeletonNodes[Pt.root];
      i in e.activatedItems || (e.autoActivatedItems[i] = Pe), e.errors = (k = e.errors) == null ? void 0 : k.filter((Je) => !(Kf(Je, l, s, o) || sr(a, Je, l, s) && !si(Je, yt.pointer, yt.refPointer, s))), (E = e.additionalPropertiesErrors) != null && E.length && (e.additionalPropertiesErrors = (M = e.additionalPropertiesErrors) == null ? void 0 : M.filter((Je) => !Hf(Je, s) || si(Je, yt.pointer, yt.refPointer, s) ? !0 : !(sr(a, Je, l, s) && !si(Je, yt.pointer, yt.refPointer, s) || We === -1)));
      const Le = `${i}/${Pe}`;
      e.autofocusTarget === i && (e.autofocusTarget = Le);
      const ft = or(
        e,
        _,
        a,
        Pe,
        Le,
        i,
        s,
        s,
        yt,
        null,
        g,
        j,
        { parent: m, data: j },
        v,
        (K = p == null ? void 0 : p.children) == null ? void 0 : K[0]
      );
      ft.data !== j && (j = ft.data), R = [ft];
    }
  }
  if (vm(f))
    if (f.indexed) {
      const Pe = (
        /** @type {Record<string, unknown>} */
        j ?? []
      ), We = f.listEditMode === "inline" ? _ : qf(_);
      R = [];
      let Pt = e.autofocusTarget === i;
      const yt = Object.keys(Pe);
      for (const Le of yt) {
        let ft = (
          /** @type {import('../index.js').SkeletonNode | null} */
          null
        );
        if (((Y = l == null ? void 0 : l.childrenTrees) == null ? void 0 : Y.length) === 1)
          ft = a.skeletonNodes[(le = a.skeletonTrees[l == null ? void 0 : l.childrenTrees[0]]) == null ? void 0 : le.root];
        else
          for (let Je = 0; Je < f.indexed.length; Je++) {
            const at = f.indexed[Je], Mt = (se = l == null ? void 0 : l.childrenTrees) == null ? void 0 : se[Je];
            if (!Mt) throw new Error(`missing skeleton tree for pattern ${at}`);
            Le.match($c(at)) && (ft = a.skeletonNodes[(Q = a.skeletonTrees[Mt]) == null ? void 0 : Q.root]);
          }
        if (ft) {
          const Je = `${i}/${Le}`;
          Pt && (e.autofocusTarget = Je);
          const at = Pe[Le], Mt = or(
            e,
            f.listEditMode === "inline-single" && e.activatedItems[i] === Le ? _ : We,
            a,
            Le,
            Je,
            i,
            `${s}/${Le}`,
            s,
            ft,
            null,
            g,
            at,
            { parent: m, data: Pe },
            v,
            (ue = p == null ? void 0 : p.children) == null ? void 0 : ue.find((er) => er.key === Le)
          );
          (Mt.autofocus || Mt.autofocusChild !== void 0) && (Pt = !1), R.push(Mt), Mt.data !== at && (j = Ff(
            j ?? {},
            s,
            Mt,
            (G = l.children) == null ? void 0 : G.map((er) => a.skeletonNodes[er])
          ));
        }
      }
    } else {
      const Pe = (
        /** @type {unknown[]} */
        j ?? []
      ), We = (
        /** @type {import('../index.js').SkeletonNode} */
        ((de = l == null ? void 0 : l.childrenTrees) == null ? void 0 : de[0]) && a.skeletonNodes[(ke = a.skeletonTrees[($e = l == null ? void 0 : l.childrenTrees) == null ? void 0 : $e[0]]) == null ? void 0 : ke.root]
      ), Pt = f.listEditMode === "inline" ? _ : qf(_);
      R = [];
      let yt = e.autofocusTarget === i;
      for (let Le = 0; Le < Pe.length; Le++) {
        const ft = Pe[Le], Je = `${i}/${Le}`;
        yt && (e.autofocusTarget = Je);
        const at = or(
          e,
          f.listEditMode === "inline-single" && e.activatedItems[i] === Le ? _ : Pt,
          a,
          Le,
          Je,
          i,
          `${s}/${Le}`,
          s,
          We,
          null,
          g,
          ft,
          { parent: m, data: Pe },
          v,
          (Ve = p == null ? void 0 : p.children) == null ? void 0 : Ve[Le]
        );
        (at.autofocus || at.autofocusChild !== void 0) && (yt = !1), R.push(at);
      }
      if (e.activatedItems[i] !== void 0 && (f.listEditMode === "menu" || f.listEditMode === "dialog")) {
        const Le = (
          /** @type number */
          e.activatedItems[i]
        ), ft = or(
          e,
          _,
          a,
          Le,
          `${i}/${Le}`,
          i,
          `${s}/${Le}`,
          s,
          We,
          null,
          g,
          Pe[Le],
          { parent: m, data: Pe },
          v,
          (Se = p == null ? void 0 : p.children) == null ? void 0 : Se[Le]
        );
        R.push(ft);
      }
    }
  let U = (je = e.errors) == null ? void 0 : je.find((Pe) => Kf(Pe, l, s, o));
  if (!U && !Xr(f, a.components) && f.comp !== "slot" && (U = (be = e.errors) == null ? void 0 : be.findLast((Pe) => sr(a, Pe, l, s))), !U && e.rehydrate && e.rehydrateErrors && (U = (st = e.rehydrateErrors) == null ? void 0 : st.findLast((Pe) => sr(a, Pe, l, s))), f.comp !== "none" && U && (OC(`${i} capture validation error on node`, U), e.errors = (tt = e.errors) == null ? void 0 : tt.filter((Pe) => U !== Pe), !Xr(f, a.components) && f.comp !== "slot" && (e.errors = (ca = e.errors) == null ? void 0 : ca.filter((Pe) => !sr(a, Pe, l, s))), e.rehydrate && e.rehydrateErrors && (e.rehydrateErrors = (Wt = e.rehydrateErrors) == null ? void 0 : Wt.filter((Pe) => !sr(a, Pe, l, s)))), !f.getConstData) {
    if (typeof ((Gt = R == null ? void 0 : R[0]) == null ? void 0 : Gt.key) == "number" && f.comp !== "one-of-select" && !f.indexed)
      j = TC(
        /** @type {unknown[]} */
        j ?? [],
        R
      );
    else if (Array.isArray(j) && Zr(f, a.components)) {
      const Pe = ((Ma = l.childrenTrees) == null ? void 0 : Ma[0]) && a.skeletonTrees[(Da = l.childrenTrees) == null ? void 0 : Da[0]], We = Pe && a.skeletonNodes[Pe.root] || null;
      j = jC(
        /** @type {Record<string, unknown>[]} */
        j ?? [],
        s,
        e.additionalPropertiesErrors,
        We != null && We.propertyKeys.length ? We == null ? void 0 : We.propertyKeys : void 0,
        _.readOnlyPropertiesMode === "remove" ? We == null ? void 0 : We.roPropertyKeys : void 0
      );
    } else typeof j == "object" && !(j instanceof File) && Zr(f, a.components) && (j = Po(
      /** @type {Record<string, unknown>} */
      j ?? {},
      s,
      e.additionalPropertiesErrors,
      l != null && l.propertyKeys.length ? l == null ? void 0 : l.propertyKeys : void 0,
      _.readOnlyPropertiesMode === "remove" ? l == null ? void 0 : l.roPropertyKeys : void 0
    ));
    j !== d && (Array.isArray(d) && Array.isArray(j) ? j = ys(d, j) : typeof d == "object" && typeof j == "object" && (j = n_(d, j))), !F && is(j) && (f.nullable ? (_.defaultOn !== "missing" || j !== void 0) && (j = null) : _.defaultOn !== "missing" && (j = void 0));
  }
  const W = v.validatedForm || v.validatedChildren.includes(i) || v.initialized === !1 && _.initialValidation === "always" || v.initialized === !1 && _.initialValidation === "withData" && !is(j);
  let D;
  f.getProps && (D = ta(a.expressions, f.getProps, j, _, g, f, a.validates, e.rootData, m));
  let O;
  if (Zr(f, a.components)) {
    if (f.items) O = f.items;
    else if ((Qn = f.getItems) != null && Qn.immutable && (p != null && p.itemsCacheKey)) O = p.itemsCacheKey;
    else if (f.getItems && Fo(f.getItems))
      if (f.getItems.immutable && (p != null && p.itemsCacheKey))
        O = p.itemsCacheKey;
      else
        try {
          O = ta(a.expressions, f.getItems, j, _, g, f, a.validates, e.rootData, m);
        } catch {
          O = null;
        }
    else if (f.getItems && qo(f.getItems))
      try {
        const Pe = ta(a.expressions, f.getItems.url, null, _, g, f, a.validates, e.rootData, m), We = IC(Pe, _.fetchBaseURL);
        if (f.getItems.searchParams)
          for (const [Pt, yt] of Object.entries(f.getItems.searchParams)) {
            let Le;
            try {
              Le = ta(a.expressions, yt, null, _, g, f, a.validates, e.rootData, m), Le && We.searchParams.set(Pt, Le);
            } catch {
            }
          }
        if (f.getItems.headers)
          for (const [Pt, yt] of Object.entries(f.getItems.headers)) {
            let Le;
            try {
              Le = ta(a.expressions, yt, null, _, g, f, a.validates, e.rootData, m), Le && We.searchParams.set("__jl__header__" + Pt, Le);
            } catch {
            }
          }
        O = We.href;
      } catch (Pe) {
        console.warn("failed to process URL for getItems", Pe), O = null;
      }
  }
  const B = tg(f, a.components) && !_.readOnly && !_.summary && e.autofocusTarget === i, N = f.comp === "list" && !f.indexed && O && (p == null ? void 0 : p.itemsCacheKey) !== O;
  N ? Dl(i, "list component with getItems expression registered for fetch", O) : f.comp === "list" && O && Dl(i, "list component with unchanged getItems cache key, no fetch will be triggered", O);
  const z = EC(
    p ?? /** @type {import('./types.js').StateNode} */
    {},
    r,
    i,
    n,
    s,
    o,
    l,
    f,
    g.width,
    P,
    j,
    U == null ? void 0 : U.message,
    W,
    _,
    B,
    N,
    D,
    S,
    O,
    R && ys(p == null ? void 0 : p.children, R)
  );
  return h && (h[0] = z, e.cacheKeys[i] = h), N && e.getItemsDataRequests.push(z), z;
}
const zC = Vt((e, t, a) => {
  if (t.dataPath === t.parentDataPath) {
    if (Object.assign(e, a), t.data && typeof a == "object" && a !== null)
      for (const r of Object.keys(t.data))
        r in a || delete e[r];
  } else
    e[t.key] = a;
}), LC = (e, t, a) => {
  const r = [];
  for (const i of a) {
    const n = t.find((s) => s.key === i.key);
    n ? r.push(e[t.indexOf(n)]) : r.push(i.value);
  }
  return ys(e, r);
}, Uf = ya("jl:validation"), BC = ya("jl:state-tree"), FC = Vt(
  (e, t, a) => {
    e.root = t, e.valid = a;
  }
);
function* Kp(e) {
  if (yield e, e.children)
    for (const t of e.children)
      yield* Kp(t);
}
function qC(e, t, a, r, i, n, s, o) {
  var d, m, v;
  BC("createStateTree", r.root);
  const l = a.validates[r.refPointer], u = l(n);
  if (l.errors) {
    Uf(`${r.root} new state tree initial validation errors`, l.errors, s);
    for (const p of l.errors)
      p.keyword !== "errorMessage" && a.localizeErrors([p]);
    if (e.errors = e.allErrors = l.errors, e.errors.length)
      for (const p of e.errors) {
        const h = ((m = (d = p.params) == null ? void 0 : d.errors) == null ? void 0 : m[0]) ?? p;
        h != null && h.parentSchema.__pointer && (h.schemaPath = h == null ? void 0 : h.parentSchema.__pointer, h.keyword === "oneOf" && (h.schemaPath += "/oneOf"));
      }
    [!0, "error"].includes(t.removeAdditional) && (e.additionalPropertiesErrors = l.errors.filter((p) => p.keyword === "additionalProperties" || p.keyword === "unevaluatedProperties"));
  }
  e.rehydrateErrors && (e.rehydrateErrors = e.rehydrateErrors.filter((p) => {
    var h;
    return (h = e.errors) == null ? void 0 : h.some((y) => y.instancePath === p.instancePath && y.schemaPath === p.schemaPath && y.keyword === p.keyword);
  })), e.rehydrate && ((v = e.rehydrateErrors) != null && v.length) && Uf(`${r.root} some validation errors were not captured by a leaf property, try to capture on a parent on rehydrate`, e.rehydrateErrors);
  const c = or(
    e,
    t,
    a,
    "",
    "",
    null,
    "",
    null,
    a.skeletonNodes[r.root],
    null,
    i,
    n,
    null,
    s,
    o == null ? void 0 : o.root
  );
  e.nodes = [], e.files = [];
  for (const p of Kp(c))
    e.nodes.push(p), p.data instanceof File && e.files.push({ dataPath: p.dataPath, file: p.data });
  return FC(o ?? /** @type {import('./types.js').StateTree} */
  {}, c, u);
}
function KC(e, t) {
  const a = { ...t.messages };
  return e.messages && Object.assign(a, e.messages), {
    context: {},
    width: 1e3,
    readOnly: !1,
    summary: !1,
    density: "default",
    indent: !1,
    titleDepth: 2,
    validateOn: "input",
    initialValidation: "withData",
    updateOn: "input",
    debounceInputMs: 300,
    defaultOn: "empty",
    removeAdditional: "error",
    autofocus: !1,
    readOnlyPropertiesMode: "show",
    fetchBaseURL: "/",
    fetchOptions: {},
    fetch: async (r, i) => (await fetch(r, i)).json(),
    onAutofocus: () => {
    },
    onUpdate: () => {
    },
    onData: () => {
    },
    noStateCache: !1,
    ...e,
    messages: a
  };
}
const Qa = (e) => !!e && e.layout.comp === "section", HC = (e, t) => !!e && Zr(e.layout, t), ea = ya("jl:data-binding"), UC = ya("jl:select-items"), dn = ya("jl:get-items"), wn = ya("jl:activated-items");
class WC {
  /**
   * @param {import("../index.js").CompiledLayout} compiledLayout
   * @param {import("../index.js").SkeletonTree} skeletonTree
   * @param {Partial<StatefulLayoutOptions>} options
   * @param {unknown} [data]
   */
  constructor(t, a, r, i) {
    /**
     * @private
     * @readonly
     * @type {import('../index.js').CompiledLayout}
     */
    Ee(this, "_compiledLayout");
    /**
     * @private
     * @type {StateTree}
     */
    // @ts-ignore
    Ee(this, "_stateTree");
    /**
     * @readonly
     * @type {import('../index.js').SkeletonTree}
     */
    Ee(this, "skeletonTree");
    /**
     * @private
     * @type {Display}
     */
    // @ts-ignore
    Ee(this, "_display");
    /**
     * @private
     * @type {import('./types.js').ValidationState}
     */
    // @ts-ignore
    Ee(this, "_validationState");
    /**
     * @private
     * @type {StatefulLayoutOptions}
     */
    // @ts-ignore
    Ee(this, "_options");
    /**
     * @private
     * @type {unknown}
     */
    Ee(this, "_data");
    /**
     * @private
     * @type {unknown}
     */
    Ee(this, "_previousData");
    /**
     * @private
     * @type {boolean}
     */
    Ee(this, "_dataWaitingForBlur", !1);
    /**
     * @private
     * @type {string | null}
     */
    Ee(this, "_currentInput", null);
    /**
     * @private
     * @type {CreateStateTreeContext}
     */
    // @ts-ignore
    Ee(this, "_lastCreateStateTreeContext");
    /**
     * @private
     * @type {string | null}
     */
    Ee(this, "_autofocusTarget");
    /**
     * @private
     * @type {string | null}
     */
    Ee(this, "_previousAutofocusTarget");
    /**
     * @type {FileRef[]}
     */
    Ee(this, "files", []);
    /**
     * @private
     * @type {null | [StateNode, unknown, boolean, number | undefined, ReturnType<typeof setTimeout>]}
     */
    Ee(this, "debouncedInput", null);
    /**
     * @private
     * @type {Record<string, {key: any, appliedQ: boolean, items: import('@json-layout/vocabulary').SelectItems}>}
     */
    Ee(this, "_itemsCache", {});
    /**
     * @type {Record<string, number | string>}
     */
    Ee(this, "activatedItems");
    ea("create stateful layout", t, a, r, i), this._compiledLayout = t, this.skeletonTree = a, this.prepareOptions(r), this._autofocusTarget = this.options.autofocus ? "" : null, this._previousAutofocusTarget = null, this._data = i, this._previousData = i, this.initValidationState(), this.activatedItems = {}, this.updateState(), this.handleAutofocus();
  }
  get compiledLayout() {
    return this._compiledLayout;
  }
  get stateTree() {
    return this._stateTree;
  }
  get display() {
    return this._display;
  }
  /**
   * @returns {import('./types.js').ValidationState}
   */
  get validationState() {
    return this._validationState;
  }
  /**
   * @private
   * @param {Partial<import('./types.js').ValidationState>} validationState
   */
  set validationState(t) {
    ea("set validationState", t), this._validationState = {
      initialized: t.initialized ?? this._validationState.initialized ?? !1,
      validatedForm: t.validatedForm ?? this._validationState.validatedForm ?? !1,
      validatedChildren: t.validatedChildren ?? this._validationState.validatedChildren ?? []
    };
  }
  /**
   * @returns {StatefulLayoutOptions}
   */
  get options() {
    return this._options;
  }
  /**
   * @param {Partial<StatefulLayoutOptions>} options
   */
  set options(t) {
    ea("apply main options setter", t), this.prepareOptions(t), this.updateState();
  }
  get data() {
    return this._data;
  }
  set data(t) {
    ea("apply main data setter", t), this._data = t, this.updateState();
  }
  /**
   * @private
   * @param {Partial<StatefulLayoutOptions>} options
   */
  prepareOptions(t) {
    this._options = KC(t, this.compiledLayout), this._display = this._display && this._display.width === this._options.width ? this._display : new _o(this._options.width);
  }
  /**
   * @private
   */
  initValidationState() {
    const t = this.options.initialValidation === "always";
    this._validationState = {
      initialized: t,
      validatedForm: t,
      validatedChildren: []
    };
  }
  /**
   * @private
   */
  updateState() {
    var a;
    this.createStateTree();
    let t = 0;
    for (; this._data !== (this._stateTree.root.data ?? null) || this._autofocusTarget !== this._lastCreateStateTreeContext.autofocusTarget || t === 0 && ((a = this._lastCreateStateTreeContext.errors) != null && a.length); ) {
      if (t += 1, t > 100)
        throw console.error("too many iterations in updateState, the data is probably not stable", this._data, this._stateTree.root.data), new Error("too many iterations in updateState, the data is probably not stable");
      ea("hydrating state tree changed the data, do it again", this._data, this._stateTree.root.data), this._data = this._stateTree.root.data ?? null, this._autofocusTarget = this._lastCreateStateTreeContext.autofocusTarget, this.createStateTree(!0);
    }
    !this._stateTree.valid && !this._stateTree.root.error && !this._stateTree.root.childError && console.error("JSON layout failed to assign validation error to a node", this._lastCreateStateTreeContext.errors), ea("emit update event", this._data, this._stateTree), this.options.onUpdate(this), this.emitData();
  }
  /**
   * @private
   */
  emitData() {
    !this._dataWaitingForBlur && this._data !== this._previousData && (ea("emit data event", this._data), this.options.onData(this._data), this._previousData = this._data);
  }
  /**
   * @private
   * @param {boolean} rehydrate
   */
  createStateTree(t = !1) {
    var r, i, n;
    const a = {
      activatedItems: this.activatedItems,
      autoActivatedItems: {},
      autofocusTarget: this._autofocusTarget,
      currentInput: this._currentInput,
      initial: !this._lastCreateStateTreeContext,
      rehydrate: t,
      cacheKeys: ((r = this._lastCreateStateTreeContext) == null ? void 0 : r.cacheKeys) ?? {},
      rootData: this._data,
      files: [],
      nodes: [],
      getItemsDataRequests: [],
      rehydrateErrors: t ? (i = this._lastCreateStateTreeContext) == null ? void 0 : i.errors : void 0
    };
    this._options._debugCache && (a._debugCache = ((n = this._lastCreateStateTreeContext) == null ? void 0 : n._debugCache) ?? {}), this._stateTree = qC(
      a,
      this._options,
      this._compiledLayout,
      this.skeletonTree,
      this._display,
      this._data,
      this._validationState,
      this._stateTree
    ), this._lastCreateStateTreeContext = a, this.validationState.initialized || (this.validationState = {
      initialized: !0,
      validatedChildren: a.nodes.filter((s) => s.validated).map((s) => s.fullKey)
    }), this.files = ys(this.files, a.files);
    for (const s in a.autoActivatedItems)
      wn("auto-activated item", s, a.autoActivatedItems[s]), this.activatedItems = Vt(this.activatedItems, (o) => {
        o[s] = a.autoActivatedItems[s];
      });
    for (const s of a.getItemsDataRequests)
      dn(s.fullKey, "automatic get items triggered"), this.getItems(s).then((o) => {
        dn(s.fullKey, "automatic get items, fetched results", o);
        const l = (
          /** @type {any[]} */
          s.data ?? []
        ), u = l.map((d) => this.prepareSelectItem(s, d)), c = LC(l, u, o);
        dn(s.fullKey, "automatic get items, input produced data", c), this.input(s, c);
      }, (o) => console.error("error fetching items", s.fullKey, o));
  }
  validate() {
    this.validationState.validatedForm || (this.validationState = { validatedForm: !0 }, this.updateState());
  }
  resetValidation() {
    ea("resetValidation"), this.initValidationState(), this.updateState();
  }
  /**
   * @returns {boolean}
   */
  get valid() {
    return this.stateTree.valid;
  }
  /**
   * @returns {string[]}
   */
  get errors() {
    return this._lastCreateStateTreeContext.nodes.filter((t) => !!t.error).map((t) => (
      /** @type {string} */
      t.error
    ));
  }
  /**
   * @returns {boolean}
   */
  get hasHiddenError() {
    return this._lastCreateStateTreeContext.nodes.findIndex((t) => t.error && !t.validated) !== -1;
  }
  /**
   * @private
   * @param {StateNode} node
   * @returns {import('../compile/types.js').ParentContextExpression | null}
   */
  getParentContextExpression(t) {
    const a = this._lastCreateStateTreeContext.nodes.find((r) => r.fullKey === t.parentFullKey);
    return a ? {
      parent: this.getParentContextExpression(a),
      data: a.data
    } : null;
  }
  /**
   * @param {StateNode} node
   * @param {import('@json-layout/vocabulary').Expression} expression
   * @param {any} data
   * @returns {any}
   */
  evalNodeExpression(t, a, r) {
    return ta(this.compiledLayout.expressions, a, r, t.options, new _o(t.width), t.layout, this.compiledLayout.validates, this._data, this.getParentContextExpression(t));
  }
  /**
   * @private
   * @param {StateNode} node
   * @param {unknown} data
   * @param {boolean} [validated]
   * @param {number} [activateKey]
   */
  applyInput(t, a, r, i) {
    var l;
    ea("apply input event from node", t, a);
    const n = t.layout.transformData && this.evalNodeExpression(t, t.layout.transformData, a);
    if ((l = this.compiledLayout.components[t.layout.comp]) != null && l.isFileInput) {
      if (n)
        a.toJSON = () => n;
      else if (a instanceof File) {
        const u = { name: a.name, size: a.size, type: a.type };
        a.toJSON = () => u;
      } else if (Array.isArray(a))
        for (const u of a) {
          const c = { name: u.name, size: u.size, type: u.type };
          u.toJSON = () => c;
        }
    } else n && (a = n);
    if (r && !this.validationState.validatedChildren.includes(t.fullKey) && (this.validationState = { validatedChildren: this.validationState.validatedChildren.concat([t.fullKey]) }), i !== void 0 && (wn(t.fullKey, "activated item on input", i), this.activatedItems = Vt(this.activatedItems, (u) => {
      u[t.fullKey] = i;
    }), this._autofocusTarget = t.fullKey + "/" + i), t.parentFullKey === null) {
      ea("update root state after input"), this._data = a, this.updateState();
      return;
    }
    const s = this._lastCreateStateTreeContext.nodes.find((u) => u.fullKey === t.parentFullKey);
    if (!s) throw new Error(`parent with key "${t.parentFullKey}" not found`);
    const o = zC(
      // WARN: this manner of creating empty object or array based on the type of the child key does not seem very safe
      // can we find a better way to discriminate ? maybe store an extra info on the the skeleton, like "emptyData" ?
      s.data ?? (typeof t.key == "number" && s.key !== "$oneOf" ? [] : {}),
      t,
      a ?? (t.skeleton.nullable ? null : void 0)
    );
    this.applyInput(s, o, r), i !== void 0 && this.handleAutofocus();
  }
  applyDebouncedInput() {
    this.debouncedInput && (clearTimeout(this.debouncedInput[4]), this.applyInput(this.debouncedInput[0], this.debouncedInput[1], this.debouncedInput[2], this.debouncedInput[3]), this.debouncedInput = null);
  }
  /**
   * @param {StateNode} node
   * @param {unknown} data
   * @param {number} [activateKey]
   */
  input(t, a, r) {
    var o, l;
    ea("received input event from node", t, a, r), t.layout.comp === "list" && this.deactivateItem(t, !0), this.debouncedInput && (this.debouncedInput[0] === t ? clearTimeout(this.debouncedInput[4]) : this.applyDebouncedInput());
    const i = (o = this.compiledLayout.components[t.layout.comp]) == null ? void 0 : o.emitsBlur;
    i && (this._currentInput = t.fullKey), t.options.updateOn === "blur" && i && (this._dataWaitingForBlur = !0);
    const n = t.options.validateOn === "input" || t.options.validateOn === "blur" && !i;
    ((l = this.compiledLayout.components[t.layout.comp]) == null ? void 0 : l.shouldDebounce) && t.options.debounceInputMs ? this.debouncedInput = [t, a, n, r, setTimeout(() => this.applyDebouncedInput(), t.options.debounceInputMs)] : this.applyInput(t, a, n, r);
  }
  /**
   * @param {StateNode} node
   */
  blur(t) {
    this._currentInput === t.fullKey && (this._currentInput = null), this.debouncedInput ? this.applyDebouncedInput() : t.layout.getDefaultData && qp(t.data, t.layout, t.options) && this.applyInput(t, t.data, !0), ea("received blur event from node", t), (t.options.validateOn === "input" || t.options.validateOn === "blur") && !this.validationState.validatedChildren.includes(t.fullKey) && (this.validationState = { validatedChildren: this.validationState.validatedChildren.concat([t.fullKey]) }, this.updateState()), this._dataWaitingForBlur && (this._dataWaitingForBlur = !1, this.emitData());
  }
  /**
   * @param {StateNode} node
   */
  validateNodeRecurse(t) {
    if (this.validationState = { validatedChildren: this.validationState.validatedChildren.concat([t.fullKey]) }, t.children)
      for (const a of t.children)
        this.validateNodeRecurse(a);
    this.updateState();
  }
  /**
   * @private
   * @param {StateNode} node
   * @param {string} q
   * @returns {Promise<{appliedQ: boolean, items: import('@json-layout/vocabulary').SelectItems}>}
   */
  async getItemsWithoutCache(t, a = "") {
    var s, o;
    if (!HC(t, this._compiledLayout.components))
      throw new Error("node is not a component with an items list");
    if (t.itemsCacheKey === null) return { appliedQ: !1, items: [] };
    let r = !1, i;
    if ((t.layout.items || t.layout.getItems && Fo(t.layout.getItems)) && (i = t.itemsCacheKey, dn(t.fullKey, "raw items from context or schema or getItems expression", i)), t.layout.getItems && qo(t.layout.getItems)) {
      dn(t.fullKey, "will fetch raw items from URL", t.itemsCacheKey);
      const l = new URL(t.itemsCacheKey);
      let u = null;
      for (const [m, v] of [...l.searchParams.entries()])
        m.startsWith("__jl__header__") && (u = u ?? {}, u[m.replace("__jl__header__", "")] = v, l.searchParams.delete(m));
      let c = t.layout.getItems.qSearchParam;
      if (!c)
        for (const m of l.searchParams.entries())
          m[1].includes("{q}") && (c = m[0]);
      c && (dn(t.fullKey, "apply search params", c), r = !0, a ? l.searchParams.set(c, ((s = l.searchParams.get(c)) == null ? void 0 : s.replace("{q}", a)) ?? a) : l.searchParams.delete(c));
      let d = typeof t.options.fetchOptions == "function" ? t.options.fetchOptions(l) : t.options.fetchOptions;
      u && (d = { ...d, headers: u }), i = await t.options.fetch(l.href, d), dn(t.fullKey, "raw items fetched from URL", i);
    }
    if (!i)
      throw new Error(`node ${t.fullKey} is missing items or getItems parameters`);
    if ((o = t.layout.getItems) != null && o.itemsResults && (i = this.evalNodeExpression(t, t.layout.getItems.itemsResults, i), dn(t.fullKey, "items passed through the getItems.itemsResults expression", i)), !Array.isArray(i)) throw new Error(`getItems didn't return an array for node ${t.fullKey}, you can define itemsResults to extract the array`);
    const n = i.map((l) => this.prepareSelectItem(t, l));
    return { appliedQ: r, items: n };
  }
  /**
   * @param {StateNode} node
   * @param {string} q
   * @returns {Promise<import('@json-layout/vocabulary').SelectItems>}
   */
  async getItems(t, a = "") {
    let r;
    return this._itemsCache[t.fullKey] && this._itemsCache[t.fullKey].key === t.itemsCacheKey && (!a || !this._itemsCache[t.fullKey].appliedQ) ? r = this._itemsCache[t.fullKey] : (r = await this.getItemsWithoutCache(t, a), (!a || !r.appliedQ) && (this._itemsCache[t.fullKey] = { key: t.itemsCacheKey, ...r })), a && !r.appliedQ ? r.items.filter((i) => i.title.toLowerCase().includes(a.toLowerCase())) : r.items;
  }
  /**
   * @param {StateNode} node
   * @param {any} rawItem
   * @returns {import('@json-layout/vocabulary').SelectItem}
   */
  prepareSelectItem(t, a) {
    var n, s, o, l, u, c, d, m, v, p, h;
    const r = {}, i = t.layout;
    return typeof a == "object" ? (r.header = (n = i.getItems) != null && n.itemHeader ? this.evalNodeExpression(t, i.getItems.itemHeader, a) : a.header, r.header === !0 ? r.title = (s = i.getItems) != null && s.itemTitle ? this.evalNodeExpression(t, i.getItems.itemTitle, a) : a.title : (delete r.header, r.value = (o = i.getItems) != null && o.itemValue ? this.evalNodeExpression(t, i.getItems.itemValue, a) : (l = i.getItems) != null && l.returnObjects ? a : a.value, r.key = (u = i.getItems) != null && u.itemKey ? this.evalNodeExpression(t, i.getItems.itemKey, a) : a.key, r.title = (c = i.getItems) != null && c.itemTitle ? this.evalNodeExpression(t, i.getItems.itemTitle, a) : a.title, r.value = r.value ?? r.key, r.key = r.key ?? r.value + "", r.title = r.title ?? r.key), !r.icon && a.icon && (r.icon = a.icon)) : (r.value = (d = i.getItems) != null && d.itemValue ? this.evalNodeExpression(t, i.getItems.itemValue, a) : a, r.key = (m = i.getItems) != null && m.itemKey ? this.evalNodeExpression(t, i.getItems.itemKey, a) : r.value, r.title = (v = i.getItems) != null && v.itemTitle ? this.evalNodeExpression(t, i.getItems.itemTitle, a) : r.value), (p = i.getItems) != null && p.itemIcon && (r.icon = this.evalNodeExpression(t, (h = i.getItems) == null ? void 0 : h.itemIcon, a)), UC("select item after applying itemValue/itemKey/itemTitle/itemIcon expressions", t.fullKey, r), /** @type {import('@json-layout/vocabulary').SelectItem} */
    r;
  }
  /**
   * @param {StateNode} node
   * @param {number | string} key
   */
  activateItem(t, a) {
    var r, i, n;
    if (wn(t.fullKey, "activate item explicitly", a), this.activatedItems = Vt(this.activatedItems, (s) => {
      s[t.fullKey] = a;
    }), this._autofocusTarget = t.fullKey + "/" + a, t.key === "$oneOf")
      if (t.layout.emptyData && t.data && typeof t.data == "object" && ((r = t.children) != null && r[0])) {
        const s = this._lastCreateStateTreeContext.nodes.find((l) => l.fullKey === t.parentFullKey);
        if (!s) throw new Error(`parent with key "${t.parentFullKey}" not found`);
        if (!s.data || typeof s.data != "object") throw new Error(`parent with key "${t.parentFullKey}" is missing data object`);
        const o = { ...s.data };
        wn(t.fullKey, "remove properties of previous oneOf activated item", (i = t.children) == null ? void 0 : i[0].fullKey);
        for (const l of (n = t.children) == null ? void 0 : n[0].skeleton.propertyKeys)
          delete o[l];
        this.input(s, o);
      } else
        this.input(t, void 0);
    else
      this.updateState();
    this.handleAutofocus();
  }
  /**
   * @param {string} fullKey
   */
  focusNode(t) {
    wn(t, "focus node explicitly"), this._autofocusTarget = t, this.updateState(), this.handleAutofocus();
  }
  /**
   * @param {StateNode} node
   * @param {boolean} skipUpdateState
   */
  deactivateItem(t, a = !1) {
    wn(t.fullKey, "deactivate item explicitly"), this.activatedItems = Vt(this.activatedItems, (r) => {
      for (const i in r)
        i.startsWith(t.fullKey) && (wn(t.fullKey, "item deactivation deletes a key", i), delete r[i]);
    }), a || this.updateState();
  }
  handleAutofocus() {
    const t = this._autofocusTarget;
    t !== null && this._autofocusTarget !== this._previousAutofocusTarget && (this._previousAutofocusTarget = t, setTimeout(() => {
      ea("emit autofocus event", t), this.options.onAutofocus(t);
    }));
  }
}
function GC(e) {
  return dy() ? (It(e), !0) : !1;
}
const YC = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
function XC(e) {
  return Es();
}
function ZC(e) {
  return Array.isArray(e) ? e : [e];
}
function JC(e, t = !0, a) {
  XC() ? ha(e, a) : t ? e() : qe(e);
}
const Hp = YC ? window : void 0;
function ur(e) {
  var t;
  const a = Tt(e);
  return (t = a == null ? void 0 : a.$el) != null ? t : a;
}
function QC() {
  const e = me(!1), t = Es();
  return t && ha(() => {
    e.value = !0;
  }, t), e;
}
function ex(e) {
  const t = QC();
  return C(() => (t.value, !!e()));
}
function tx(e, t, a = {}) {
  const { window: r = Hp, ...i } = a;
  let n;
  const s = ex(() => r && "ResizeObserver" in r), o = () => {
    n && (n.disconnect(), n = void 0);
  }, l = C(() => {
    const d = Tt(e);
    return Array.isArray(d) ? d.map((m) => ur(m)) : [ur(d)];
  }), u = fe(
    l,
    (d) => {
      if (o(), s.value && r) {
        n = new ResizeObserver(t);
        for (const m of d)
          m && n.observe(m, i);
      }
    },
    { immediate: !0, flush: "post" }
  ), c = () => {
    o(), u();
  };
  return GC(c), {
    isSupported: s,
    stop: c
  };
}
function ax(e, t = { width: 0, height: 0 }, a = {}) {
  const { window: r = Hp, box: i = "content-box" } = a, n = C(() => {
    var d, m;
    return (m = (d = ur(e)) == null ? void 0 : d.namespaceURI) == null ? void 0 : m.includes("svg");
  }), s = ee(t.width), o = ee(t.height), { stop: l } = tx(
    e,
    ([d]) => {
      const m = i === "border-box" ? d.borderBoxSize : i === "content-box" ? d.contentBoxSize : d.devicePixelContentBoxSize;
      if (r && n.value) {
        const v = ur(e);
        if (v) {
          const p = v.getBoundingClientRect();
          s.value = p.width, o.value = p.height;
        }
      } else if (m) {
        const v = ZC(m);
        s.value = v.reduce((p, { inlineSize: h }) => p + h, 0), o.value = v.reduce((p, { blockSize: h }) => p + h, 0);
      } else
        s.value = d.contentRect.width, o.value = d.contentRect.height;
    },
    a
  );
  JC(() => {
    const d = ur(e);
    d && (s.value = "offsetWidth" in d ? d.offsetWidth : t.width, o.value = "offsetHeight" in d ? d.offsetHeight : t.height);
  });
  const u = fe(
    () => ur(e),
    (d) => {
      s.value = d ? t.width : 0, o.value = d ? t.height : 0;
    }
  );
  function c() {
    l(), u();
  }
  return {
    width: s,
    height: o,
    stop: c
  };
}
const nx = {
  // as much as possible with use standard vuetify aliases https://vuetifyjs.com/en/features/icon-fonts/#built-in-aliases
  add: "$plus",
  calendar: "$calendar",
  close: "$close",
  edit: "$edit",
  sortDown: "$sortDesc",
  sortUp: "$sortAsc",
  // codes are copied from here https://raw.githubusercontent.com/Templarian/MaterialDesign-JS/refs/heads/master/mdi.js
  copy: "svg:M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z",
  paste: "svg:M19,20H5V4H7V7H17V4H19M12,2A1,1 0 0,1 13,3A1,1 0 0,1 12,4A1,1 0 0,1 11,3A1,1 0 0,1 12,2M19,2H14.82C14.4,0.84 13.3,0 12,0C10.7,0 9.6,0.84 9.18,2H5A2,2 0 0,0 3,4V20A2,2 0 0,0 5,22H19A2,2 0 0,0 21,20V4A2,2 0 0,0 19,2Z",
  alert: "svg:M13 14H11V9H13M13 18H11V16H13M1 21H23L12 2L1 21Z",
  clock: "svg:M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M16.2,16.2L11,13V7H12.5V12.2L17,14.9L16.2,16.2Z",
  delete: "svg:M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z",
  duplicate: "svg:M11,17H4A2,2 0 0,1 2,15V3A2,2 0 0,1 4,1H16V3H4V15H11V13L15,16L11,19V17M19,21V7H8V13H6V7A2,2 0 0,1 8,5H19A2,2 0 0,1 21,7V21A2,2 0 0,1 19,23H8A2,2 0 0,1 6,21V19H8V21H19Z",
  infoSymbol: "svg:M11 9H13V7H11V9M11 17H13V11H11V17Z",
  menu: "svg:M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z",
  sort: "svg:M17.45,17.55L12,23L6.55,17.55L7.96,16.14L11,19.17V4.83L7.96,7.86L6.55,6.45L12,1L17.45,6.45L16.04,7.86L13,4.83V19.17L16.04,16.14L17.45,17.55Z"
}, rx = {
  nodeComponents: {},
  plugins: [],
  pluginsOptions: {},
  confirmDeleteItem: !0
}, ix = (e, t, a, r, i, n, s, o, l, u) => {
  const c = { ...e == null ? void 0 : e.components }, d = { ...s, ...e == null ? void 0 : e.nodeComponents };
  if (e != null && e.plugins)
    for (const p of e.plugins)
      c[p.info.name] = p.info, d[p.info.name] = p.nodeComponent;
  const m = { ...e == null ? void 0 : e.icons, ...nx };
  return {
    ...rx,
    readOnly: !!(t && (t.isDisabled.value || t.isReadonly.value)),
    density: (
      /** @type {import("./types.js").VjsfOptions['density']} */
      i == null ? void 0 : i.density
    ),
    locale: r,
    ...e,
    onData: o,
    onUpdate: l,
    onAutofocus: u,
    context: e != null && e.context ? JSON.parse(JSON.stringify(e.context)) : {},
    width: Math.round(a ?? 0),
    vjsfSlots: { ...n },
    components: c,
    nodeComponents: d,
    icons: m
  };
}, Co = Symbol.for("vjsf:clipboard"), sx = () => {
  if (Fe(Co, null)) return;
  St(Co, {});
};
function lx(e) {
  const t = Fe(Co);
  if (!t) throw new Error("useClipboard called without prior createClipboard");
  return C({
    get() {
      const a = e();
      return t[a] = t[a] ?? ee(null), t[a].value;
    },
    set(a) {
      const r = e();
      t[r] = t[r] ?? ee(null), t[r].value = a;
    }
  });
}
const Dt = ya("vjsf:use-vjsf");
JS(!1);
const ox = {
  /**
   * @arg {any} data
  */
  "update:modelValue": (e) => !0,
  /**
   * @arg {import('../types.js').VjsfStatefulLayout} state
  */
  "update:state": (e) => !0
}, ux = (e, t, a, r, i, n, s, o) => {
  var U;
  const l = ee(null);
  sx(), Ye({}, "Vjsf");
  const u = (U = Fe(Symbol.for("vuetify:defaults"))) == null ? void 0 : U.value;
  Dt("provided defaults", u);
  const { width: c } = ax(l), d = me(null), m = me(null), v = Fe(Symbol.for("vuetify:form"), null), p = `vjsf-${Math.random().toString(36).substring(2, 9)}`;
  v ? v.register({
    id: p,
    validate: () => {
      var W, D;
      return (W = d.value) == null || W.validate(), ((D = d.value) == null ? void 0 : D.errors) || [];
    },
    reset: () => {
      var W;
      return (W = d.value) == null ? void 0 : W.resetValidation();
    },
    // TODO: also empty the data ?
    resetValidation: () => {
      var W;
      return (W = d.value) == null ? void 0 : W.resetValidation();
    },
    vm: Es()
  }) : console.warn("Vjsf should be wrapped in VForm");
  const h = fy(), y = (W) => {
    Dt("onStatefulLayoutUpdate", W), W && (m.value = W.stateTree, Dt("  -> emit update:state"), i("update:state", W), v && (W.valid ? v.update(p, !0, []) : W.hasHiddenError ? v.update(p, null, []) : v.update(p, !1, [])));
  };
  let f;
  const g = async (W) => {
    Dt("onDataUpdate", W), f = W, await qe(), f !== W ? Dt("onDataUpdate data changed while waiting for nextTick, do not emit") : (Dt("  -> emit update:modelValue", W), i("update:modelValue", W));
  }, P = () => {
    if (!l.value) return;
    const W = l.value.querySelector(".vjsf-input--autofocus");
    if (Dt("onAutofocus", W), W) {
      const D = W.querySelector("input") ?? W.querySelector('textarea:not([style*="display: none"]');
      D && D.focus();
    }
  }, S = dt(), _ = C(() => ix(a.value, v, c.value, S.current.value, u == null ? void 0 : u.global, h, { ...r }, g, y, P)), j = ee({});
  fe(_, (W) => {
    if (o != null && o.value) return;
    if (!s) throw new Error("produceCompileOptions function is not available");
    const D = s(j.value, W);
    D !== j.value && (Dt("new compileOptions", D), j.value = D);
  }, { immediate: !0 });
  const F = C(() => {
    if (o != null && o.value) return o == null ? void 0 : o.value;
    if (!n) throw new Error("compile function is not available");
    return n(e.value, j.value);
  }), R = () => {
    c.value && (d.value = /** @type {import('../types.js').VjsfStatefulLayout} */
    new WC(
      Qe(F.value),
      Qe(F.value.skeletonTrees[F.value.mainTree]),
      Qe(_.value),
      Qe(t.value)
    ));
  };
  return fe(_, (W) => {
    Dt("watch fullOptions", _), d.value ? (Dt("  -> update statefulLayout options"), d.value.options = Qe(W)) : (Dt("  -> init statefulLayout"), R());
  }), fe(t, (W) => {
    const D = Qe(W);
    d.value && d.value.data !== D && (Dt("modelValue changed from outside", D), Dt("  -> update statefulLayout data"), d.value.data = Qe(D));
  }), fe(F, (W) => {
    Dt("watch compiledLayout", W), Dt("  -> init statefulLayout"), R();
  }), { el: l, statefulLayout: d, stateTree: m };
}, cx = ["innerHTML"], Nr = {
  __name: "section-header",
  props: {
    node: {
      /** @type import('vue').PropType<import('../../types.js').VjsfNode> */
      type: Object,
      required: !0
    },
    hideTitle: {
      type: Boolean,
      default: !1
    }
  },
  setup(e) {
    const t = e, a = C(() => t.node.options.density === "compact" ? 6 : t.node.options.density === "comfortable" ? 7 : 8), r = ["text-h1", "text-h2", "text-h3", "text-h4", "text-h5", "text-h6", "text-subtitle-1", "text-subtitle-2"], i = C(() => {
      const n = t.node.options.titleDepth;
      return t.node.options.density === "compact" ? r[n + 2] : t.node.options.density === "comfortable" ? r[n + 1] : r[n];
    });
    return (n, s) => e.node.layout.title && !e.hideTitle || e.node.layout.subtitle || e.node.error && e.node.validated ? (ie(), Ne("div", {
      key: 0,
      class: te(`mb-${a.value - e.node.options.titleDepth} mt-${a.value - e.node.options.titleDepth}`)
    }, [
      e.node.layout.title && !e.hideTitle ? (ie(), pe(zo(`h${e.node.options.titleDepth}`), {
        key: 0,
        class: te(`${i.value}`)
      }, {
        default: re(() => [
          He(Xe(e.node.layout.title), 1)
        ]),
        _: 1
      }, 8, ["class"])) : Te("", !0),
      e.node.layout.subtitle ? (ie(), Ne("p", {
        key: 1,
        class: te(`text-subtitle mt-${a.value - e.node.options.titleDepth}`),
        innerHTML: e.node.layout.subtitle
      }, null, 10, cx)) : Te("", !0),
      e.node.error && e.node.validated ? (ie(), pe(H(Ap), {
        key: 2,
        type: "error",
        class: te(`mt-${a.value - e.node.options.titleDepth}`)
      }, {
        default: re(() => [
          He(Xe(e.node.error), 1)
        ]),
        _: 1
      }, 8, ["class"])) : Te("", !0)
    ], 2)) : Te("", !0);
  }
}, dx = {
  __name: "section",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfSectionNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    return Ye({}, "VjsfSection"), (t, a) => {
      var r, i;
      return ie(), Ne(ve, null, [
        w(Nr, { node: e.modelValue }, null, 8, ["node"]),
        w(H(Va), {
          dense: ((r = e.modelValue.options) == null ? void 0 : r.density) === "compact" || ((i = e.modelValue.options) == null ? void 0 : i.density) === "comfortable"
        }, {
          default: re(() => [
            (ie(!0), Ne(ve, null, $t(e.modelValue.children, (n) => (ie(), pe(Ia, {
              key: n.fullKey,
              "model-value": (
                /** @type import('../../types.js').VjsfNode */
                n
              ),
              "stateful-layout": e.statefulLayout
            }, null, 8, ["model-value", "stateful-layout"]))), 128))
          ]),
          _: 1
        }, 8, ["dense"])
      ], 64);
    };
  }
}, fx = Z({
  active: Boolean,
  disabled: Boolean,
  max: [Number, String],
  value: {
    type: [Number, String],
    default: 0
  },
  ..._e(),
  ...Xn({
    transition: {
      component: Dp
    }
  })
}, "VCounter"), Sc = oe()({
  name: "VCounter",
  functional: !0,
  props: fx(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = q(() => e.max ? `${e.value} / ${e.max}` : String(e.value));
    return ce(() => w(Ca, {
      transition: e.transition
    }, {
      default: () => [nt(T("div", {
        class: te(["v-counter", {
          "text-error": e.max && !e.disabled && parseFloat(e.value) > parseFloat(e.max)
        }, e.class]),
        style: ye(e.style)
      }, [a.default ? a.default({
        counter: r.value,
        max: e.max,
        value: e.value
      }) : r.value]), [[rn, e.active]])]
    })), {};
  }
}), mx = Z({
  text: String,
  onClick: Lt(),
  ..._e(),
  ...it()
}, "VLabel"), Ei = oe()({
  name: "VLabel",
  props: mx(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return ce(() => {
      var r;
      return T("label", {
        class: te(["v-label", {
          "v-label--clickable": !!e.onClick
        }, e.class]),
        style: ye(e.style),
        onClick: e.onClick
      }, [e.text, (r = a.default) == null ? void 0 : r.call(a)]);
    }), {};
  }
}), vx = Z({
  floating: Boolean,
  ..._e()
}, "VFieldLabel"), Yi = oe()({
  name: "VFieldLabel",
  props: vx(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return ce(() => w(Ei, {
      class: te(["v-field-label", {
        "v-field-label--floating": e.floating
      }, e.class]),
      style: ye(e.style)
    }, a)), {};
  }
});
function Up(e) {
  const {
    t
  } = dt();
  function a(r) {
    let {
      name: i,
      color: n,
      ...s
    } = r;
    const o = {
      prepend: "prependAction",
      prependInner: "prependAction",
      append: "appendAction",
      appendInner: "appendAction",
      clear: "clear"
    }[i], l = e[`onClick:${i}`];
    function u(d) {
      d.key !== "Enter" && d.key !== " " || (d.preventDefault(), d.stopPropagation(), Ws(l, new PointerEvent("click", d)));
    }
    const c = l && o ? t(`$vuetify.input.${o}`, e.label ?? "") : void 0;
    return w(Ae, ne({
      icon: e[`${i}Icon`],
      "aria-label": c,
      onClick: l,
      onKeydown: u,
      color: n
    }, s), null);
  }
  return {
    InputIcon: a
  };
}
const _c = Z({
  focused: Boolean,
  "onUpdate:focused": Lt()
}, "focus");
function Jn(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ka();
  const a = Ce(e, "focused"), r = q(() => ({
    [`${t}--focused`]: a.value
  }));
  function i() {
    a.value = !0;
  }
  function n() {
    a.value = !1;
  }
  return {
    focusClasses: r,
    isFocused: a,
    focus: i,
    blur: n
  };
}
const px = ["underlined", "outlined", "filled", "solo", "solo-inverted", "solo-filled", "plain"], rl = Z({
  appendInnerIcon: xe,
  bgColor: String,
  clearable: Boolean,
  clearIcon: {
    type: xe,
    default: "$clear"
  },
  active: Boolean,
  centerAffix: {
    type: Boolean,
    default: void 0
  },
  color: String,
  baseColor: String,
  details: Boolean,
  dirty: Boolean,
  disabled: {
    type: Boolean,
    default: null
  },
  glow: Boolean,
  error: Boolean,
  flat: Boolean,
  iconColor: [Boolean, String],
  label: String,
  persistentClear: Boolean,
  prependInnerIcon: xe,
  reverse: Boolean,
  singleLine: Boolean,
  variant: {
    type: String,
    default: "filled",
    validator: (e) => px.includes(e)
  },
  "onClick:clear": Lt(),
  "onClick:appendInner": Lt(),
  "onClick:prependInner": Lt(),
  ..._e(),
  ...vc(),
  ...Kt(),
  ...it()
}, "VField"), $r = oe()({
  name: "VField",
  inheritAttrs: !1,
  props: {
    id: String,
    ..._c(),
    ...rl()
  },
  emits: {
    "update:focused": (e) => !0,
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      emit: r,
      slots: i
    } = t;
    const {
      themeClasses: n
    } = ht(e), {
      loaderClasses: s
    } = Js(e), {
      focusClasses: o,
      isFocused: l,
      focus: u,
      blur: c
    } = Jn(e), {
      InputIcon: d
    } = Up(e), {
      roundedClasses: m
    } = Ht(e), {
      rtlClasses: v
    } = jt(), p = q(() => e.dirty || e.active), h = q(() => !!(e.label || i.label)), y = q(() => !e.singleLine && h.value), f = pa(), g = C(() => e.id || `input-${f}`), P = q(() => e.details ? `${g.value}-messages` : void 0), S = ee(), _ = ee(), j = ee(), F = C(() => ["plain", "underlined"].includes(e.variant)), R = C(() => e.error || e.disabled ? void 0 : p.value && l.value ? e.color : e.baseColor), U = C(() => {
      if (!(!e.iconColor || e.glow && !l.value))
        return e.iconColor === !0 ? R.value : e.iconColor;
    }), {
      backgroundColorClasses: W,
      backgroundColorStyles: D
    } = pt(() => e.bgColor), {
      textColorClasses: O,
      textColorStyles: B
    } = Bt(R);
    fe(p, (J) => {
      if (y.value && !Ln()) {
        const ae = S.value.$el, X = _.value.$el;
        requestAnimationFrame(() => {
          const L = ic(ae), A = X.getBoundingClientRect(), x = A.x - L.x, V = A.y - L.y - (L.height / 2 - A.height / 2), $ = A.width / 0.75, b = Math.abs($ - L.width) > 1 ? {
            maxWidth: ge($)
          } : void 0, I = getComputedStyle(ae), k = getComputedStyle(X), E = parseFloat(I.transitionDuration) * 1e3 || 150, M = parseFloat(k.getPropertyValue("--v-field-label-scale")), K = k.getPropertyValue("color");
          ae.style.visibility = "visible", X.style.visibility = "hidden", Wa(ae, {
            transform: `translate(${x}px, ${V}px) scale(${M})`,
            color: K,
            ...b
          }, {
            duration: E,
            easing: ci,
            direction: J ? "normal" : "reverse"
          }).finished.then(() => {
            ae.style.removeProperty("visibility"), X.style.removeProperty("visibility");
          });
        });
      }
    }, {
      flush: "post"
    });
    const N = C(() => ({
      isActive: p,
      isFocused: l,
      controlRef: j,
      blur: c,
      focus: u
    }));
    function z(J) {
      J.target !== document.activeElement && J.preventDefault();
    }
    return ce(() => {
      var x, V, $;
      const J = e.variant === "outlined", ae = !!(i["prepend-inner"] || e.prependInnerIcon), X = !!(e.clearable || i.clear) && !e.disabled, L = !!(i["append-inner"] || e.appendInnerIcon || X), A = () => i.label ? i.label({
        ...N.value,
        label: e.label,
        props: {
          for: g.value
        }
      }) : e.label;
      return T("div", ne({
        class: ["v-field", {
          "v-field--active": p.value,
          "v-field--appended": L,
          "v-field--center-affix": e.centerAffix ?? !F.value,
          "v-field--disabled": e.disabled,
          "v-field--dirty": e.dirty,
          "v-field--error": e.error,
          "v-field--glow": e.glow,
          "v-field--flat": e.flat,
          "v-field--has-background": !!e.bgColor,
          "v-field--persistent-clear": e.persistentClear,
          "v-field--prepended": ae,
          "v-field--reverse": e.reverse,
          "v-field--single-line": e.singleLine,
          "v-field--no-label": !A(),
          [`v-field--variant-${e.variant}`]: !0
        }, n.value, W.value, o.value, s.value, m.value, v.value, e.class],
        style: [D.value, e.style],
        onClick: z
      }, a), [T("div", {
        class: "v-field__overlay"
      }, null), w(pc, {
        name: "v-field",
        active: !!e.loading,
        color: e.error ? "error" : typeof e.loading == "string" ? e.loading : e.color
      }, {
        default: i.loader
      }), ae && T("div", {
        key: "prepend",
        class: "v-field__prepend-inner"
      }, [e.prependInnerIcon && w(d, {
        key: "prepend-icon",
        name: "prependInner",
        color: U.value
      }, null), (x = i["prepend-inner"]) == null ? void 0 : x.call(i, N.value)]), T("div", {
        class: "v-field__field",
        "data-no-activator": ""
      }, [["filled", "solo", "solo-inverted", "solo-filled"].includes(e.variant) && y.value && w(Yi, {
        key: "floating-label",
        ref: _,
        class: te([O.value]),
        floating: !0,
        for: g.value,
        "aria-hidden": !p.value,
        style: ye(B.value)
      }, {
        default: () => [A()]
      }), h.value && w(Yi, {
        key: "label",
        ref: S,
        for: g.value
      }, {
        default: () => [A()]
      }), ((V = i.default) == null ? void 0 : V.call(i, {
        ...N.value,
        props: {
          id: g.value,
          class: "v-field__input",
          "aria-describedby": P.value
        },
        focus: u,
        blur: c
      })) ?? T("div", {
        id: g.value,
        class: "v-field__input",
        "aria-describedby": P.value
      }, null)]), X && w(Rp, {
        key: "clear"
      }, {
        default: () => [nt(T("div", {
          class: "v-field__clearable",
          onMousedown: (b) => {
            b.preventDefault(), b.stopPropagation();
          }
        }, [w(ze, {
          defaults: {
            VIcon: {
              icon: e.clearIcon
            }
          }
        }, {
          default: () => [i.clear ? i.clear({
            ...N.value,
            props: {
              onFocus: u,
              onBlur: c,
              onClick: e["onClick:clear"],
              tabindex: -1
            }
          }) : w(d, {
            name: "clear",
            onFocus: u,
            onBlur: c,
            tabindex: -1
          }, null)]
        })]), [[rn, e.dirty]])]
      }), L && T("div", {
        key: "append",
        class: "v-field__append-inner"
      }, [($ = i["append-inner"]) == null ? void 0 : $.call(i, N.value), e.appendInnerIcon && w(d, {
        key: "append-icon",
        name: "appendInner",
        color: U.value
      }, null)]), T("div", {
        class: te(["v-field__outline", O.value]),
        style: ye(B.value)
      }, [J && T(ve, null, [T("div", {
        class: "v-field__outline__start"
      }, null), y.value && T("div", {
        class: "v-field__outline__notch"
      }, [w(Yi, {
        ref: _,
        floating: !0,
        for: g.value,
        "aria-hidden": !p.value
      }, {
        default: () => [A()]
      })]), T("div", {
        class: "v-field__outline__end"
      }, null)]), F.value && y.value && w(Yi, {
        ref: _,
        floating: !0,
        for: g.value,
        "aria-hidden": !p.value
      }, {
        default: () => [A()]
      })])]);
    }), {
      controlRef: j,
      fieldIconColor: U
    };
  }
}), hx = Z({
  active: Boolean,
  color: String,
  messages: {
    type: [Array, String],
    default: () => []
  },
  ..._e(),
  ...Xn({
    transition: {
      component: Dp,
      leaveAbsolute: !0,
      group: !0
    }
  })
}, "VMessages"), yx = oe()({
  name: "VMessages",
  props: hx(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = C(() => ot(e.messages)), {
      textColorClasses: i,
      textColorStyles: n
    } = Bt(() => e.color);
    return ce(() => w(Ca, {
      transition: e.transition,
      tag: "div",
      class: te(["v-messages", i.value, e.class]),
      style: ye([n.value, e.style])
    }, {
      default: () => [e.active && r.value.map((s, o) => T("div", {
        class: "v-messages__message",
        key: `${o}-${r.value}`
      }, [a.message ? a.message({
        message: s
      }) : s]))]
    })), {};
  }
}), Wp = Symbol.for("vuetify:form"), gx = Z({
  disabled: Boolean,
  fastFail: Boolean,
  readonly: Boolean,
  modelValue: {
    type: Boolean,
    default: null
  },
  validateOn: {
    type: String,
    default: "input"
  }
}, "form");
function bx(e) {
  const t = Ce(e, "modelValue"), a = q(() => e.disabled), r = q(() => e.readonly), i = me(!1), n = ee([]), s = ee([]);
  async function o() {
    const c = [];
    let d = !0;
    s.value = [], i.value = !0;
    for (const m of n.value) {
      const v = await m.validate();
      if (v.length > 0 && (d = !1, c.push({
        id: m.id,
        errorMessages: v
      })), !d && e.fastFail) break;
    }
    return s.value = c, i.value = !1, {
      valid: d,
      errors: s.value
    };
  }
  function l() {
    n.value.forEach((c) => c.reset());
  }
  function u() {
    n.value.forEach((c) => c.resetValidation());
  }
  return fe(n, () => {
    let c = 0, d = 0;
    const m = [];
    for (const v of n.value)
      v.isValid === !1 ? (d++, m.push({
        id: v.id,
        errorMessages: v.errorMessages
      })) : v.isValid === !0 && c++;
    s.value = m, t.value = d > 0 ? !1 : c === n.value.length ? !0 : null;
  }, {
    deep: !0,
    flush: "post"
  }), St(Wp, {
    register: (c) => {
      let {
        id: d,
        vm: m,
        validate: v,
        reset: p,
        resetValidation: h
      } = c;
      n.value.some((y) => y.id === d) && Ja(`Duplicate input name "${d}"`), n.value.push({
        id: d,
        validate: v,
        reset: p,
        resetValidation: h,
        vm: my(m),
        isValid: null,
        errorMessages: []
      });
    },
    unregister: (c) => {
      n.value = n.value.filter((d) => d.id !== c);
    },
    update: (c, d, m) => {
      const v = n.value.find((p) => p.id === c);
      v && (v.isValid = d, v.errorMessages = m);
    },
    isDisabled: a,
    isReadonly: r,
    isValidating: i,
    isValid: t,
    items: n,
    validateOn: q(() => e.validateOn)
  }), {
    errors: s,
    isDisabled: a,
    isReadonly: r,
    isValidating: i,
    isValid: t,
    items: n,
    validate: o,
    reset: l,
    resetValidation: u
  };
}
function zr(e) {
  const t = Fe(Wp, null);
  return {
    ...t,
    isReadonly: C(() => !!((e == null ? void 0 : e.readonly) ?? (t == null ? void 0 : t.isReadonly.value))),
    isDisabled: C(() => !!((e == null ? void 0 : e.disabled) ?? (t == null ? void 0 : t.isDisabled.value)))
  };
}
const kx = Symbol.for("vuetify:rules");
function wx(e) {
  const t = Fe(kx, null);
  if (!e) {
    if (!t)
      throw new Error("Could not find Vuetify rules injection");
    return t.aliases;
  }
  return (t == null ? void 0 : t.resolve(e)) ?? q(e);
}
const $x = Z({
  disabled: {
    type: Boolean,
    default: null
  },
  error: Boolean,
  errorMessages: {
    type: [Array, String],
    default: () => []
  },
  maxErrors: {
    type: [Number, String],
    default: 1
  },
  name: String,
  label: String,
  readonly: {
    type: Boolean,
    default: null
  },
  rules: {
    type: Array,
    default: () => []
  },
  modelValue: null,
  validateOn: String,
  validationValue: null,
  ..._c()
}, "validation");
function Sx(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ka(), a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : pa();
  const r = Ce(e, "modelValue"), i = C(() => e.validationValue === void 0 ? r.value : e.validationValue), n = zr(e), s = wx(() => e.rules), o = ee([]), l = me(!0), u = C(() => !!(ot(r.value === "" ? null : r.value).length || ot(i.value === "" ? null : i.value).length)), c = C(() => {
    var S;
    return (S = e.errorMessages) != null && S.length ? ot(e.errorMessages).concat(o.value).slice(0, Math.max(0, Number(e.maxErrors))) : o.value;
  }), d = C(() => {
    var j;
    let S = (e.validateOn ?? ((j = n.validateOn) == null ? void 0 : j.value)) || "input";
    S === "lazy" && (S = "input lazy"), S === "eager" && (S = "input eager");
    const _ = new Set((S == null ? void 0 : S.split(" ")) ?? []);
    return {
      input: _.has("input"),
      blur: _.has("blur") || _.has("input") || _.has("invalid-input"),
      invalidInput: _.has("invalid-input"),
      lazy: _.has("lazy"),
      eager: _.has("eager")
    };
  }), m = C(() => {
    var S;
    return e.error || (S = e.errorMessages) != null && S.length ? !1 : e.rules.length ? l.value ? o.value.length || d.value.lazy ? null : !0 : !o.value.length : !0;
  }), v = me(!1), p = C(() => ({
    [`${t}--error`]: m.value === !1,
    [`${t}--dirty`]: u.value,
    [`${t}--disabled`]: n.isDisabled.value,
    [`${t}--readonly`]: n.isReadonly.value
  })), h = kt("validation"), y = C(() => e.name ?? H(a));
  bi(() => {
    var S;
    (S = n.register) == null || S.call(n, {
      id: y.value,
      vm: h,
      validate: P,
      reset: f,
      resetValidation: g
    });
  }), Aa(() => {
    var S;
    (S = n.unregister) == null || S.call(n, y.value);
  }), ha(async () => {
    var S;
    d.value.lazy || await P(!d.value.eager), (S = n.update) == null || S.call(n, y.value, m.value, c.value);
  }), pn(() => d.value.input || d.value.invalidInput && m.value === !1, () => {
    fe(i, () => {
      if (i.value != null)
        P();
      else if (e.focused) {
        const S = fe(() => e.focused, (_) => {
          _ || P(), S();
        });
      }
    });
  }), pn(() => d.value.blur, () => {
    fe(() => e.focused, (S) => {
      S || P();
    });
  }), fe([m, c], () => {
    var S;
    (S = n.update) == null || S.call(n, y.value, m.value, c.value);
  });
  async function f() {
    r.value = null, await qe(), await g();
  }
  async function g() {
    l.value = !0, d.value.lazy ? o.value = [] : await P(!d.value.eager);
  }
  async function P() {
    let S = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
    const _ = [];
    v.value = !0;
    for (const j of s.value) {
      if (_.length >= Number(e.maxErrors ?? 1))
        break;
      const R = await (typeof j == "function" ? j : () => j)(i.value);
      if (R !== !0) {
        if (R !== !1 && typeof R != "string") {
          console.warn(`${R} is not a valid value. Rule functions must return boolean true or a string.`);
          continue;
        }
        _.push(R || "");
      }
    }
    return o.value = _, v.value = !1, l.value = S, o.value;
  }
  return {
    errorMessages: c,
    isDirty: u,
    isDisabled: n.isDisabled,
    isReadonly: n.isReadonly,
    isPristine: l,
    isValid: m,
    isValidating: v,
    reset: f,
    resetValidation: g,
    validate: P,
    validationClasses: p
  };
}
const gn = Z({
  id: String,
  appendIcon: xe,
  baseColor: String,
  centerAffix: {
    type: Boolean,
    default: !0
  },
  color: String,
  glow: Boolean,
  iconColor: [Boolean, String],
  prependIcon: xe,
  hideDetails: [Boolean, String],
  hideSpinButtons: Boolean,
  hint: String,
  persistentHint: Boolean,
  messages: {
    type: [Array, String],
    default: () => []
  },
  direction: {
    type: String,
    default: "horizontal",
    validator: (e) => ["horizontal", "vertical"].includes(e)
  },
  "onClick:prepend": Lt(),
  "onClick:append": Lt(),
  ..._e(),
  ...ga(),
  ...yn(la(), ["maxWidth", "minWidth", "width"]),
  ...it(),
  ...$x()
}, "VInput"), qt = oe()({
  name: "VInput",
  props: {
    ...gn()
  },
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      slots: r,
      emit: i
    } = t;
    const {
      densityClasses: n
    } = ja(e), {
      dimensionStyles: s
    } = oa(e), {
      themeClasses: o
    } = ht(e), {
      rtlClasses: l
    } = jt(), {
      InputIcon: u
    } = Up(e), c = pa(), d = C(() => e.id || `input-${c}`), {
      errorMessages: m,
      isDirty: v,
      isDisabled: p,
      isReadonly: h,
      isPristine: y,
      isValid: f,
      isValidating: g,
      reset: P,
      resetValidation: S,
      validate: _,
      validationClasses: j
    } = Sx(e, "v-input", d), F = C(() => {
      var N;
      return (N = e.errorMessages) != null && N.length || !y.value && m.value.length ? m.value : e.hint && (e.persistentHint || e.focused) ? e.hint : e.messages;
    }), R = q(() => F.value.length > 0), U = q(() => !e.hideDetails || e.hideDetails === "auto" && (R.value || !!r.details)), W = C(() => U.value ? `${d.value}-messages` : void 0), D = C(() => ({
      id: d,
      messagesId: W,
      isDirty: v,
      isDisabled: p,
      isReadonly: h,
      isPristine: y,
      isValid: f,
      isValidating: g,
      hasDetails: U,
      reset: P,
      resetValidation: S,
      validate: _
    })), O = q(() => e.error || e.disabled ? void 0 : e.focused ? e.color : e.baseColor), B = q(() => {
      if (e.iconColor)
        return e.iconColor === !0 ? O.value : e.iconColor;
    });
    return ce(() => {
      var J, ae, X, L;
      const N = !!(r.prepend || e.prependIcon), z = !!(r.append || e.appendIcon);
      return T("div", {
        class: te(["v-input", `v-input--${e.direction}`, {
          "v-input--center-affix": e.centerAffix,
          "v-input--focused": e.focused,
          "v-input--glow": e.glow,
          "v-input--hide-spin-buttons": e.hideSpinButtons
        }, n.value, o.value, l.value, j.value, e.class]),
        style: ye([s.value, e.style])
      }, [N && T("div", {
        key: "prepend",
        class: "v-input__prepend"
      }, [(J = r.prepend) == null ? void 0 : J.call(r, D.value), e.prependIcon && w(u, {
        key: "prepend-icon",
        name: "prepend",
        color: B.value
      }, null)]), r.default && T("div", {
        class: "v-input__control"
      }, [(ae = r.default) == null ? void 0 : ae.call(r, D.value)]), z && T("div", {
        key: "append",
        class: "v-input__append"
      }, [e.appendIcon && w(u, {
        key: "append-icon",
        name: "append",
        color: B.value
      }, null), (X = r.append) == null ? void 0 : X.call(r, D.value)]), U.value && T("div", {
        id: W.value,
        class: "v-input__details",
        role: "alert",
        "aria-live": "polite"
      }, [w(yx, {
        active: R.value,
        messages: F.value
      }, {
        message: r.message
      }), (L = r.details) == null ? void 0 : L.call(r, D.value)])]);
    }), {
      reset: P,
      resetValidation: S,
      validate: _,
      isValid: f,
      errorMessages: m
    };
  }
}), Gp = Z({
  autocomplete: String
}, "autocomplete");
function Yp(e) {
  const t = pa(), a = me(0), r = q(() => e.autocomplete === "suppress"), i = q(() => r.value ? `${e.name}-${t}-${a.value}` : e.name), n = q(() => r.value ? "off" : e.autocomplete);
  return {
    isSuppressing: r,
    fieldAutocomplete: n,
    fieldName: i,
    update: () => a.value = (/* @__PURE__ */ new Date()).getTime()
  };
}
function Xp(e) {
  function t(a, r) {
    var i, n;
    !e.autofocus || !a || (n = (i = r[0].target) == null ? void 0 : i.focus) == null || n.call(i);
  }
  return {
    onIntersect: t
  };
}
function _x(e, t) {
  if (!nc) return;
  const a = t.modifiers || {}, r = t.value, {
    handler: i,
    options: n
  } = typeof r == "object" ? r : {
    handler: r,
    options: {}
  }, s = new IntersectionObserver(function() {
    var d;
    let o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], l = arguments.length > 1 ? arguments[1] : void 0;
    const u = (d = e._observe) == null ? void 0 : d[t.instance.$.uid];
    if (!u) return;
    const c = o.some((m) => m.isIntersecting);
    i && (!a.quiet || u.init) && (!a.once || c || u.init) && i(c, o, l), c && a.once ? Zp(e, t) : u.init = !0;
  }, n);
  e._observe = Object(e._observe), e._observe[t.instance.$.uid] = {
    init: !1,
    observer: s
  }, s.observe(e);
}
function Zp(e, t) {
  var r;
  const a = (r = e._observe) == null ? void 0 : r[t.instance.$.uid];
  a && (a.observer.unobserve(e), delete e._observe[t.instance.$.uid]);
}
const hn = {
  mounted: _x,
  unmounted: Zp
}, Px = ["color", "file", "time", "date", "datetime-local", "week", "month"], Ai = Z({
  autofocus: Boolean,
  counter: [Boolean, Number, String],
  counterValue: [Number, Function],
  prefix: String,
  placeholder: String,
  persistentPlaceholder: Boolean,
  persistentCounter: Boolean,
  suffix: String,
  role: String,
  type: {
    type: String,
    default: "text"
  },
  modelModifiers: Object,
  ...Gp(),
  ...gn(),
  ...rl()
}, "VTextField"), Oa = oe()({
  name: "VTextField",
  directives: {
    vIntersect: hn
  },
  inheritAttrs: !1,
  props: Ai(),
  emits: {
    "click:control": (e) => !0,
    "mousedown:control": (e) => !0,
    "update:focused": (e) => !0,
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      emit: r,
      slots: i
    } = t;
    const n = Ce(e, "modelValue"), {
      isFocused: s,
      focus: o,
      blur: l
    } = Jn(e), {
      onIntersect: u
    } = Xp(e), c = C(() => typeof e.counterValue == "function" ? e.counterValue(n.value) : typeof e.counterValue == "number" ? e.counterValue : (n.value ?? "").toString().length), d = C(() => {
      if (a.maxlength) return a.maxlength;
      if (!(!e.counter || typeof e.counter != "number" && typeof e.counter != "string"))
        return e.counter;
    }), m = C(() => ["plain", "underlined"].includes(e.variant)), v = ee(), p = ee(), h = ee(), y = Yp(e), f = C(() => Px.includes(e.type) || e.persistentPlaceholder || s.value || e.active);
    function g() {
      y.isSuppressing.value && y.update(), s.value || o(), qe(() => {
        var F;
        h.value !== document.activeElement && ((F = h.value) == null || F.focus());
      });
    }
    function P(F) {
      r("mousedown:control", F), F.target !== h.value && (g(), F.preventDefault());
    }
    function S(F) {
      r("click:control", F);
    }
    function _(F, R) {
      F.stopPropagation(), g(), qe(() => {
        n.value = null, R(), Ws(e["onClick:clear"], F);
      });
    }
    function j(F) {
      var U;
      const R = F.target;
      if (n.value = R.value, (U = e.modelModifiers) != null && U.trim && ["text", "search", "password", "tel", "url"].includes(e.type)) {
        const W = [R.selectionStart, R.selectionEnd];
        qe(() => {
          R.selectionStart = W[0], R.selectionEnd = W[1];
        });
      }
    }
    return ce(() => {
      const F = !!(i.counter || e.counter !== !1 && e.counter != null), R = !!(F || i.details), [U, W] = Wn(a), {
        modelValue: D,
        ...O
      } = qt.filterProps(e), B = $r.filterProps(e);
      return w(qt, ne({
        ref: v,
        modelValue: n.value,
        "onUpdate:modelValue": (N) => n.value = N,
        class: ["v-text-field", {
          "v-text-field--prefixed": e.prefix,
          "v-text-field--suffixed": e.suffix,
          "v-input--plain-underlined": m.value
        }, e.class],
        style: e.style
      }, U, O, {
        centerAffix: !m.value,
        focused: s.value
      }), {
        ...i,
        default: (N) => {
          let {
            id: z,
            isDisabled: J,
            isDirty: ae,
            isReadonly: X,
            isValid: L,
            hasDetails: A,
            reset: x
          } = N;
          return w($r, ne({
            ref: p,
            onMousedown: P,
            onClick: S,
            "onClick:clear": (V) => _(V, x),
            "onClick:prependInner": e["onClick:prependInner"],
            "onClick:appendInner": e["onClick:appendInner"],
            role: e.role
          }, ut(B, ["onClick:clear"]), {
            id: z.value,
            active: f.value || ae.value,
            dirty: ae.value || e.dirty,
            disabled: J.value,
            focused: s.value,
            details: A.value,
            error: L.value === !1
          }), {
            ...i,
            default: (V) => {
              let {
                props: {
                  class: $,
                  ...b
                }
              } = V;
              const I = nt(T("input", ne({
                ref: h,
                value: n.value,
                onInput: j,
                autofocus: e.autofocus,
                readonly: X.value,
                disabled: J.value,
                name: y.fieldName.value,
                autocomplete: y.fieldAutocomplete.value,
                placeholder: e.placeholder,
                size: 1,
                role: e.role,
                type: e.type,
                onFocus: o,
                onBlur: l
              }, b, W), null), [[hn, {
                handler: u
              }, null, {
                once: !0
              }]]);
              return T(ve, null, [e.prefix && T("span", {
                class: "v-text-field__prefix"
              }, [T("span", {
                class: "v-text-field__prefix__text"
              }, [e.prefix])]), i.default ? T("div", {
                class: te($),
                "data-no-activator": ""
              }, [i.default(), I]) : vy(I, {
                class: $
              }), e.suffix && T("span", {
                class: "v-text-field__suffix"
              }, [T("span", {
                class: "v-text-field__suffix__text"
              }, [e.suffix])])]);
            }
          });
        },
        details: R ? (N) => {
          var z;
          return T(ve, null, [(z = i.details) == null ? void 0 : z.call(i, N), F && T(ve, null, [T("span", null, null), w(Sc, {
            active: e.persistentCounter || s.value,
            value: c.value,
            max: d.value,
            disabled: e.disabled
          }, i.counter)])]);
        } : void 0
      });
    }), Ut({}, v, p, h);
  }
}), Wf = {
  fieldPropsCompact: {
    hideDetails: "auto"
  },
  fieldPropsReadOnly: { hideDetails: "auto", variant: "plain" }
};
function xo(e) {
  const t = { class: [] };
  for (const a of e)
    if (a)
      for (const r of Object.keys(a))
        r === "class" ? Array.isArray(a.class) ? t.class = t.class.concat(a.class) : t.class = [a.class] : t[Is(r)] = a[r];
  return t;
}
function wt(e, t, a = {}) {
  a.bindData === void 0 && (a.bindData = !0), a.isMainComp === void 0 && (a.isMainComp = !0);
  const r = C(() => e.value.options), i = C(() => e.value.skeleton), n = C(() => e.value.layout), s = C(() => e.value.data), o = C(() => e.value.error), l = C(() => e.value.validated), u = C(() => e.value.props), c = C(() => e.value.autofocus), d = C(() => e.value.children), m = C(() => typeof s.value == "string" && n.value.separator ? s.value.split(
    /** @type {string} */
    n.value.separator
  ) : s.value), v = ee();
  fe(m, (f) => {
    v.value = f;
  }, { immediate: !0 });
  const p = C(() => {
    const f = [];
    r.value.density === "compact" && f.push(Wf.fieldPropsCompact), r.value.readOnly && f.push(Wf.fieldPropsReadOnly), a.isMainComp && u.value && f.push(u.value);
    const g = xo(f);
    if (g.label = n.value.label, g.hint = n.value.hint, o.value && l.value && (g.errorMessages = o.value), r.value.readOnly && (g.disabled = !0, g.class.push("vjsf-input--readonly")), c.value && g.class.push("vjsf-input--autofocus"), a.layoutPropsMap)
      for (const P of a.layoutPropsMap)
        typeof P == "string" ? P in n.value && (g[P] = n.value[P]) : P[1] in n.value && (g[P[0]] = n.value[P[1]]);
    return a.bindData && (g["onUpdate:modelValue"] = (P) => {
      const S = Array.isArray(P) && n.value.separator ? P.join(
        /** @type {string} */
        n.value.separator
      ) : P;
      return v.value = S, t.input(e.value, S);
    }), g.onBlur = () => t.blur(e.value), g;
  }), h = C(() => {
    const f = [{ density: r.value.density }];
    return a.isMainComp && f.push(n.value.props), xo(f);
  }), y = C(() => {
    if (!n.value.slots) return {};
    const f = {};
    for (const [g, P] of Object.entries(n.value.slots))
      f[g] = () => De(Yr, { layoutSlot: P, node: e.value, statefulLayout: t });
    return f;
  });
  return { localData: v, inputProps: p, compProps: h, compSlots: y, options: r, skeleton: i, layout: n, data: s, children: d };
}
const Cx = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfTextFieldNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfTextField");
    const { inputProps: t, localData: a, compSlots: r } = wt(
      q(e, "modelValue"),
      e.statefulLayout,
      { layoutPropsMap: ["placeholder"] }
    );
    return () => De(Oa, { ...t.value, modelValue: a.value }, r.value);
  }
}), xx = Z({
  autoGrow: Boolean,
  autofocus: Boolean,
  counter: [Boolean, Number, String],
  counterValue: Function,
  prefix: String,
  placeholder: String,
  persistentPlaceholder: Boolean,
  persistentCounter: Boolean,
  noResize: Boolean,
  rows: {
    type: [Number, String],
    default: 5,
    validator: (e) => !isNaN(parseFloat(e))
  },
  maxRows: {
    type: [Number, String],
    validator: (e) => !isNaN(parseFloat(e))
  },
  suffix: String,
  modelModifiers: Object,
  ...Gp(),
  ...gn(),
  ...rl()
}, "VTextarea"), Vx = oe()({
  name: "VTextarea",
  directives: {
    vIntersect: hn
  },
  inheritAttrs: !1,
  props: xx(),
  emits: {
    "click:control": (e) => !0,
    "mousedown:control": (e) => !0,
    "update:focused": (e) => !0,
    "update:modelValue": (e) => !0,
    "update:rows": (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      emit: r,
      slots: i
    } = t;
    const n = Ce(e, "modelValue"), {
      isFocused: s,
      focus: o,
      blur: l
    } = Jn(e), {
      onIntersect: u
    } = Xp(e), c = C(() => typeof e.counterValue == "function" ? e.counterValue(n.value) : (n.value || "").toString().length), d = C(() => {
      if (a.maxlength) return a.maxlength;
      if (!(!e.counter || typeof e.counter != "number" && typeof e.counter != "string"))
        return e.counter;
    }), m = ee(), v = ee(), p = me(""), h = ee(), y = Yp(e), f = C(() => e.persistentPlaceholder || s.value || e.active);
    function g() {
      var O;
      y.isSuppressing.value && y.update(), h.value !== document.activeElement && ((O = h.value) == null || O.focus()), s.value || o();
    }
    function P(O) {
      g(), r("click:control", O);
    }
    function S(O) {
      r("mousedown:control", O);
    }
    function _(O) {
      O.stopPropagation(), g(), qe(() => {
        n.value = "", Ws(e["onClick:clear"], O);
      });
    }
    function j(O) {
      var N;
      const B = O.target;
      if (n.value = B.value, (N = e.modelModifiers) != null && N.trim) {
        const z = [B.selectionStart, B.selectionEnd];
        qe(() => {
          B.selectionStart = z[0], B.selectionEnd = z[1];
        });
      }
    }
    const F = ee(), R = ee(Number(e.rows)), U = C(() => ["plain", "underlined"].includes(e.variant));
    At(() => {
      e.autoGrow || (R.value = Number(e.rows));
    });
    function W() {
      e.autoGrow && qe(() => {
        if (!F.value || !v.value) return;
        const O = getComputedStyle(F.value), B = getComputedStyle(v.value.$el), N = parseFloat(O.getPropertyValue("--v-field-padding-top")) + parseFloat(O.getPropertyValue("--v-input-padding-top")) + parseFloat(O.getPropertyValue("--v-field-padding-bottom")), z = F.value.scrollHeight, J = parseFloat(O.lineHeight), ae = Math.max(parseFloat(e.rows) * J + N, parseFloat(B.getPropertyValue("--v-input-control-height"))), X = parseFloat(e.maxRows) * J + N || 1 / 0, L = lt(z ?? 0, ae, X);
        R.value = Math.floor((L - N) / J), p.value = ge(L);
      });
    }
    ha(W), fe(n, W), fe(() => e.rows, W), fe(() => e.maxRows, W), fe(() => e.density, W), fe(R, (O) => {
      r("update:rows", O);
    });
    let D;
    return fe(F, (O) => {
      O ? (D = new ResizeObserver(W), D.observe(F.value)) : D == null || D.disconnect();
    }), Aa(() => {
      D == null || D.disconnect();
    }), ce(() => {
      const O = !!(i.counter || e.counter || e.counterValue), B = !!(O || i.details), [N, z] = Wn(a), {
        modelValue: J,
        ...ae
      } = qt.filterProps(e), X = {
        ...$r.filterProps(e),
        "onClick:clear": _
      };
      return w(qt, ne({
        ref: m,
        modelValue: n.value,
        "onUpdate:modelValue": (L) => n.value = L,
        class: ["v-textarea v-text-field", {
          "v-textarea--prefixed": e.prefix,
          "v-textarea--suffixed": e.suffix,
          "v-text-field--prefixed": e.prefix,
          "v-text-field--suffixed": e.suffix,
          "v-textarea--auto-grow": e.autoGrow,
          "v-textarea--no-resize": e.noResize || e.autoGrow,
          "v-input--plain-underlined": U.value
        }, e.class],
        style: e.style
      }, N, ae, {
        centerAffix: R.value === 1 && !U.value,
        focused: s.value
      }), {
        ...i,
        default: (L) => {
          let {
            id: A,
            isDisabled: x,
            isDirty: V,
            isReadonly: $,
            isValid: b,
            hasDetails: I
          } = L;
          return w($r, ne({
            ref: v,
            style: {
              "--v-textarea-control-height": p.value
            },
            onClick: P,
            onMousedown: S,
            "onClick:prependInner": e["onClick:prependInner"],
            "onClick:appendInner": e["onClick:appendInner"]
          }, X, {
            id: A.value,
            active: f.value || V.value,
            centerAffix: R.value === 1 && !U.value,
            dirty: V.value || e.dirty,
            disabled: x.value,
            focused: s.value,
            details: I.value,
            error: b.value === !1
          }), {
            ...i,
            default: (k) => {
              let {
                props: {
                  class: E,
                  ...M
                }
              } = k;
              return T(ve, null, [e.prefix && T("span", {
                class: "v-text-field__prefix"
              }, [e.prefix]), nt(T("textarea", ne({
                ref: h,
                class: E,
                value: n.value,
                onInput: j,
                autofocus: e.autofocus,
                readonly: $.value,
                disabled: x.value,
                placeholder: e.placeholder,
                rows: e.rows,
                name: y.fieldName.value,
                autocomplete: y.fieldAutocomplete.value,
                onFocus: g,
                onBlur: l
              }, M, z), null), [[hn, {
                handler: u
              }, null, {
                once: !0
              }]]), e.autoGrow && nt(T("textarea", {
                class: te([E, "v-textarea__sizer"]),
                id: `${M.id}-sizer`,
                "onUpdate:modelValue": (K) => n.value = K,
                ref: F,
                readonly: !0,
                "aria-hidden": "true"
              }, null), [[py, n.value]]), e.suffix && T("span", {
                class: "v-text-field__suffix"
              }, [e.suffix])]);
            }
          });
        },
        details: B ? (L) => {
          var A;
          return T(ve, null, [(A = i.details) == null ? void 0 : A.call(i, L), O && T(ve, null, [T("span", null, null), w(Sc, {
            active: e.persistentCounter || s.value,
            value: c.value,
            max: d.value,
            disabled: e.disabled
          }, i.counter)])]);
        } : void 0
      });
    }), Ut({}, m, v, h);
  }
}), Ix = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfTextareaNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfTextArea");
    const t = ee(null), { inputProps: a, localData: r, compSlots: i, options: n } = wt(
      q(e, "modelValue"),
      e.statefulLayout,
      { layoutPropsMap: ["placeholder", "rows"] }
    ), s = C(() => n.value.readOnly && n.value.summary ? 3 : void 0), o = C(() => {
      const l = { ...a.value };
      return l.ref = t, l.rows = l.rows ?? s.value, l.modelValue = r.value, l;
    });
    return fe(() => n.value.readOnly, (l) => {
      l && t.value && (t.value.scrollTop = 0);
    }), () => De(Vx, o.value, i.value);
  }
}), Jp = Symbol.for("vuetify:selection-control-group"), Pc = Z({
  color: String,
  disabled: {
    type: Boolean,
    default: null
  },
  defaultsTarget: String,
  error: Boolean,
  id: String,
  inline: Boolean,
  falseIcon: xe,
  trueIcon: xe,
  ripple: {
    type: [Boolean, Object],
    default: !0
  },
  multiple: {
    type: Boolean,
    default: null
  },
  name: String,
  readonly: {
    type: Boolean,
    default: null
  },
  modelValue: null,
  type: String,
  valueComparator: {
    type: Function,
    default: Et
  },
  ..._e(),
  ...ga(),
  ...it()
}, "SelectionControlGroup"), Ox = Z({
  ...Pc({
    defaultsTarget: "VSelectionControl"
  })
}, "VSelectionControlGroup"), Ex = oe()({
  name: "VSelectionControlGroup",
  props: Ox(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = Ce(e, "modelValue"), i = pa(), n = q(() => e.id || `v-selection-control-group-${i}`), s = q(() => e.name || n.value), o = /* @__PURE__ */ new Set();
    return St(Jp, {
      modelValue: r,
      forceUpdate: () => {
        o.forEach((l) => l());
      },
      onForceUpdate: (l) => {
        o.add(l), It(() => {
          o.delete(l);
        });
      }
    }), Ta({
      [e.defaultsTarget]: {
        color: q(() => e.color),
        disabled: q(() => e.disabled),
        density: q(() => e.density),
        error: q(() => e.error),
        inline: q(() => e.inline),
        modelValue: r,
        multiple: q(() => !!e.multiple || e.multiple == null && Array.isArray(r.value)),
        name: s,
        falseIcon: q(() => e.falseIcon),
        trueIcon: q(() => e.trueIcon),
        readonly: q(() => e.readonly),
        ripple: q(() => e.ripple),
        type: q(() => e.type),
        valueComparator: q(() => e.valueComparator)
      }
    }), ce(() => {
      var l;
      return T("div", {
        class: te(["v-selection-control-group", {
          "v-selection-control-group--inline": e.inline
        }, e.class]),
        style: ye(e.style),
        role: e.type === "radio" ? "radiogroup" : void 0
      }, [(l = a.default) == null ? void 0 : l.call(a)]);
    }), {};
  }
}), il = Z({
  label: String,
  baseColor: String,
  trueValue: null,
  falseValue: null,
  value: null,
  ..._e(),
  ...Pc()
}, "VSelectionControl");
function Ax(e) {
  const t = Fe(Jp, void 0), {
    densityClasses: a
  } = ja(e), r = Ce(e, "modelValue"), i = C(() => e.trueValue !== void 0 ? e.trueValue : e.value !== void 0 ? e.value : !0), n = C(() => e.falseValue !== void 0 ? e.falseValue : !1), s = C(() => !!e.multiple || e.multiple == null && Array.isArray(r.value)), o = C({
    get() {
      const v = t ? t.modelValue.value : r.value;
      return s.value ? ot(v).some((p) => e.valueComparator(p, i.value)) : e.valueComparator(v, i.value);
    },
    set(v) {
      if (e.readonly) return;
      const p = v ? i.value : n.value;
      let h = p;
      s.value && (h = v ? [...ot(r.value), p] : ot(r.value).filter((y) => !e.valueComparator(y, i.value))), t ? t.modelValue.value = h : r.value = h;
    }
  }), {
    textColorClasses: l,
    textColorStyles: u
  } = Bt(() => {
    if (!(e.error || e.disabled))
      return o.value ? e.color : e.baseColor;
  }), {
    backgroundColorClasses: c,
    backgroundColorStyles: d
  } = pt(() => o.value && !e.error && !e.disabled ? e.color : e.baseColor), m = C(() => o.value ? e.trueIcon : e.falseIcon);
  return {
    group: t,
    densityClasses: a,
    trueValue: i,
    falseValue: n,
    model: o,
    textColorClasses: l,
    textColorStyles: u,
    backgroundColorClasses: c,
    backgroundColorStyles: d,
    icon: m
  };
}
const qn = oe()({
  name: "VSelectionControl",
  directives: {
    vRipple: Ft
  },
  inheritAttrs: !1,
  props: il(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      slots: r
    } = t;
    const {
      group: i,
      densityClasses: n,
      icon: s,
      model: o,
      textColorClasses: l,
      textColorStyles: u,
      backgroundColorClasses: c,
      backgroundColorStyles: d,
      trueValue: m
    } = Ax(e), v = pa(), p = me(!1), h = me(!1), y = ee(), f = q(() => e.id || `input-${v}`), g = q(() => !e.disabled && !e.readonly);
    i == null || i.onForceUpdate(() => {
      y.value && (y.value.checked = o.value);
    });
    function P(F) {
      g.value && (p.value = !0, br(F.target, ":focus-visible") !== !1 && (h.value = !0));
    }
    function S() {
      p.value = !1, h.value = !1;
    }
    function _(F) {
      F.stopPropagation();
    }
    function j(F) {
      if (!g.value) {
        y.value && (y.value.checked = o.value);
        return;
      }
      e.readonly && i && qe(() => i.forceUpdate()), o.value = F.target.checked;
    }
    return ce(() => {
      var D, O;
      const F = r.label ? r.label({
        label: e.label,
        props: {
          for: f.value
        }
      }) : e.label, [R, U] = Wn(a), W = T("input", ne({
        ref: y,
        checked: o.value,
        disabled: !!e.disabled,
        id: f.value,
        onBlur: S,
        onFocus: P,
        onInput: j,
        "aria-disabled": !!e.disabled,
        "aria-label": e.label,
        type: e.type,
        value: m.value,
        name: e.name,
        "aria-checked": e.type === "checkbox" ? o.value : void 0
      }, U), null);
      return T("div", ne({
        class: ["v-selection-control", {
          "v-selection-control--dirty": o.value,
          "v-selection-control--disabled": e.disabled,
          "v-selection-control--error": e.error,
          "v-selection-control--focused": p.value,
          "v-selection-control--focus-visible": h.value,
          "v-selection-control--inline": e.inline
        }, n.value, e.class]
      }, R, {
        style: e.style
      }), [T("div", {
        class: te(["v-selection-control__wrapper", l.value]),
        style: ye(u.value)
      }, [(D = r.default) == null ? void 0 : D.call(r, {
        backgroundColorClasses: c,
        backgroundColorStyles: d
      }), nt(T("div", {
        class: te(["v-selection-control__input"])
      }, [((O = r.input) == null ? void 0 : O.call(r, {
        model: o,
        textColorClasses: l,
        textColorStyles: u,
        backgroundColorClasses: c,
        backgroundColorStyles: d,
        inputNode: W,
        icon: s.value,
        props: {
          onFocus: P,
          onBlur: S,
          id: f.value
        }
      })) ?? T(ve, null, [s.value && w(Ae, {
        key: "icon",
        icon: s.value
      }, null), W])]), [[Ft, !e.disabled && !e.readonly && e.ripple, null, {
        center: !0,
        circle: !0
      }]])]), F && w(Ei, {
        for: f.value,
        onClick: _
      }, {
        default: () => [F]
      })]);
    }), {
      isFocused: p,
      input: y
    };
  }
}), Qp = Z({
  indeterminate: Boolean,
  indeterminateIcon: {
    type: xe,
    default: "$checkboxIndeterminate"
  },
  ...il({
    falseIcon: "$checkboxOff",
    trueIcon: "$checkboxOn"
  })
}, "VCheckboxBtn"), Sr = oe()({
  name: "VCheckboxBtn",
  props: Qp(),
  emits: {
    "update:modelValue": (e) => !0,
    "update:indeterminate": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = Ce(e, "indeterminate"), i = Ce(e, "modelValue");
    function n(l) {
      r.value && (r.value = !1);
    }
    const s = q(() => r.value ? e.indeterminateIcon : e.falseIcon), o = q(() => r.value ? e.indeterminateIcon : e.trueIcon);
    return ce(() => {
      const l = ut(qn.filterProps(e), ["modelValue"]);
      return w(qn, ne(l, {
        modelValue: i.value,
        "onUpdate:modelValue": [(u) => i.value = u, n],
        class: ["v-checkbox-btn", e.class],
        style: e.style,
        type: "checkbox",
        falseIcon: s.value,
        trueIcon: o.value,
        "aria-checked": r.value ? "mixed" : void 0
      }), a);
    }), {};
  }
}), Tx = Z({
  ...gn(),
  ...ut(Qp(), ["inline"])
}, "VCheckbox"), eh = oe()({
  name: "VCheckbox",
  inheritAttrs: !1,
  props: Tx(),
  emits: {
    "update:modelValue": (e) => !0,
    "update:focused": (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      slots: r
    } = t;
    const i = Ce(e, "modelValue"), {
      isFocused: n,
      focus: s,
      blur: o
    } = Jn(e), l = ee(), u = pa();
    return ce(() => {
      const [c, d] = Wn(a), m = qt.filterProps(e), v = Sr.filterProps(e);
      return w(qt, ne({
        ref: l,
        class: ["v-checkbox", e.class]
      }, c, m, {
        modelValue: i.value,
        "onUpdate:modelValue": (p) => i.value = p,
        id: e.id || `checkbox-${u}`,
        focused: n.value,
        style: e.style
      }), {
        ...r,
        default: (p) => {
          let {
            id: h,
            messagesId: y,
            isDisabled: f,
            isReadonly: g,
            isValid: P
          } = p;
          return w(Sr, ne(v, {
            id: h.value,
            "aria-describedby": y.value,
            disabled: f.value,
            readonly: g.value
          }, d, {
            error: P.value === !1,
            modelValue: i.value,
            "onUpdate:modelValue": (S) => i.value = S,
            onFocus: s,
            onBlur: o
          }), r);
        }
      });
    }), Ut({}, l);
  }
}), jx = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfCheckboxNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfCheckbox");
    const { inputProps: t, localData: a, compSlots: r } = wt(q(e, "modelValue"), e.statefulLayout), i = C(() => {
      const n = { ...t.value };
      return "hideDetails" in t || (n.hideDetails = "auto"), n.modelValue = a.value, n;
    });
    return () => De(eh, i.value, r.value);
  }
}), Mx = Z({
  indeterminate: Boolean,
  inset: Boolean,
  flat: Boolean,
  loading: {
    type: [Boolean, String],
    default: !1
  },
  ...gn(),
  ...il()
}, "VSwitch"), th = oe()({
  name: "VSwitch",
  inheritAttrs: !1,
  props: Mx(),
  emits: {
    "update:focused": (e) => !0,
    "update:modelValue": (e) => !0,
    "update:indeterminate": (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      slots: r
    } = t;
    const i = Ce(e, "indeterminate"), n = Ce(e, "modelValue"), {
      loaderClasses: s
    } = Js(e), {
      isFocused: o,
      focus: l,
      blur: u
    } = Jn(e), c = ee(), d = ee(), m = Nv && window.matchMedia("(forced-colors: active)").matches, v = q(() => typeof e.loading == "string" && e.loading !== "" ? e.loading : e.color), p = pa(), h = q(() => e.id || `switch-${p}`);
    function y() {
      i.value && (i.value = !1);
    }
    function f(g) {
      var P, S;
      g.stopPropagation(), g.preventDefault(), (S = (P = c.value) == null ? void 0 : P.input) == null || S.click();
    }
    return ce(() => {
      const [g, P] = Wn(a), S = qt.filterProps(e), _ = qn.filterProps(e);
      return w(qt, ne({
        ref: d,
        class: ["v-switch", {
          "v-switch--flat": e.flat
        }, {
          "v-switch--inset": e.inset
        }, {
          "v-switch--indeterminate": i.value
        }, s.value, e.class]
      }, g, S, {
        modelValue: n.value,
        "onUpdate:modelValue": (j) => n.value = j,
        id: h.value,
        focused: o.value,
        style: e.style
      }), {
        ...r,
        default: (j) => {
          let {
            id: F,
            messagesId: R,
            isDisabled: U,
            isReadonly: W,
            isValid: D
          } = j;
          const O = {
            model: n,
            isValid: D
          };
          return w(qn, ne({
            ref: c
          }, _, {
            modelValue: n.value,
            "onUpdate:modelValue": [(B) => n.value = B, y],
            id: F.value,
            "aria-describedby": R.value,
            type: "checkbox",
            "aria-checked": i.value ? "mixed" : void 0,
            disabled: U.value,
            readonly: W.value,
            onFocus: l,
            onBlur: u
          }, P), {
            ...r,
            default: (B) => {
              let {
                backgroundColorClasses: N,
                backgroundColorStyles: z
              } = B;
              return T("div", {
                class: te(["v-switch__track", m ? void 0 : N.value]),
                style: ye(z.value),
                onClick: f
              }, [r["track-true"] && T("div", {
                key: "prepend",
                class: "v-switch__track-true"
              }, [r["track-true"](O)]), r["track-false"] && T("div", {
                key: "append",
                class: "v-switch__track-false"
              }, [r["track-false"](O)])]);
            },
            input: (B) => {
              let {
                inputNode: N,
                icon: z,
                backgroundColorClasses: J,
                backgroundColorStyles: ae
              } = B;
              return T(ve, null, [N, T("div", {
                class: te(["v-switch__thumb", {
                  "v-switch__thumb--filled": z || e.loading
                }, e.inset || m ? void 0 : J.value]),
                style: ye(e.inset ? void 0 : ae.value)
              }, [r.thumb ? w(ze, {
                defaults: {
                  VIcon: {
                    icon: z,
                    size: "x-small"
                  }
                }
              }, {
                default: () => [r.thumb({
                  ...O,
                  icon: z
                })]
              }) : w(Mp, null, {
                default: () => [e.loading ? w(pc, {
                  name: "v-switch",
                  active: !0,
                  color: D.value === !1 ? void 0 : v.value
                }, {
                  default: (X) => r.loader ? r.loader(X) : w(Sp, {
                    active: X.isActive,
                    color: X.color,
                    indeterminate: !0,
                    size: "16",
                    width: "2"
                  }, null)
                }) : z && w(Ae, {
                  key: String(z),
                  icon: z,
                  size: "x-small"
                }, null)]
              })])]);
            }
          });
        }
      });
    }), Ut({}, d);
  }
}), Dx = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfSwitchNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfSwitch");
    const { inputProps: t, localData: a, compSlots: r } = wt(q(e, "modelValue"), e.statefulLayout), i = C(() => {
      const n = { ...t.value };
      return "hideDetails" in t || (n.hideDetails = "auto"), n.modelValue = a.value, n;
    });
    return () => De(th, i.value, r.value);
  }
}), Rx = Z({
  color: String,
  inset: Boolean,
  length: [Number, String],
  opacity: [Number, String],
  thickness: [Number, String],
  vertical: Boolean,
  ..._e(),
  ...it()
}, "VDivider"), xa = oe()({
  name: "VDivider",
  props: Rx(),
  setup(e, t) {
    let {
      attrs: a,
      slots: r
    } = t;
    const {
      themeClasses: i
    } = ht(e), {
      textColorClasses: n,
      textColorStyles: s
    } = Bt(() => e.color), o = C(() => {
      const l = {};
      return e.length && (l[e.vertical ? "height" : "width"] = ge(e.length)), e.thickness && (l[e.vertical ? "borderRightWidth" : "borderTopWidth"] = ge(e.thickness)), l;
    });
    return ce(() => {
      const l = T("hr", {
        class: te([{
          "v-divider": !0,
          "v-divider--inset": e.inset,
          "v-divider--vertical": e.vertical
        }, i.value, n.value, e.class]),
        style: ye([o.value, s.value, {
          "--v-border-opacity": e.opacity
        }, e.style]),
        "aria-orientation": !a.role || a.role === "separator" ? e.vertical ? "vertical" : "horizontal" : void 0,
        role: `${a.role || "separator"}`
      }, null);
      return r.default ? T("div", {
        class: te(["v-divider__wrapper", {
          "v-divider__wrapper--vertical": e.vertical,
          "v-divider__wrapper--inset": e.inset
        }])
      }, [l, T("div", {
        class: "v-divider__content"
      }, [r.default()]), l]) : l;
    }), {};
  }
}), Nx = 50, zx = 500;
function Lx(e) {
  let {
    toggleUpDown: t
  } = e, a = -1, r = -1;
  It(n);
  function i(o) {
    n(), s(o), window.addEventListener("pointerup", n), document.addEventListener("blur", n), a = window.setTimeout(() => {
      r = window.setInterval(() => s(o), Nx);
    }, zx);
  }
  function n() {
    window.clearTimeout(a), window.clearInterval(r), window.removeEventListener("pointerup", n), document.removeEventListener("blur", n);
  }
  function s(o) {
    t(o === "up");
  }
  return {
    holdStart: i,
    holdStop: n
  };
}
const Bx = Z({
  controlVariant: {
    type: String,
    default: "default"
  },
  inset: Boolean,
  hideInput: Boolean,
  modelValue: {
    type: Number,
    default: null
  },
  min: {
    type: Number,
    default: Number.MIN_SAFE_INTEGER
  },
  max: {
    type: Number,
    default: Number.MAX_SAFE_INTEGER
  },
  step: {
    type: Number,
    default: 1
  },
  precision: {
    type: Number,
    default: 0
  },
  minFractionDigits: {
    type: Number,
    default: null
  },
  decimalSeparator: {
    type: String,
    validator: (e) => !e || e.length === 1
  },
  ...ut(Ai(), ["modelValue", "validationValue"])
}, "VNumberInput"), Fx = oe()({
  name: "VNumberInput",
  props: {
    ...Bx()
  },
  emits: {
    "update:focused": (e) => !0,
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = ee(), {
      holdStart: i,
      holdStop: n
    } = Lx({
      toggleUpDown: U
    }), s = zr(e), o = C(() => s.isDisabled.value || s.isReadonly.value), l = me(e.focused), {
      decimalSeparator: u
    } = dt(), c = C(() => {
      var x;
      return ((x = e.decimalSeparator) == null ? void 0 : x[0]) || u.value;
    });
    function d(x) {
      let V = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : e.precision, $ = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0;
      const b = V == null ? String(x) : x.toFixed(V);
      if (l.value && $)
        return Number(b).toString().replace(".", c.value);
      if (e.minFractionDigits === null || V !== null && V < e.minFractionDigits)
        return b.replace(".", c.value);
      let [I, k] = b.split(".");
      return k = (k ?? "").padEnd(e.minFractionDigits, "0").replace(new RegExp(`(?<=\\d{${e.minFractionDigits}})0+$`, "g"), ""), [I, k].filter(Boolean).join(c.value);
    }
    const m = Ce(e, "modelValue", null, (x) => x ?? null, (x) => x == null ? x ?? null : lt(Number(x), e.min, e.max)), v = me(null);
    At(() => {
      l.value && !o.value && Number(v.value) === m.value || (m.value == null ? v.value = null : isNaN(m.value) || (v.value = d(m.value)));
    });
    const p = C({
      get: () => v.value,
      set(x) {
        if (x === null || x === "") {
          m.value = null, v.value = null;
          return;
        }
        const V = Number(x.replace(c.value, "."));
        !isNaN(V) && V <= e.max && V >= e.min && (m.value = V, v.value = x);
      }
    }), h = C(() => o.value ? !1 : (m.value ?? 0) + e.step <= e.max), y = C(() => o.value ? !1 : (m.value ?? 0) - e.step >= e.min), f = C(() => e.hideInput ? "stacked" : e.controlVariant), g = q(() => f.value === "split" ? "$plus" : "$collapse"), P = q(() => f.value === "split" ? "$minus" : "$expand"), S = q(() => f.value === "split" ? "default" : "small"), _ = q(() => f.value === "stacked" ? "auto" : "100%"), j = {
      props: {
        onClick: O,
        onPointerup: B,
        onPointerdown: N,
        onPointercancel: B
      }
    }, F = {
      props: {
        onClick: O,
        onPointerup: B,
        onPointerdown: z,
        onPointercancel: B
      }
    };
    fe(() => e.precision, () => ae()), fe(() => e.minFractionDigits, () => ae()), ha(() => {
      J();
    });
    function R(x) {
      if (x == null) return 0;
      const V = x.toString(), $ = V.indexOf(".");
      return ~$ ? V.length - $ : 0;
    }
    function U() {
      let x = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
      if (o.value) return;
      if (m.value == null) {
        p.value = d(lt(0, e.min, e.max));
        return;
      }
      let V = Math.max(R(m.value), R(e.step));
      e.precision != null && (V = Math.max(V, e.precision)), x ? h.value && (p.value = d(m.value + e.step, V)) : y.value && (p.value = d(m.value - e.step, V));
    }
    function W(x) {
      var M;
      if (!x.data) return;
      const V = x.target, {
        value: $,
        selectionStart: b,
        selectionEnd: I
      } = V ?? {}, k = $ ? $.slice(0, b) + x.data + $.slice(I) : x.data, E = b_(k, e.precision, c.value);
      if (new RegExp(`^-?\\d*${ws(c.value)}?\\d*$`).test(k) || (x.preventDefault(), V.value = E), e.precision != null) {
        if (((M = k.split(c.value)[1]) == null ? void 0 : M.length) > e.precision) {
          x.preventDefault(), V.value = E;
          const K = (b ?? 0) + x.data.length;
          V.setSelectionRange(K, K);
        }
        e.precision === 0 && k.includes(c.value) && (x.preventDefault(), V.value = E);
      }
    }
    async function D(x) {
      ["Enter", "ArrowLeft", "ArrowRight", "Backspace", "Delete", "Tab"].includes(x.key) || x.ctrlKey || ["ArrowDown", "ArrowUp"].includes(x.key) && (x.preventDefault(), x.stopPropagation(), J(), await qe(), x.key === "ArrowDown" ? U(!1) : U());
    }
    function O(x) {
      x.stopPropagation();
    }
    function B(x) {
      const V = x.currentTarget;
      V == null || V.releasePointerCapture(x.pointerId), x.preventDefault(), n();
    }
    function N(x) {
      const V = x.currentTarget;
      V == null || V.setPointerCapture(x.pointerId), x.preventDefault(), x.stopPropagation(), i("up");
    }
    function z(x) {
      const V = x.currentTarget;
      V == null || V.setPointerCapture(x.pointerId), x.preventDefault(), x.stopPropagation(), i("down");
    }
    function J() {
      if (o.value || !r.value) return;
      const x = r.value.value, V = Number(x.replace(c.value, "."));
      x && !isNaN(V) ? p.value = d(lt(V, e.min, e.max)) : p.value = null;
    }
    function ae() {
      o.value || (p.value = m.value !== null && !isNaN(m.value) ? d(m.value, e.precision, !1) : null);
    }
    function X() {
      if (!o.value) {
        if (m.value === null || isNaN(m.value)) {
          p.value = null;
          return;
        }
        p.value = m.value.toString().replace(".", c.value);
      }
    }
    function L() {
      X();
    }
    function A() {
      J();
    }
    return ce(() => {
      const {
        modelValue: x,
        type: V,
        ...$
      } = Oa.filterProps(e);
      function b() {
        return a.increment ? w(ze, {
          key: "increment-defaults",
          defaults: {
            VBtn: {
              disabled: !h.value,
              height: _.value,
              size: S.value,
              icon: g.value,
              variant: "text"
            }
          }
        }, {
          default: () => [a.increment(j)]
        }) : w(Be, {
          "aria-hidden": "true",
          "data-testid": "increment",
          disabled: !h.value,
          height: _.value,
          icon: g.value,
          key: "increment-btn",
          onClick: O,
          onPointerdown: N,
          onPointerup: B,
          onPointercancel: B,
          size: S.value,
          variant: "text",
          tabindex: "-1"
        }, null);
      }
      function I() {
        return a.decrement ? w(ze, {
          key: "decrement-defaults",
          defaults: {
            VBtn: {
              disabled: !y.value,
              height: _.value,
              size: S.value,
              icon: P.value,
              variant: "text"
            }
          }
        }, {
          default: () => [a.decrement(F)]
        }) : w(Be, {
          "aria-hidden": "true",
          "data-testid": "decrement",
          disabled: !y.value,
          height: _.value,
          icon: P.value,
          key: "decrement-btn",
          onClick: O,
          onPointerdown: z,
          onPointerup: B,
          onPointercancel: B,
          size: S.value,
          variant: "text",
          tabindex: "-1"
        }, null);
      }
      function k() {
        return T("div", {
          class: "v-number-input__control"
        }, [I(), w(xa, {
          vertical: f.value !== "stacked"
        }, null), b()]);
      }
      function E() {
        return !e.hideInput && !e.inset ? w(xa, {
          vertical: !0
        }, null) : void 0;
      }
      const M = f.value === "split" ? T("div", {
        class: "v-number-input__control"
      }, [w(xa, {
        vertical: !0
      }, null), b()]) : e.reverse || f.value === "hidden" ? void 0 : T(ve, null, [E(), k()]), K = a["append-inner"] || M, Y = f.value === "split" ? T("div", {
        class: "v-number-input__control"
      }, [I(), w(xa, {
        vertical: !0
      }, null)]) : e.reverse && f.value !== "hidden" ? T(ve, null, [k(), E()]) : void 0, le = a["prepend-inner"] || Y;
      return w(Oa, ne({
        ref: r
      }, $, {
        modelValue: p.value,
        "onUpdate:modelValue": (se) => p.value = se,
        focused: l.value,
        "onUpdate:focused": (se) => l.value = se,
        validationValue: m.value,
        onBeforeinput: W,
        onFocus: L,
        onBlur: A,
        onKeydown: D,
        class: ["v-number-input", {
          "v-number-input--default": f.value === "default",
          "v-number-input--hide-input": e.hideInput,
          "v-number-input--inset": e.inset,
          "v-number-input--reverse": e.reverse,
          "v-number-input--split": f.value === "split",
          "v-number-input--stacked": f.value === "stacked"
        }, e.class],
        style: e.style,
        inputmode: "decimal"
      }), {
        ...a,
        "append-inner": K ? function() {
          var G;
          for (var se = arguments.length, Q = new Array(se), ue = 0; ue < se; ue++)
            Q[ue] = arguments[ue];
          return T(ve, null, [(G = a["append-inner"]) == null ? void 0 : G.call(a, ...Q), M]);
        } : void 0,
        "prepend-inner": le ? function() {
          var G;
          for (var se = arguments.length, Q = new Array(se), ue = 0; ue < se; ue++)
            Q[ue] = arguments[ue];
          return T(ve, null, [Y, (G = a["prepend-inner"]) == null ? void 0 : G.call(a, ...Q)]);
        } : void 0
      });
    }), Ut({}, r);
  }
}), qx = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfNumberFieldNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfNumberField");
    const { inputProps: t, localData: a, compSlots: r } = wt(
      q(e, "modelValue"),
      e.statefulLayout,
      { layoutPropsMap: ["step", "min", "max", "precision", "placeholder"] }
    ), i = C(() => {
      const n = { ...t.value };
      return n.modelValue = a.value, n.precision === void 0 && (n.precision = null), n;
    });
    return () => De(Fx, i.value, r.value);
  }
}), Cc = Symbol.for("vuetify:v-slider");
function Kx(e, t, a) {
  const r = a === "vertical", i = t.getBoundingClientRect(), n = "touches" in e ? e.touches[0] : e;
  return r ? n.clientY - (i.top + i.height / 2) : n.clientX - (i.left + i.width / 2);
}
function Hx(e, t) {
  return "touches" in e && e.touches.length ? e.touches[0][t] : "changedTouches" in e && e.changedTouches.length ? e.changedTouches[0][t] : e[t];
}
const Ux = Z({
  disabled: {
    type: Boolean,
    default: null
  },
  error: Boolean,
  readonly: {
    type: Boolean,
    default: null
  },
  max: {
    type: [Number, String],
    default: 100
  },
  min: {
    type: [Number, String],
    default: 0
  },
  step: {
    type: [Number, String],
    default: 0
  },
  thumbColor: String,
  thumbLabel: {
    type: [Boolean, String],
    default: void 0,
    validator: (e) => typeof e == "boolean" || e === "always"
  },
  thumbSize: {
    type: [Number, String],
    default: 20
  },
  showTicks: {
    type: [Boolean, String],
    default: !1,
    validator: (e) => typeof e == "boolean" || e === "always"
  },
  ticks: {
    type: [Array, Object]
  },
  tickSize: {
    type: [Number, String],
    default: 2
  },
  color: String,
  trackColor: String,
  trackFillColor: String,
  trackSize: {
    type: [Number, String],
    default: 4
  },
  direction: {
    type: String,
    default: "horizontal",
    validator: (e) => ["vertical", "horizontal"].includes(e)
  },
  reverse: Boolean,
  noKeyboard: Boolean,
  ...Kt(),
  ...ba({
    elevation: 2
  }),
  ripple: {
    type: Boolean,
    default: !0
  }
}, "Slider"), Wx = (e) => {
  const t = C(() => parseFloat(e.min)), a = C(() => parseFloat(e.max)), r = C(() => Number(e.step) > 0 ? parseFloat(e.step) : 0), i = C(() => Math.max(af(r.value), af(t.value)));
  function n(s) {
    if (s = parseFloat(s), r.value <= 0) return s;
    const o = lt(s, t.value, a.value), l = t.value % r.value;
    let u = Math.round((o - l) / r.value) * r.value + l;
    return o > u && u + r.value > a.value && (u = a.value), parseFloat(Math.min(u, a.value).toFixed(i.value));
  }
  return {
    min: t,
    max: a,
    step: r,
    decimals: i,
    roundValue: n
  };
}, Gx = (e) => {
  let {
    props: t,
    steps: a,
    onSliderStart: r,
    onSliderMove: i,
    onSliderEnd: n,
    getActiveThumb: s
  } = e;
  const o = zr(t), {
    isRtl: l
  } = jt(), u = q(() => t.reverse), c = C(() => t.direction === "vertical"), d = C(() => c.value !== u.value), {
    min: m,
    max: v,
    step: p,
    decimals: h,
    roundValue: y
  } = a, f = C(() => parseInt(t.thumbSize, 10)), g = C(() => parseInt(t.tickSize, 10)), P = C(() => parseInt(t.trackSize, 10)), S = C(() => (v.value - m.value) / p.value), _ = C(() => t.error || o.isDisabled.value ? void 0 : t.thumbColor ?? t.color), j = C(() => t.error || o.isDisabled.value ? void 0 : t.thumbColor), F = C(() => t.error || o.isDisabled.value ? void 0 : t.trackColor ?? t.color), R = C(() => t.error || o.isDisabled.value ? void 0 : t.trackFillColor ?? t.color), U = me(!1), W = me(0), D = ee(), O = ee();
  function B(E) {
    var $e;
    const M = ($e = D.value) == null ? void 0 : $e.$el;
    if (!M) return;
    const K = t.direction === "vertical", Y = K ? "top" : "left", le = K ? "height" : "width", se = K ? "clientY" : "clientX", {
      [Y]: Q,
      [le]: ue
    } = M.getBoundingClientRect(), G = Hx(E, se);
    let de = lt((G - Q - W.value) / ue) || 0;
    return (K ? d.value : d.value !== l.value) && (de = 1 - de), y(m.value + de * (v.value - m.value));
  }
  const N = (E) => {
    const M = B(E);
    M != null && n({
      value: M
    }), U.value = !1, W.value = 0;
  }, z = (E) => {
    const M = B(E);
    O.value = s(E), O.value && (U.value = !0, O.value.contains(E.target) ? W.value = Kx(E, O.value, t.direction) : (W.value = 0, M != null && i({
      value: M
    })), M != null && r({
      value: M
    }), qe(() => {
      var K;
      return (K = O.value) == null ? void 0 : K.focus();
    }));
  }, J = {
    passive: !0,
    capture: !0
  };
  function ae(E) {
    const M = B(E);
    M != null && i({
      value: M
    });
  }
  function X(E) {
    E.stopPropagation(), E.preventDefault(), N(E), window.removeEventListener("mousemove", ae, J), window.removeEventListener("mouseup", X);
  }
  function L(E) {
    var M;
    N(E), window.removeEventListener("touchmove", ae, J), (M = E.target) == null || M.removeEventListener("touchend", L);
  }
  function A(E) {
    var M;
    z(E), window.addEventListener("touchmove", ae, J), (M = E.target) == null || M.addEventListener("touchend", L, {
      passive: !1
    });
  }
  function x(E) {
    E.button === 0 && (E.preventDefault(), z(E), window.addEventListener("mousemove", ae, J), window.addEventListener("mouseup", X, {
      passive: !1
    }));
  }
  const V = (E) => {
    const M = (E - m.value) / (v.value - m.value) * 100;
    return lt(isNaN(M) ? 0 : M, 0, 100);
  }, $ = q(() => t.showTicks), b = C(() => $.value ? t.ticks ? Array.isArray(t.ticks) ? t.ticks.map((E) => ({
    value: E,
    position: V(E),
    label: E.toString()
  })) : Object.keys(t.ticks).map((E) => ({
    value: parseFloat(E),
    position: V(parseFloat(E)),
    label: t.ticks[E]
  })) : S.value !== 1 / 0 ? jr(S.value + 1).map((E) => {
    const M = m.value + E * p.value;
    return {
      value: M,
      position: V(M)
    };
  }) : [] : []), I = C(() => b.value.some((E) => {
    let {
      label: M
    } = E;
    return !!M;
  })), k = {
    activeThumbRef: O,
    color: q(() => t.color),
    decimals: h,
    disabled: o.isDisabled,
    direction: q(() => t.direction),
    elevation: q(() => t.elevation),
    hasLabels: I,
    isReversed: u,
    indexFromEnd: d,
    min: m,
    max: v,
    mousePressed: U,
    noKeyboard: q(() => t.noKeyboard),
    numTicks: S,
    onSliderMousedown: x,
    onSliderTouchstart: A,
    parsedTicks: b,
    parseMouseMove: B,
    position: V,
    readonly: o.isReadonly,
    rounded: q(() => t.rounded),
    roundValue: y,
    showTicks: $,
    startOffset: W,
    step: p,
    thumbSize: f,
    thumbColor: _,
    thumbLabelColor: j,
    thumbLabel: q(() => t.thumbLabel),
    ticks: q(() => t.ticks),
    tickSize: g,
    trackColor: F,
    trackContainerRef: D,
    trackFillColor: R,
    trackSize: P,
    vertical: c
  };
  return St(Cc, k), k;
}, Yx = Z({
  focused: Boolean,
  max: {
    type: Number,
    required: !0
  },
  min: {
    type: Number,
    required: !0
  },
  modelValue: {
    type: Number,
    required: !0
  },
  position: {
    type: Number,
    required: !0
  },
  ripple: {
    type: [Boolean, Object],
    default: !0
  },
  name: String,
  noKeyboard: Boolean,
  ..._e()
}, "VSliderThumb"), Xx = oe()({
  name: "VSliderThumb",
  directives: {
    vRipple: Ft
  },
  props: Yx(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a,
      emit: r
    } = t;
    const i = Fe(Cc), {
      isRtl: n,
      rtlClasses: s
    } = jt();
    if (!i) throw new Error("[Vuetify] v-slider-thumb must be used inside v-slider or v-range-slider");
    const {
      min: o,
      max: l,
      thumbColor: u,
      thumbLabelColor: c,
      step: d,
      disabled: m,
      thumbSize: v,
      thumbLabel: p,
      direction: h,
      isReversed: y,
      vertical: f,
      readonly: g,
      elevation: P,
      mousePressed: S,
      decimals: _,
      indexFromEnd: j
    } = i, F = C(() => m.value ? void 0 : P.value), {
      elevationClasses: R
    } = ka(F), {
      textColorClasses: U,
      textColorStyles: W
    } = Bt(u), {
      backgroundColorClasses: D,
      backgroundColorStyles: O
    } = pt(c), {
      pageup: B,
      pagedown: N,
      end: z,
      home: J,
      left: ae,
      right: X,
      down: L,
      up: A
    } = c_, x = [B, N, z, J, ae, X, L, A], V = C(() => d.value ? [1, 2, 3] : [1, 5, 10]);
    function $(I, k) {
      if (e.noKeyboard || !x.includes(I.key)) return;
      I.preventDefault();
      const E = d.value || 0.1, M = (l.value - o.value) / E;
      if ([ae, X, L, A].includes(I.key)) {
        const Y = (f.value ? [n.value ? ae : X, y.value ? L : A] : j.value !== n.value ? [ae, A] : [X, A]).includes(I.key) ? 1 : -1, le = I.shiftKey ? 2 : I.ctrlKey ? 1 : 0;
        Y === -1 && k === l.value && !le && !Number.isInteger(M) ? k = k - M % 1 * E : k = k + Y * E * V.value[le];
      } else if (I.key === J)
        k = o.value;
      else if (I.key === z)
        k = l.value;
      else {
        const K = I.key === N ? 1 : -1;
        k = k - K * E * (M > 100 ? M / 10 : 10);
      }
      return Math.max(e.min, Math.min(e.max, k));
    }
    function b(I) {
      const k = $(I, e.modelValue);
      k != null && r("update:modelValue", k);
    }
    return ce(() => {
      const I = ge(j.value ? 100 - e.position : e.position, "%");
      return T("div", {
        class: te(["v-slider-thumb", {
          "v-slider-thumb--focused": e.focused,
          "v-slider-thumb--pressed": e.focused && S.value
        }, e.class, s.value]),
        style: ye([{
          "--v-slider-thumb-position": I,
          "--v-slider-thumb-size": ge(v.value)
        }, e.style]),
        role: "slider",
        tabindex: m.value ? -1 : 0,
        "aria-label": e.name,
        "aria-valuemin": o.value,
        "aria-valuemax": l.value,
        "aria-valuenow": e.modelValue,
        "aria-readonly": !!g.value,
        "aria-orientation": h.value,
        onKeydown: g.value ? void 0 : b
      }, [T("div", {
        class: te(["v-slider-thumb__surface", U.value, R.value]),
        style: ye(W.value)
      }, null), nt(T("div", {
        class: te(["v-slider-thumb__ripple", U.value]),
        style: ye(W.value)
      }, null), [[Ft, e.ripple, null, {
        circle: !0,
        center: !0
      }]]), w(Mp, {
        origin: "bottom center"
      }, {
        default: () => {
          var k;
          return [nt(T("div", {
            class: "v-slider-thumb__label-container"
          }, [T("div", {
            class: te(["v-slider-thumb__label", D.value]),
            style: ye(O.value)
          }, [T("div", null, [((k = a["thumb-label"]) == null ? void 0 : k.call(a, {
            modelValue: e.modelValue
          })) ?? e.modelValue.toFixed(d.value ? _.value : 1)]), T("div", {
            class: "v-slider-thumb__label-wedge"
          }, null)])]), [[rn, p.value && e.focused || p.value === "always"]])];
        }
      })]);
    }), {};
  }
}), Zx = Z({
  start: {
    type: Number,
    required: !0
  },
  stop: {
    type: Number,
    required: !0
  },
  ..._e()
}, "VSliderTrack"), Jx = oe()({
  name: "VSliderTrack",
  props: Zx(),
  emits: {},
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = Fe(Cc);
    if (!r) throw new Error("[Vuetify] v-slider-track must be inside v-slider or v-range-slider");
    const {
      color: i,
      parsedTicks: n,
      rounded: s,
      showTicks: o,
      tickSize: l,
      trackColor: u,
      trackFillColor: c,
      trackSize: d,
      vertical: m,
      min: v,
      max: p,
      indexFromEnd: h
    } = r, {
      roundedClasses: y
    } = Ht(s), {
      backgroundColorClasses: f,
      backgroundColorStyles: g
    } = pt(c), {
      backgroundColorClasses: P,
      backgroundColorStyles: S
    } = pt(u), _ = C(() => `inset-${m.value ? "block" : "inline"}-${h.value ? "end" : "start"}`), j = C(() => m.value ? "height" : "width"), F = C(() => ({
      [_.value]: "0%",
      [j.value]: "100%"
    })), R = C(() => e.stop - e.start), U = C(() => ({
      [_.value]: ge(e.start, "%"),
      [j.value]: ge(R.value, "%")
    })), W = C(() => o.value ? (m.value ? n.value.slice().reverse() : n.value).map((O, B) => {
      var z;
      const N = O.value !== v.value && O.value !== p.value ? ge(O.position, "%") : void 0;
      return T("div", {
        key: O.value,
        class: te(["v-slider-track__tick", {
          "v-slider-track__tick--filled": O.position >= e.start && O.position <= e.stop,
          "v-slider-track__tick--first": O.value === v.value,
          "v-slider-track__tick--last": O.value === p.value
        }]),
        style: {
          [_.value]: N
        }
      }, [(O.label || a["tick-label"]) && T("div", {
        class: "v-slider-track__tick-label"
      }, [((z = a["tick-label"]) == null ? void 0 : z.call(a, {
        tick: O,
        index: B
      })) ?? O.label])]);
    }) : []);
    return ce(() => T("div", {
      class: te(["v-slider-track", y.value, e.class]),
      style: ye([{
        "--v-slider-track-size": ge(d.value),
        "--v-slider-tick-size": ge(l.value)
      }, e.style])
    }, [T("div", {
      class: te(["v-slider-track__background", P.value, {
        "v-slider-track__background--opacity": !!i.value || !c.value
      }]),
      style: {
        ...F.value,
        ...S.value
      }
    }, null), T("div", {
      class: te(["v-slider-track__fill", f.value]),
      style: {
        ...U.value,
        ...g.value
      }
    }, null), o.value && T("div", {
      class: te(["v-slider-track__ticks", {
        "v-slider-track__ticks--always-show": o.value === "always"
      }])
    }, [W.value])])), {};
  }
}), Qx = Z({
  ..._c(),
  ...Ux(),
  ...gn(),
  modelValue: {
    type: [Number, String],
    default: 0
  }
}, "VSlider"), Vo = oe()({
  name: "VSlider",
  props: Qx(),
  emits: {
    "update:focused": (e) => !0,
    "update:modelValue": (e) => !0,
    start: (e) => !0,
    end: (e) => !0
  },
  setup(e, t) {
    let {
      slots: a,
      emit: r
    } = t;
    const i = ee(), n = ee(), {
      rtlClasses: s
    } = jt(), o = Wx(e), l = Ce(e, "modelValue", void 0, (U) => o.roundValue(U ?? o.min.value)), {
      min: u,
      max: c,
      mousePressed: d,
      roundValue: m,
      onSliderMousedown: v,
      onSliderTouchstart: p,
      trackContainerRef: h,
      position: y,
      hasLabels: f,
      disabled: g,
      readonly: P,
      noKeyboard: S
    } = Gx({
      props: e,
      steps: o,
      onSliderStart: () => {
        r("start", l.value);
      },
      onSliderEnd: (U) => {
        let {
          value: W
        } = U;
        const D = m(W);
        l.value = D, r("end", D);
      },
      onSliderMove: (U) => {
        let {
          value: W
        } = U;
        return l.value = m(W);
      },
      getActiveThumb: () => {
        var U;
        return (U = i.value) == null ? void 0 : U.$el;
      }
    }), {
      isFocused: _,
      focus: j,
      blur: F
    } = Jn(e), R = C(() => y(l.value));
    return ce(() => {
      const U = qt.filterProps(e), W = !!(e.label || a.label || a.prepend);
      return w(qt, ne({
        ref: n,
        class: ["v-slider", {
          "v-slider--has-labels": !!a["tick-label"] || f.value,
          "v-slider--focused": _.value,
          "v-slider--pressed": d.value,
          "v-slider--disabled": e.disabled
        }, s.value, e.class],
        style: e.style
      }, U, {
        focused: _.value
      }), {
        ...a,
        prepend: W ? (D) => {
          var O, B;
          return T(ve, null, [((O = a.label) == null ? void 0 : O.call(a, D)) ?? (e.label ? w(Ei, {
            id: D.id.value,
            class: "v-slider__label",
            text: e.label
          }, null) : void 0), (B = a.prepend) == null ? void 0 : B.call(a, D)]);
        } : void 0,
        default: (D) => {
          let {
            id: O,
            messagesId: B
          } = D;
          return T("div", {
            class: "v-slider__container",
            onMousedown: P.value ? void 0 : v,
            onTouchstartPassive: P.value ? void 0 : p
          }, [T("input", {
            id: O.value,
            name: e.name || O.value,
            disabled: !!g.value,
            readonly: !!P.value,
            tabindex: "-1",
            value: l.value
          }, null), w(Jx, {
            ref: h,
            start: 0,
            stop: R.value
          }, {
            "tick-label": a["tick-label"]
          }), w(Xx, {
            ref: i,
            "aria-describedby": B.value,
            focused: _.value,
            noKeyboard: S.value,
            min: u.value,
            max: c.value,
            modelValue: l.value,
            "onUpdate:modelValue": (N) => l.value = N,
            position: R.value,
            elevation: e.elevation,
            onFocus: j,
            onBlur: F,
            ripple: e.ripple,
            name: e.name
          }, {
            "thumb-label": a["thumb-label"]
          })]);
        }
      });
    }), Ut({
      focus: () => {
        var U;
        return (U = i.value) == null ? void 0 : U.$el.focus();
      }
    }, n);
  }
}), eV = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfSliderNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfSlider");
    const { inputProps: t, localData: a, compSlots: r } = wt(
      q(e, "modelValue"),
      e.statefulLayout,
      { layoutPropsMap: ["step", "min", "max"] }
    ), i = C(() => {
      const n = { ...t.value };
      return n.modelValue = a.value, n["onUpdate:modelValue"] = (s) => e.statefulLayout.input(e.modelValue, s && Number(s)), n;
    });
    return () => De(Vo, i.value, r.value);
  }
}), sl = {
  __name: "text-field-menu",
  props: /* @__PURE__ */ Gc({
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    },
    readonly: {
      /** @type import('vue').PropType<boolean> */
      type: Boolean,
      default: !0
    },
    placeholder: {
      /** @type import('vue').PropType<string | null> */
      type: String,
      default: null
    },
    minWidth: {
      /** @type import('vue').PropType<string> */
      type: String,
      default: "328px"
    },
    maxWidth: {
      /** @type import('vue').PropType<string> */
      type: String,
      default: "328px"
    }
  }, {
    menuOpened: { type: Boolean, default: !1 },
    menuOpenedModifiers: {},
    formattedValue: { type: String, default: null },
    formattedValueModifiers: {}
  }),
  emits: /* @__PURE__ */ Gc(["blur"], ["update:menuOpened", "update:formattedValue"]),
  setup(e, { emit: t }) {
    const a = e, r = t, { inputProps: i, skeleton: n, compProps: s, data: o } = wt(
      q(a, "modelValue"),
      a.statefulLayout,
      { isMainComp: !1, bindData: !1 }
    ), l = C(() => {
      const p = { ...i.value };
      return p.clearable = p.clearable ?? !n.value.required, a.placeholder && (p.placeholder = a.placeholder), p["onClick:clear"] = () => {
        a.statefulLayout.input(a.modelValue, null);
      }, p.readonly = a.readonly, p;
    }), u = Zn(a.modelValue.fullKey), c = C(() => ({
      ...s.value,
      minWidth: a.minWidth,
      maxWidth: a.maxWidth,
      zIndex: u,
      closeOnContentClick: !1,
      disabled: !0
    })), d = ee(null), m = Yc(e, "menuOpened"), v = Yc(e, "formattedValue");
    return (p, h) => (ie(), Ne(ve, null, [
      w(H(Oa), ne({
        ref_key: "textField",
        ref: d
      }, l.value, {
        "model-value": v.value ?? H(o),
        "onClick:control": h[0] || (h[0] = (y) => {
          m.value = !m.value, y.stopPropagation();
        }),
        "onUpdate:modelValue": h[1] || (h[1] = (y) => v.value = y),
        onBlur: h[2] || (h[2] = (y) => r("blur"))
      }), {
        "prepend-inner": re(() => [
          Xc(p.$slots, "prepend-inner")
        ]),
        _: 3
      }, 16, ["model-value"]),
      d.value ? (ie(), pe(H(Fn), ne({ key: 0 }, c.value, {
        modelValue: m.value,
        "onUpdate:modelValue": h[3] || (h[3] = (y) => m.value = y),
        class: "vjsf-text-field-menu",
        activator: d.value
      }), {
        default: re(() => [
          Xc(p.$slots, "default", {
            close: () => m.value = !1
          })
        ]),
        _: 3
      }, 16, ["modelValue", "activator"])) : Te("", !0)
    ], 64));
  }
}, ah = Z({
  active: {
    type: [String, Array],
    default: void 0
  },
  controlHeight: [Number, String],
  disabled: {
    type: [Boolean, String, Array],
    default: null
  },
  nextIcon: {
    type: xe,
    default: "$next"
  },
  prevIcon: {
    type: xe,
    default: "$prev"
  },
  modeIcon: {
    type: xe,
    default: "$subgroup"
  },
  text: String,
  viewMode: {
    type: String,
    default: "month"
  }
}, "VDatePickerControls"), Gf = oe()({
  name: "VDatePickerControls",
  props: ah(),
  emits: {
    "click:year": () => !0,
    "click:month": () => !0,
    "click:prev": () => !0,
    "click:next": () => !0,
    "click:text": () => !0
  },
  setup(e, t) {
    let {
      emit: a
    } = t;
    const {
      t: r
    } = dt(), i = C(() => Array.isArray(e.disabled) ? e.disabled.includes("text") : !!e.disabled), n = C(() => Array.isArray(e.disabled) ? e.disabled.includes("mode") : !!e.disabled), s = C(() => Array.isArray(e.disabled) ? e.disabled.includes("prev") : !!e.disabled), o = C(() => Array.isArray(e.disabled) ? e.disabled.includes("next") : !!e.disabled);
    function l() {
      a("click:prev");
    }
    function u() {
      a("click:next");
    }
    function c() {
      a("click:year");
    }
    function d() {
      a("click:month");
    }
    return ce(() => T("div", {
      class: te(["v-date-picker-controls"]),
      style: {
        "--v-date-picker-controls-height": ge(e.controlHeight)
      }
    }, [w(Be, {
      class: "v-date-picker-controls__month-btn",
      "data-testid": "month-btn",
      disabled: i.value,
      text: e.text,
      variant: "text",
      rounded: !0,
      onClick: d
    }, null), w(Be, {
      class: "v-date-picker-controls__mode-btn",
      "data-testid": "year-btn",
      disabled: n.value,
      density: "comfortable",
      icon: e.modeIcon,
      variant: "text",
      "aria-label": r("$vuetify.datePicker.ariaLabel.selectYear"),
      onClick: c
    }, null), w(_s, null, null), T("div", {
      class: "v-date-picker-controls__month"
    }, [w(Be, {
      "data-testid": "prev-month",
      disabled: s.value,
      density: "comfortable",
      icon: e.prevIcon,
      variant: "text",
      "aria-label": r("$vuetify.datePicker.ariaLabel.previousMonth"),
      onClick: l
    }, null), w(Be, {
      "data-testid": "next-month",
      disabled: o.value,
      icon: e.nextIcon,
      density: "comfortable",
      variant: "text",
      "aria-label": r("$vuetify.datePicker.ariaLabel.nextMonth"),
      onClick: u
    }, null)])])), {};
  }
}), tV = Z({
  appendIcon: xe,
  color: String,
  header: String,
  transition: String,
  onClick: Lt()
}, "VDatePickerHeader"), Yf = oe()({
  name: "VDatePickerHeader",
  props: tV(),
  emits: {
    click: () => !0,
    "click:append": () => !0
  },
  setup(e, t) {
    let {
      emit: a,
      slots: r
    } = t;
    const {
      backgroundColorClasses: i,
      backgroundColorStyles: n
    } = pt(() => e.color);
    function s() {
      a("click");
    }
    function o() {
      a("click:append");
    }
    return ce(() => {
      const l = !!(r.default || e.header), u = !!(r.append || e.appendIcon);
      return T("div", {
        class: te(["v-date-picker-header", {
          "v-date-picker-header--clickable": !!e.onClick
        }, i.value]),
        style: ye(n.value),
        onClick: s
      }, [r.prepend && T("div", {
        key: "prepend",
        class: "v-date-picker-header__prepend"
      }, [r.prepend()]), l && w(Ca, {
        key: "content",
        name: e.transition
      }, {
        default: () => {
          var c;
          return [T("div", {
            key: e.header,
            class: "v-date-picker-header__content"
          }, [((c = r.default) == null ? void 0 : c.call(r)) ?? e.header])];
        }
      }), u && T("div", {
        class: "v-date-picker-header__append"
      }, [r.append ? w(ze, {
        key: "append-defaults",
        disabled: !e.appendIcon,
        defaults: {
          VBtn: {
            icon: e.appendIcon,
            variant: "text"
          }
        }
      }, {
        default: () => {
          var c;
          return [(c = r.append) == null ? void 0 : c.call(r)];
        }
      }) : w(Be, {
        key: "append-btn",
        icon: e.appendIcon,
        variant: "text",
        onClick: o
      }, null)])]);
    }), {};
  }
}), aV = Z({
  allowedDates: [Array, Function],
  disabled: {
    type: Boolean,
    default: null
  },
  displayValue: null,
  modelValue: Array,
  month: [Number, String],
  max: null,
  min: null,
  showAdjacentMonths: Boolean,
  year: [Number, String],
  weekdays: {
    type: Array,
    default: () => [0, 1, 2, 3, 4, 5, 6]
  },
  weeksInMonth: {
    type: String,
    default: "dynamic"
  },
  firstDayOfWeek: {
    type: [Number, String],
    default: void 0
  },
  firstDayOfYear: {
    type: [Number, String],
    default: void 0
  },
  weekdayFormat: String
}, "calendar");
function nV(e) {
  const t = Gn(), a = Ce(e, "modelValue", [], (v) => ot(v).map((p) => t.date(p))), r = C(() => e.displayValue ? t.date(e.displayValue) : a.value.length > 0 ? t.date(a.value[0]) : e.min ? t.date(e.min) : Array.isArray(e.allowedDates) ? t.date(e.allowedDates[0]) : t.date()), i = Ce(e, "year", void 0, (v) => {
    const p = v != null ? Number(v) : t.getYear(r.value);
    return t.startOfYear(t.setYear(t.date(), p));
  }, (v) => t.getYear(v)), n = Ce(e, "month", void 0, (v) => {
    const p = v != null ? Number(v) : t.getMonth(r.value), h = t.setYear(t.startOfMonth(t.date()), t.getYear(i.value));
    return t.setMonth(h, p);
  }, (v) => t.getMonth(v)), s = C(() => {
    const v = t.toJsDate(t.startOfWeek(t.date(), e.firstDayOfWeek)).getDay();
    return t.getWeekdays(e.firstDayOfWeek, e.weekdayFormat).filter((p, h) => e.weekdays.includes((h + v) % 7));
  }), o = C(() => {
    const v = t.getWeekArray(n.value, e.firstDayOfWeek), p = v.flat(), h = 6 * 7;
    if (e.weeksInMonth === "static" && p.length < h) {
      const y = p[p.length - 1];
      let f = [];
      for (let g = 1; g <= h - p.length; g++)
        f.push(t.addDays(y, g)), g % 7 === 0 && (v.push(f), f = []);
    }
    return v;
  });
  function l(v, p) {
    return v.filter((h) => e.weekdays.includes(t.toJsDate(h).getDay())).map((h, y) => {
      const f = t.toISO(h), g = !t.isSameMonth(h, n.value), P = t.isSameDay(h, t.startOfMonth(n.value)), S = t.isSameDay(h, t.endOfMonth(n.value)), _ = t.isSameDay(h, n.value), j = e.weekdays.length;
      return {
        date: h,
        formatted: t.format(h, "keyboardDate"),
        isAdjacent: g,
        isDisabled: m(h),
        isEnd: S,
        isHidden: g && !e.showAdjacentMonths,
        isSame: _,
        isSelected: a.value.some((F) => t.isSameDay(h, F)),
        isStart: P,
        isToday: t.isSameDay(h, p),
        isWeekEnd: y % j === j - 1,
        isWeekStart: y % j === 0,
        isoDate: f,
        localized: t.format(h, "dayOfMonth"),
        month: t.getMonth(h),
        year: t.getYear(h)
      };
    });
  }
  const u = C(() => {
    const v = t.startOfWeek(r.value, e.firstDayOfWeek), p = [];
    for (let y = 0; y <= 6; y++)
      p.push(t.addDays(v, y));
    const h = t.date();
    return l(p, h);
  }), c = C(() => {
    const v = o.value.flat(), p = t.date();
    return l(v, p);
  }), d = C(() => o.value.map((v) => v.length ? t.getWeek(v[0], e.firstDayOfWeek, e.firstDayOfYear) : null));
  function m(v) {
    if (e.disabled) return !0;
    const p = t.date(v);
    return e.min && t.isBefore(t.endOfDay(p), t.date(e.min)) || e.max && t.isAfter(p, t.date(e.max)) ? !0 : Array.isArray(e.allowedDates) && e.allowedDates.length > 0 ? !e.allowedDates.some((h) => t.isSameDay(t.date(h), p)) : typeof e.allowedDates == "function" ? !e.allowedDates(p) : !1;
  }
  return {
    displayValue: r,
    daysInMonth: c,
    daysInWeek: u,
    genDays: l,
    model: a,
    weeksInMonth: o,
    weekdayLabels: s,
    weekNumbers: d
  };
}
const nh = Z({
  color: String,
  hideWeekdays: Boolean,
  multiple: [Boolean, Number, String],
  showWeek: Boolean,
  transition: {
    type: String,
    default: "picker-transition"
  },
  reverseTransition: {
    type: String,
    default: "picker-reverse-transition"
  },
  ...ut(aV(), ["displayValue"])
}, "VDatePickerMonth"), Xf = oe()({
  name: "VDatePickerMonth",
  props: nh(),
  emits: {
    "update:modelValue": (e) => !0,
    "update:month": (e) => !0,
    "update:year": (e) => !0
  },
  setup(e, t) {
    let {
      emit: a,
      slots: r
    } = t;
    const i = ee(), {
      t: n
    } = dt(), {
      daysInMonth: s,
      model: o,
      weekNumbers: l,
      weekdayLabels: u
    } = nV(e), c = Gn(), d = me(), m = me(), v = me(!1), p = q(() => v.value ? e.reverseTransition : e.transition);
    e.multiple === "range" && o.value.length > 0 && (d.value = o.value[0], o.value.length > 1 && (m.value = o.value[o.value.length - 1]));
    const h = C(() => {
      const S = ["number", "string"].includes(typeof e.multiple) ? Number(e.multiple) : 1 / 0;
      return o.value.length >= S;
    });
    fe(s, (S, _) => {
      _ && (v.value = c.isBefore(S[0].date, _[0].date));
    });
    function y(S) {
      const _ = c.startOfDay(S);
      if (o.value.length === 0 ? d.value = void 0 : o.value.length === 1 && (d.value = o.value[0], m.value = void 0), !d.value)
        d.value = _, o.value = [d.value];
      else if (m.value)
        d.value = S, m.value = void 0, o.value = [d.value];
      else {
        if (c.isSameDay(_, d.value)) {
          d.value = void 0, o.value = [];
          return;
        } else c.isBefore(_, d.value) ? (m.value = c.endOfDay(d.value), d.value = _) : m.value = c.endOfDay(_);
        o.value = mP(c, d.value, m.value);
      }
    }
    function f(S) {
      const _ = c.format(S.date, "fullDateWithWeekday"), j = S.isToday ? "currentDate" : "selectDate";
      return n(`$vuetify.datePicker.ariaLabel.${j}`, _);
    }
    function g(S) {
      const _ = o.value.findIndex((j) => c.isSameDay(j, S));
      if (_ === -1)
        o.value = [...o.value, S];
      else {
        const j = [...o.value];
        j.splice(_, 1), o.value = j;
      }
    }
    function P(S) {
      e.multiple === "range" ? y(S) : e.multiple ? g(S) : o.value = [S];
    }
    ce(() => T("div", {
      class: "v-date-picker-month",
      style: {
        "--v-date-picker-days-in-week": e.weekdays.length
      }
    }, [e.showWeek && T("div", {
      key: "weeks",
      class: "v-date-picker-month__weeks"
    }, [!e.hideWeekdays && T("div", {
      key: "hide-week-days",
      class: "v-date-picker-month__day"
    }, [He(" ")]), l.value.map((S) => T("div", {
      class: te(["v-date-picker-month__day", "v-date-picker-month__day--adjacent"])
    }, [S]))]), w(Ca, {
      name: p.value
    }, {
      default: () => {
        var S;
        return [T("div", {
          ref: i,
          key: (S = s.value[0].date) == null ? void 0 : S.toString(),
          class: "v-date-picker-month__days"
        }, [!e.hideWeekdays && u.value.map((_) => T("div", {
          class: te(["v-date-picker-month__day", "v-date-picker-month__weekday"])
        }, [_])), s.value.map((_, j) => {
          var R;
          const F = {
            props: {
              class: "v-date-picker-month__day-btn",
              color: _.isSelected || _.isToday ? e.color : void 0,
              disabled: _.isDisabled,
              icon: !0,
              ripple: !1,
              text: _.localized,
              variant: _.isSelected ? "flat" : _.isToday ? "outlined" : "text",
              "aria-label": f(_),
              "aria-current": _.isToday ? "date" : void 0,
              onClick: () => P(_.date)
            },
            item: _,
            i: j
          };
          return h.value && !_.isSelected && (_.isDisabled = !0), T("div", {
            class: te(["v-date-picker-month__day", {
              "v-date-picker-month__day--adjacent": _.isAdjacent,
              "v-date-picker-month__day--hide-adjacent": _.isHidden,
              "v-date-picker-month__day--selected": _.isSelected,
              "v-date-picker-month__day--week-end": _.isWeekEnd,
              "v-date-picker-month__day--week-start": _.isWeekStart
            }]),
            "data-v-date": _.isDisabled ? void 0 : _.isoDate
          }, [(e.showAdjacentMonths || !_.isAdjacent) && (((R = r.day) == null ? void 0 : R.call(r, F)) ?? w(Be, F.props, null))]);
        })])];
      }
    })]));
  }
}), rh = Z({
  color: String,
  height: [String, Number],
  min: null,
  max: null,
  modelValue: Number,
  year: Number,
  allowedMonths: [Array, Function]
}, "VDatePickerMonths"), Zf = oe()({
  name: "VDatePickerMonths",
  props: rh(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      emit: a,
      slots: r
    } = t;
    const i = Gn(), n = Ce(e, "modelValue"), s = C(() => {
      let l = i.startOfYear(i.date());
      return e.year && (l = i.setYear(l, e.year)), jr(12).map((u) => {
        const c = i.format(l, "monthShort"), d = i.format(l, "month"), m = !!(!o(u) || e.min && i.isAfter(i.startOfMonth(i.date(e.min)), l) || e.max && i.isAfter(l, i.startOfMonth(i.date(e.max))));
        return l = i.getNextMonth(l), {
          isDisabled: m,
          text: c,
          label: d,
          value: u
        };
      });
    });
    At(() => {
      n.value = n.value ?? i.getMonth(i.date());
    });
    function o(l) {
      return Array.isArray(e.allowedMonths) && e.allowedMonths.length ? e.allowedMonths.includes(l) : typeof e.allowedMonths == "function" ? e.allowedMonths(l) : !0;
    }
    return ce(() => T("div", {
      class: "v-date-picker-months",
      style: {
        height: ge(e.height)
      }
    }, [T("div", {
      class: "v-date-picker-months__content"
    }, [s.value.map((l, u) => {
      var m;
      const c = {
        active: n.value === u,
        ariaLabel: l.label,
        color: n.value === u ? e.color : void 0,
        disabled: l.isDisabled,
        rounded: !0,
        text: l.text,
        variant: n.value === l.value ? "flat" : "text",
        onClick: () => d(u)
      };
      function d(v) {
        if (n.value === v) {
          a("update:modelValue", n.value);
          return;
        }
        n.value = v;
      }
      return ((m = r.month) == null ? void 0 : m.call(r, {
        month: l,
        i: u,
        props: c
      })) ?? w(Be, ne({
        key: "month"
      }, c), null);
    })])])), {};
  }
}), ih = Z({
  color: String,
  height: [String, Number],
  min: null,
  max: null,
  modelValue: Number,
  allowedYears: [Array, Function]
}, "VDatePickerYears"), Jf = oe()({
  name: "VDatePickerYears",
  props: ih(),
  directives: {
    vIntersect: hn
  },
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      emit: a,
      slots: r
    } = t;
    const i = Gn(), n = Ce(e, "modelValue"), s = C(() => {
      const c = i.getYear(i.date());
      let d = c - 100, m = c + 52;
      e.min && (d = i.getYear(i.date(e.min))), e.max && (m = i.getYear(i.date(e.max)));
      let v = i.startOfYear(i.date());
      return v = i.setYear(v, d), jr(m - d + 1, d).map((p) => {
        const h = i.format(v, "year");
        return v = i.setYear(v, i.getYear(v) + 1), {
          text: h,
          value: p,
          isDisabled: !u(p)
        };
      });
    });
    At(() => {
      n.value = n.value ?? i.getYear(i.date());
    });
    const o = ks();
    function l() {
      var c, d;
      (c = o.el) == null || c.focus(), (d = o.el) == null || d.scrollIntoView({
        block: "center"
      });
    }
    function u(c) {
      return Array.isArray(e.allowedYears) && e.allowedYears.length ? e.allowedYears.includes(c) : typeof e.allowedYears == "function" ? e.allowedYears(c) : !0;
    }
    return ce(() => nt(T("div", {
      class: "v-date-picker-years",
      style: {
        height: ge(e.height)
      }
    }, [T("div", {
      class: "v-date-picker-years__content"
    }, [s.value.map((c, d) => {
      var v;
      const m = {
        ref: n.value === c.value ? o : void 0,
        active: n.value === c.value,
        color: n.value === c.value ? e.color : void 0,
        rounded: !0,
        text: c.text,
        disabled: c.isDisabled,
        variant: n.value === c.value ? "flat" : "text",
        onClick: () => {
          if (n.value === c.value) {
            a("update:modelValue", n.value);
            return;
          }
          n.value = c.value;
        }
      };
      return ((v = r.year) == null ? void 0 : v.call(r, {
        year: c,
        i: d,
        props: m
      })) ?? w(Be, ne({
        key: "month"
      }, m), null);
    })])]), [[hn, {
      handler: l
    }, null, {
      once: !0
    }]])), {};
  }
}), rV = Mr("v-picker-title"), xc = Z({
  color: String,
  ...sn(),
  ..._e(),
  ...la(),
  ...ba(),
  ...Ii(),
  ...Qs(),
  ...Kt(),
  ...Ke(),
  ...it()
}, "VSheet"), qa = oe()({
  name: "VSheet",
  props: xc(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      themeClasses: r
    } = ht(e), {
      backgroundColorClasses: i,
      backgroundColorStyles: n
    } = pt(() => e.color), {
      borderClasses: s
    } = ln(e), {
      dimensionStyles: o
    } = oa(e), {
      elevationClasses: l
    } = ka(e), {
      locationStyles: u
    } = Oi(e), {
      positionClasses: c
    } = el(e), {
      roundedClasses: d
    } = Ht(e);
    return ce(() => w(e.tag, {
      class: te(["v-sheet", r.value, i.value, s.value, l.value, c.value, d.value, e.class]),
      style: ye([n.value, o.value, u.value, e.style])
    }, a)), {};
  }
}), ll = Z({
  bgColor: String,
  divided: Boolean,
  landscape: Boolean,
  title: String,
  hideHeader: Boolean,
  hideTitle: Boolean,
  ...xc()
}, "VPicker"), _r = oe()({
  name: "VPicker",
  props: ll(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      backgroundColorClasses: r,
      backgroundColorStyles: i
    } = pt(() => e.color);
    return ce(() => {
      const n = qa.filterProps(e), s = !e.hideTitle && !!(e.title || a.title);
      return w(qa, ne(n, {
        color: e.bgColor,
        class: ["v-picker", {
          "v-picker--divided": e.divided,
          "v-picker--landscape": e.landscape,
          "v-picker--with-actions": !!a.actions
        }, e.class],
        style: e.style
      }), {
        default: () => {
          var o;
          return [!e.hideHeader && T("div", {
            key: "header",
            class: te([r.value]),
            style: ye([i.value])
          }, [s && w(rV, {
            key: "picker-title"
          }, {
            default: () => {
              var l;
              return [((l = a.title) == null ? void 0 : l.call(a)) ?? e.title];
            }
          }), a.header && T("div", {
            class: "v-picker__header"
          }, [a.header()])]), T("div", {
            class: "v-picker__body"
          }, [(o = a.default) == null ? void 0 : o.call(a)]), a.actions && w(ze, {
            defaults: {
              VBtn: {
                slim: !0,
                variant: "text"
              }
            }
          }, {
            default: () => [T("div", {
              class: "v-picker__actions"
            }, [a.actions()])]
          })];
        }
      });
    }), {};
  }
}), iV = Z({
  // TODO: implement in v3.5
  // calendarIcon: {
  //   type: String,
  //   default: '$calendar',
  // },
  // keyboardIcon: {
  //   type: String,
  //   default: '$edit',
  // },
  // inputMode: {
  //   type: String as PropType<'calendar' | 'keyboard'>,
  //   default: 'calendar',
  // },
  // inputText: {
  //   type: String,
  //   default: '$vuetify.datePicker.input.placeholder',
  // },
  // inputPlaceholder: {
  //   type: String,
  //   default: 'dd/mm/yyyy',
  // },
  header: {
    type: String,
    default: "$vuetify.datePicker.header"
  },
  headerColor: String,
  ...ah(),
  ...nh({
    weeksInMonth: "static"
  }),
  ...ut(rh(), ["modelValue"]),
  ...ut(ih(), ["modelValue"]),
  ...ll({
    title: "$vuetify.datePicker.title"
  }),
  modelValue: null
}, "VDatePicker"), sh = oe()({
  name: "VDatePicker",
  props: iV(),
  emits: {
    "update:modelValue": (e) => !0,
    "update:month": (e) => !0,
    "update:year": (e) => !0,
    // 'update:inputMode': (date: any) => true,
    "update:viewMode": (e) => !0
  },
  setup(e, t) {
    let {
      emit: a,
      slots: r
    } = t;
    const i = Gn(), {
      t: n
    } = dt(), {
      rtlClasses: s
    } = jt(), o = Ce(e, "modelValue", void 0, (X) => ot(X).map((L) => i.date(L)), (X) => e.multiple ? X : X[0]), l = Ce(e, "viewMode"), u = C(() => {
      const X = i.date(e.min);
      return e.min && i.isValid(X) ? X : null;
    }), c = C(() => {
      const X = i.date(e.max);
      return e.max && i.isValid(X) ? X : null;
    }), d = C(() => {
      var A;
      const X = i.date();
      let L = X;
      return (A = o.value) != null && A[0] ? L = i.date(o.value[0]) : u.value && i.isBefore(X, u.value) ? L = u.value : c.value && i.isAfter(X, c.value) && (L = c.value), L && i.isValid(L) ? L : X;
    }), m = q(() => e.headerColor ?? e.color), v = Ce(e, "month"), p = C({
      get: () => Number(v.value ?? i.getMonth(i.startOfMonth(d.value))),
      set: (X) => v.value = X
    }), h = Ce(e, "year"), y = C({
      get: () => Number(h.value ?? i.getYear(i.startOfYear(i.setMonth(d.value, p.value)))),
      set: (X) => h.value = X
    }), f = me(!1), g = C(() => e.multiple && o.value.length > 1 ? n("$vuetify.datePicker.itemsSelected", o.value.length) : o.value[0] && i.isValid(o.value[0]) ? i.format(i.date(o.value[0]), "normalDateWithWeekday") : n(e.header)), P = C(() => {
      let X = i.date();
      return X = i.setDate(X, 1), X = i.setMonth(X, p.value), X = i.setYear(X, y.value), i.format(X, "monthAndYear");
    }), S = q(() => `date-picker-header${f.value ? "-reverse" : ""}-transition`), _ = C(() => {
      if (e.disabled) return !0;
      const X = [];
      if (l.value !== "month")
        X.push("prev", "next");
      else {
        let L = i.date();
        if (L = i.startOfMonth(L), L = i.setMonth(L, p.value), L = i.setYear(L, y.value), u.value) {
          const A = i.addDays(i.startOfMonth(L), -1);
          i.isAfter(u.value, A) && X.push("prev");
        }
        if (c.value) {
          const A = i.addDays(i.endOfMonth(L), 1);
          i.isAfter(A, c.value) && X.push("next");
        }
      }
      return X;
    }), j = C(() => e.allowedYears || U), F = C(() => e.allowedMonths || W);
    function R(X, L) {
      const A = e.allowedDates;
      if (typeof A != "function") return !0;
      const x = i.getDiff(L, X, "days");
      for (let V = 0; V < x; V++)
        if (A(i.addDays(X, V))) return !0;
      return !1;
    }
    function U(X) {
      if (typeof e.allowedDates == "function") {
        const L = i.parseISO(`${X}-01-01`);
        return R(L, i.endOfYear(L));
      }
      if (Array.isArray(e.allowedDates) && e.allowedDates.length) {
        for (const L of e.allowedDates)
          if (i.getYear(i.date(L)) === X) return !0;
        return !1;
      }
      return !0;
    }
    function W(X) {
      if (typeof e.allowedDates == "function") {
        const L = String(X + 1).padStart(2, "0"), A = i.parseISO(`${y.value}-${L}-01`);
        return R(A, i.endOfMonth(A));
      }
      if (Array.isArray(e.allowedDates) && e.allowedDates.length) {
        for (const L of e.allowedDates)
          if (i.getYear(i.date(L)) === y.value && i.getMonth(i.date(L)) === X) return !0;
        return !1;
      }
      return !0;
    }
    function D() {
      p.value < 11 ? p.value++ : (y.value++, p.value = 0, ae()), J();
    }
    function O() {
      p.value > 0 ? p.value-- : (y.value--, p.value = 11, ae()), J();
    }
    function B() {
      l.value = "month";
    }
    function N() {
      l.value = l.value === "months" ? "month" : "months";
    }
    function z() {
      l.value = l.value === "year" ? "month" : "year";
    }
    function J() {
      l.value === "months" && N();
    }
    function ae() {
      l.value === "year" && z();
    }
    return fe(o, (X, L) => {
      const A = ot(L), x = ot(X);
      if (!x.length) return;
      const V = i.date(A[A.length - 1]), $ = i.date(x[x.length - 1]), b = i.getMonth($), I = i.getYear($);
      b !== p.value && (p.value = b, J()), I !== y.value && (y.value = I, ae()), f.value = i.isBefore(V, $);
    }), ce(() => {
      const X = _r.filterProps(e), L = Gf.filterProps(e), A = Yf.filterProps(e), x = Xf.filterProps(e), V = ut(Zf.filterProps(e), ["modelValue"]), $ = ut(Jf.filterProps(e), ["modelValue"]), b = {
        color: m.value,
        header: g.value,
        transition: S.value
      };
      return w(_r, ne(X, {
        color: m.value,
        class: ["v-date-picker", `v-date-picker--${l.value}`, {
          "v-date-picker--show-week": e.showWeek
        }, s.value, e.class],
        style: e.style
      }), {
        title: () => {
          var I;
          return ((I = r.title) == null ? void 0 : I.call(r)) ?? T("div", {
            class: "v-date-picker__title"
          }, [n(e.title)]);
        },
        header: () => r.header ? w(ze, {
          defaults: {
            VDatePickerHeader: {
              ...b
            }
          }
        }, {
          default: () => {
            var I;
            return [(I = r.header) == null ? void 0 : I.call(r, b)];
          }
        }) : w(Yf, ne({
          key: "header"
        }, A, b, {
          onClick: l.value !== "month" ? B : void 0
        }), {
          prepend: r.prepend,
          append: r.append
        }),
        default: () => T(ve, null, [w(Gf, ne(L, {
          disabled: _.value,
          text: P.value,
          "onClick:next": D,
          "onClick:prev": O,
          "onClick:month": N,
          "onClick:year": z
        }), null), w(ko, {
          hideOnLeave: !0
        }, {
          default: () => [l.value === "months" ? w(Zf, ne({
            key: "date-picker-months"
          }, V, {
            modelValue: p.value,
            "onUpdate:modelValue": [(I) => p.value = I, J],
            min: u.value,
            max: c.value,
            year: y.value,
            allowedMonths: F.value
          }), {
            month: r.month
          }) : l.value === "year" ? w(Jf, ne({
            key: "date-picker-years"
          }, $, {
            modelValue: y.value,
            "onUpdate:modelValue": [(I) => y.value = I, ae],
            min: u.value,
            max: c.value,
            allowedYears: j.value
          }), {
            year: r.year
          }) : w(Xf, ne({
            key: "date-picker-month"
          }, x, {
            modelValue: o.value,
            "onUpdate:modelValue": (I) => o.value = I,
            month: p.value,
            "onUpdate:month": [(I) => p.value = I, J],
            year: y.value,
            "onUpdate:year": [(I) => y.value = I, ae],
            min: u.value,
            max: c.value
          }), {
            day: r.day
          })]
        })]),
        actions: r.actions
      });
    }), {};
  }
}), aa = (e, t = 2) => ("" + e).padStart(t, "0"), Vc = (e) => {
  const t = e.getTimezoneOffset(), a = `${aa(Math.abs(t / 60))}:${aa(Math.abs(t % 60))}`;
  let r;
  return t < 0 ? r = `+${a}` : t > 0 ? r = `-${a}` : r = "Z", `${aa(e.getFullYear(), 4)}-${aa(e.getMonth() + 1)}-${aa(e.getDate())}T${aa(e.getHours())}:${aa(e.getMinutes())}:${aa(e.getSeconds())}${r}`;
}, lh = (e) => [`${aa(e.getFullYear(), 4)}-${aa(e.getMonth() + 1)}-${aa(e.getDate())}`, `${aa(e.getHours())}:${aa(e.getMinutes())}`], sV = (e) => {
  const t = /* @__PURE__ */ new Date(), a = e[0].split("-");
  t.setFullYear(Number(a[0])), t.setMonth(Number(a[1]) - 1), t.setDate(Number(a[2]));
  const r = e[1].split(":");
  return t.setHours(Number(r[0] || "00")), t.setMinutes(Number(r[1] || "00")), t.setSeconds(0), Vc(t);
}, oh = (e) => e ? e.slice(0, 5) : "", lV = (e) => e + ":00Z", Qf = (e, t, a) => {
  if (!e || !t || !a) return null;
  const r = Number(e);
  if (isNaN(r)) return null;
  const i = Number(t);
  if (isNaN(i) || i < 1 || i > 12) return null;
  const n = Number(a);
  if (isNaN(n) || n < 1 || n > 31) return null;
  const s = /* @__PURE__ */ new Date();
  return s.setFullYear(r), s.setMonth(i - 1), s.setDate(n), s.setHours(0), s.setMinutes(0), s.setSeconds(0), s.setMilliseconds(0), isNaN(s.getTime()) ? null : s;
}, em = {}, tm = (e) => {
  const t = new Intl.DateTimeFormat(e, { year: "numeric", month: "2-digit", day: "2-digit" }), a = t.formatToParts(/* @__PURE__ */ new Date()), r = {
    format: (i) => t.format(i),
    parse: (i) => {
      let n = i, s = "", o = "", l = "";
      for (let v = 0; v < a.length; v++) {
        const p = a[v];
        if (p.type !== "literal") {
          const h = a[v + 1];
          if (h && h.type !== "literal")
            throw console.error("failed to work on keyboard date format", a), new Error("failed to work on keyboard date format");
          let y = n;
          if ((h == null ? void 0 : h.type) === "literal") {
            const f = n.indexOf(h.value);
            y = n.substring(0, f), n = n.substring(f + h.value.length);
          }
          p.type === "year" && (s = y), p.type === "month" && (o = y), p.type === "day" && (l = y);
        }
      }
      const u = Qf(s, o, l);
      if (u) return u;
      const [c, d, m] = i.split("-");
      return Qf(c, d, m);
    }
  };
  return em[e] || (em[e] = r), r;
};
function Jt(e, t = null) {
  const a = Fe(Symbol.for("vuetify:defaults"));
  if (!a) throw new Error("[vjsf] Could not find defaults instance");
  return C(() => {
    var i;
    const r = ((i = a.value) == null ? void 0 : i[e]) ?? {};
    return t ? { ...t, ...r } : r;
  });
}
const oV = {
  __name: "date-picker",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfDatePickerNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    const t = ya("vjsf:date-picker");
    Ye({}, "VjsfDatePicker");
    const a = Jt("VDatePicker", { hideHeader: !0 }), r = e, i = ee(!1), { compProps: n, localData: s } = wt(q(r, "modelValue"), r.statefulLayout), o = (v) => {
      if (!v) return;
      const p = r.modelValue.layout.format === "date-time" ? Vc(v) : lh(
        /** @type Date */
        /** @type unknown */
        v
      )[0];
      p !== s.value && (t(`apply normalized iso value ${v.toLocaleString()} -> ${p}`), r.statefulLayout.input(r.modelValue, p), i.value = !1);
    }, l = C(() => s.value ? r.modelValue.layout.format === "date-time" ? new Date(
      /** @type {string} */
      s.value
    ) : new Date(sV([s.value, "00:00:00"])) : null), u = C(() => {
      const v = { ...a.value, ...n.value };
      return v.hideActions = !0, l.value && (v.modelValue = l.value), v["onUpdate:modelValue"] = (p) => {
        o(p);
      }, v;
    }), c = ee(""), d = () => {
      l.value ? c.value = tm(r.modelValue.options.locale).format(l.value) : c.value = null;
    };
    fe(l, d, { immediate: !0 });
    const m = () => {
      if (c.value) {
        const v = tm(r.modelValue.options.locale).parse(c.value);
        t(`parsed user input as date ${c.value} -> ${v == null ? void 0 : v.toLocaleString()}`), v ? o(v) : d();
      }
    };
    return (v, p) => (ie(), pe(sl, {
      "menu-opened": i.value,
      "onUpdate:menuOpened": p[0] || (p[0] = (h) => i.value = h),
      "formatted-value": c.value,
      "onUpdate:formattedValue": p[1] || (p[1] = (h) => c.value = h),
      "model-value": r.modelValue,
      "stateful-layout": e.statefulLayout,
      readonly: !1,
      placeholder: r.modelValue.messages.keyboardDate,
      onBlur: m
    }, {
      "prepend-inner": re(() => [
        w(H(Ae), {
          icon: e.statefulLayout.options.icons.calendar
        }, null, 8, ["icon"])
      ]),
      default: re(() => [
        w(H(sh), en(tn(u.value)), null, 16)
      ]),
      _: 1
    }, 8, ["menu-opened", "formatted-value", "model-value", "stateful-layout", "placeholder"]));
  }
};
function On(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
  return String(e).padStart(t, "0");
}
const uV = Z({
  allowedValues: Function,
  ampm: Boolean,
  color: String,
  disabled: Boolean,
  displayedValue: null,
  double: Boolean,
  format: {
    type: Function,
    default: (e) => e
  },
  max: {
    type: Number,
    required: !0
  },
  min: {
    type: Number,
    required: !0
  },
  scrollable: Boolean,
  readonly: Boolean,
  rotate: {
    type: Number,
    default: 0
  },
  step: {
    type: Number,
    default: 1
  },
  modelValue: {
    type: Number
  }
}, "VTimePickerClock"), am = oe()({
  name: "VTimePickerClock",
  props: uV(),
  emits: {
    change: (e) => !0,
    input: (e) => !0
  },
  setup(e, t) {
    let {
      emit: a
    } = t;
    const r = ee(null), i = ee(null), n = ee(void 0), s = ee(!1), o = ee(null), l = ee(null), u = Hv((L) => a("change", L), 750), {
      textColorClasses: c,
      textColorStyles: d
    } = Bt(() => e.color), {
      backgroundColorClasses: m,
      backgroundColorStyles: v
    } = pt(() => e.color), p = C(() => e.max - e.min + 1), h = C(() => e.double ? p.value / 2 : p.value), y = C(() => 360 / h.value), f = C(() => y.value * Math.PI / 180), g = C(() => e.modelValue == null ? e.min : e.modelValue), P = C(() => 0.62), S = C(() => {
      const L = [];
      for (let A = e.min; A <= e.max; A = A + e.step)
        L.push(A);
      return L;
    });
    fe(() => e.modelValue, (L) => {
      n.value = L;
    });
    function _(L) {
      n.value !== L && (n.value = L), a("input", L);
    }
    function j(L) {
      return !e.allowedValues || e.allowedValues(L);
    }
    function F(L) {
      if (!e.scrollable || e.disabled) return;
      L.preventDefault();
      const A = Math.sign(-L.deltaY || 1);
      let x = g.value;
      do
        x = x + A, x = (x - e.min + p.value) % p.value + e.min;
      while (!j(x) && x !== g.value);
      x !== e.displayedValue && _(x), u(x);
    }
    function R(L) {
      return e.double && L - e.min >= h.value;
    }
    function U(L) {
      return R(L) ? P.value : 1;
    }
    function W(L) {
      const A = e.rotate * Math.PI / 180;
      return {
        x: Math.sin((L - e.min) * f.value + A) * U(L),
        y: -Math.cos((L - e.min) * f.value + A) * U(L)
      };
    }
    function D(L, A) {
      const x = (Math.round(L / y.value) + (A ? h.value : 0)) % p.value + e.min;
      return L < 360 - y.value / 2 ? x : A ? e.max - h.value + 1 : e.min;
    }
    function O(L) {
      const {
        x: A,
        y: x
      } = W(L);
      return {
        left: `${Math.round(50 + A * 50)}%`,
        top: `${Math.round(50 + x * 50)}%`
      };
    }
    function B(L, A) {
      const x = A.x - L.x, V = A.y - L.y;
      return Math.sqrt(x * x + V * V);
    }
    function N(L, A) {
      const x = 2 * Math.atan2(A.y - L.y - B(L, A), A.x - L.x);
      return Math.abs(x * 180 / Math.PI);
    }
    function z(L) {
      o.value === null && (o.value = L), l.value = L, _(L);
    }
    function J(L) {
      var se, Q;
      if (L.preventDefault(), !s.value && L.type !== "click" || !r.value) return;
      const {
        width: A,
        top: x,
        left: V
      } = (se = r.value) == null ? void 0 : se.getBoundingClientRect(), {
        width: $
      } = ((Q = i.value) == null ? void 0 : Q.getBoundingClientRect()) ?? {
        width: 0
      }, {
        clientX: b,
        clientY: I
      } = "touches" in L ? L.touches[0] : L, k = {
        x: A / 2,
        y: -A / 2
      }, E = {
        x: b - V,
        y: x - I
      }, M = Math.round(N(k, E) - e.rotate + 360) % 360, K = e.double && B(k, E) < ($ + $ * P.value) / 4, Y = Math.ceil(15 / y.value);
      let le;
      for (let ue = 0; ue < Y; ue++)
        if (le = D(M + ue * y.value, K), j(le) || (le = D(M - ue * y.value, K), j(le))) return z(le);
    }
    function ae(L) {
      e.disabled || (L.preventDefault(), window.addEventListener("mousemove", J), window.addEventListener("touchmove", J), window.addEventListener("mouseup", X), window.addEventListener("touchend", X), o.value = null, l.value = null, s.value = !0, J(L));
    }
    function X(L) {
      L.stopPropagation(), window.removeEventListener("mousemove", J), window.removeEventListener("touchmove", J), window.removeEventListener("mouseup", X), window.removeEventListener("touchend", X), s.value = !1, l.value !== null && j(l.value) && a("change", l.value);
    }
    ce(() => T("div", {
      class: te([{
        "v-time-picker-clock": !0,
        "v-time-picker-clock--indeterminate": e.modelValue == null,
        "v-time-picker-clock--readonly": e.readonly
      }]),
      onMousedown: ae,
      onTouchstart: ae,
      onWheel: F,
      ref: r
    }, [T("div", {
      class: "v-time-picker-clock__inner",
      ref: i
    }, [T("div", {
      class: te([{
        "v-time-picker-clock__hand": !0,
        "v-time-picker-clock__hand--inner": R(e.modelValue)
      }, c.value]),
      style: ye([{
        transform: `rotate(${e.rotate + y.value * (g.value - e.min)}deg) scaleY(${U(g.value)})`
      }, d.value])
    }, null), S.value.map((L) => {
      const A = L === g.value;
      return T("div", {
        class: te([{
          "v-time-picker-clock__item": !0,
          "v-time-picker-clock__item--active": A,
          "v-time-picker-clock__item--disabled": e.disabled || !j(L)
        }, A && m.value]),
        style: ye([O(L), A && v.value])
      }, [T("span", null, [e.format(L)])]);
    })])]));
  }
}), cV = Z({
  ampm: Boolean,
  color: String,
  disabled: Boolean,
  hour: Number,
  minute: Number,
  second: Number,
  period: String,
  readonly: Boolean,
  useSeconds: Boolean,
  value: Number,
  viewMode: String
}, "VTimePickerControls"), nm = oe()({
  name: "VTimePickerControls",
  props: cV(),
  emits: {
    "update:period": (e) => !0,
    "update:viewMode": (e) => !0
  },
  setup(e, t) {
    let {
      emit: a,
      slots: r
    } = t;
    const {
      t: i
    } = dt();
    return ce(() => {
      let n = e.hour;
      return e.ampm && (n = n ? (n - 1) % 12 + 1 : 12), T("div", {
        class: "v-time-picker-controls"
      }, [T("div", {
        class: te({
          "v-time-picker-controls__time": !0,
          "v-time-picker-controls__time--with-seconds": e.useSeconds
        })
      }, [w(Be, {
        active: e.viewMode === "hour",
        color: e.viewMode === "hour" ? e.color : void 0,
        disabled: e.disabled,
        variant: "tonal",
        class: te({
          "v-time-picker-controls__time__btn": !0,
          "v-time-picker-controls__time--with-ampm__btn": e.ampm,
          "v-time-picker-controls__time--with-seconds__btn": e.useSeconds
        }),
        text: e.hour == null ? "--" : On(`${n}`),
        onClick: () => a("update:viewMode", "hour")
      }, null), T("span", {
        class: te(["v-time-picker-controls__time__separator", {
          "v-time-picker-controls--with-seconds__time__separator": e.useSeconds
        }])
      }, [He(":")]), w(Be, {
        active: e.viewMode === "minute",
        color: e.viewMode === "minute" ? e.color : void 0,
        class: te({
          "v-time-picker-controls__time__btn": !0,
          "v-time-picker-controls__time__btn__active": e.viewMode === "minute",
          "v-time-picker-controls__time--with-ampm__btn": e.ampm,
          "v-time-picker-controls__time--with-seconds__btn": e.useSeconds
        }),
        disabled: e.disabled,
        variant: "tonal",
        text: e.minute == null ? "--" : On(e.minute),
        onClick: () => a("update:viewMode", "minute")
      }, null), e.useSeconds && T("span", {
        class: te(["v-time-picker-controls__time__separator", {
          "v-time-picker-controls--with-seconds__time__separator": e.useSeconds
        }]),
        key: "secondsDivider"
      }, [He(":")]), e.useSeconds && w(Be, {
        key: "secondsVal",
        active: e.viewMode === "second",
        color: e.viewMode === "second" ? e.color : void 0,
        variant: "tonal",
        onClick: () => a("update:viewMode", "second"),
        class: te({
          "v-time-picker-controls__time__btn": !0,
          "v-time-picker-controls__time__btn__active": e.viewMode === "second",
          "v-time-picker-controls__time--with-seconds__btn": e.useSeconds
        }),
        disabled: e.disabled,
        text: e.second == null ? "--" : On(e.second)
      }, null), e.ampm && T("div", {
        class: "v-time-picker-controls__ampm"
      }, [w(Be, {
        active: e.period === "am",
        color: e.period === "am" ? e.color : void 0,
        class: te({
          "v-time-picker-controls__ampm__am": !0,
          "v-time-picker-controls__ampm__btn": !0,
          "v-time-picker-controls__ampm__btn__active": e.period === "am"
        }),
        disabled: e.disabled,
        text: i("$vuetify.timePicker.am"),
        variant: e.disabled && e.period === "am" ? "elevated" : "tonal",
        onClick: () => e.period !== "am" ? a("update:period", "am") : null
      }, null), w(Be, {
        active: e.period === "pm",
        color: e.period === "pm" ? e.color : void 0,
        class: te({
          "v-time-picker-controls__ampm__pm": !0,
          "v-time-picker-controls__ampm__btn": !0,
          "v-time-picker-controls__ampm__btn__active": e.period === "pm"
        }),
        disabled: e.disabled,
        text: i("$vuetify.timePicker.pm"),
        variant: e.disabled && e.period === "pm" ? "elevated" : "tonal",
        onClick: () => e.period !== "pm" ? a("update:period", "pm") : null
      }, null)])])]);
    }), {};
  }
}), dV = jr(24), uh = jr(12), fV = uh.map((e) => e + 12);
jr(60);
const mV = Z({
  allowedHours: [Function, Array],
  allowedMinutes: [Function, Array],
  allowedSeconds: [Function, Array],
  disabled: Boolean,
  format: {
    type: String,
    default: "ampm"
  },
  max: String,
  min: String,
  viewMode: {
    type: String,
    default: "hour"
  },
  period: {
    type: String,
    default: "am",
    validator: (e) => ["am", "pm"].includes(e)
  },
  modelValue: null,
  readonly: Boolean,
  scrollable: Boolean,
  useSeconds: Boolean,
  ...ut(ll({
    title: "$vuetify.timePicker.title"
  }), ["landscape"])
}, "VTimePicker"), ch = oe()({
  name: "VTimePicker",
  props: mV(),
  emits: {
    "update:hour": (e) => !0,
    "update:minute": (e) => !0,
    "update:period": (e) => !0,
    "update:second": (e) => !0,
    "update:modelValue": (e) => !0,
    "update:viewMode": (e) => !0
  },
  setup(e, t) {
    let {
      emit: a,
      slots: r
    } = t;
    const {
      t: i
    } = dt(), n = ee(null), s = ee(null), o = ee(null), l = ee(null), u = ee(null), c = ee(null), d = Ce(e, "period", "am"), m = Ce(e, "viewMode", "hour"), v = ee(null), p = ee(null), h = C(() => {
      let O;
      if (e.allowedHours instanceof Array ? O = (z) => e.allowedHours.includes(z) : O = e.allowedHours, !e.min && !e.max) return O;
      const B = e.min ? Number(e.min.split(":")[0]) : 0, N = e.max ? Number(e.max.split(":")[0]) : 23;
      return (z) => z >= Number(B) && z <= Number(N) && (!O || O(z));
    }), y = C(() => {
      let O;
      const B = !h.value || n.value === null || h.value(n.value);
      if (e.allowedMinutes instanceof Array ? O = (A) => e.allowedMinutes.includes(A) : O = e.allowedMinutes, !e.min && !e.max)
        return B ? O : () => !1;
      const [N, z] = e.min ? e.min.split(":").map(Number) : [0, 0], [J, ae] = e.max ? e.max.split(":").map(Number) : [23, 59], X = N * 60 + Number(z), L = J * 60 + Number(ae);
      return (A) => {
        const x = 60 * n.value + A;
        return x >= X && x <= L && B && (!O || O(A));
      };
    }), f = C(() => {
      let O;
      const N = (!h.value || n.value === null || h.value(n.value)) && (!y.value || s.value === null || y.value(s.value));
      if (e.allowedSeconds instanceof Array ? O = ($) => e.allowedSeconds.includes($) : O = e.allowedSeconds, !e.min && !e.max)
        return N ? O : () => !1;
      const [z, J, ae] = e.min ? e.min.split(":").map(Number) : [0, 0, 0], [X, L, A] = e.max ? e.max.split(":").map(Number) : [23, 59, 59], x = z * 3600 + J * 60 + Number(ae || 0), V = X * 3600 + L * 60 + Number(A || 0);
      return ($) => {
        const b = 3600 * n.value + 60 * s.value + $;
        return b >= x && b <= V && N && (!O || O($));
      };
    }), g = C(() => e.format === "ampm");
    fe(() => e.period, (O) => U(O)), fe(() => e.modelValue, (O) => F(O)), ha(() => {
      F(e.modelValue);
    });
    function P() {
      return n.value != null && s.value != null && (!e.useSeconds || o.value != null) ? `${On(n.value)}:${On(s.value)}` + (e.useSeconds ? `:${On(o.value)}` : "") : null;
    }
    function S() {
      const O = P();
      O !== null && a("update:modelValue", O);
    }
    function _(O) {
      return O ? (O - 1) % 12 + 1 : 12;
    }
    function j(O, B) {
      return O % 12 + (B === "pm" ? 12 : 0);
    }
    function F(O) {
      if (O == null || O === "")
        n.value = null, s.value = null, o.value = null;
      else if (O instanceof Date)
        n.value = O.getHours(), s.value = O.getMinutes(), o.value = O.getSeconds();
      else {
        const [B, , N, , z, J] = O.trim().toLowerCase().match(/^(\d+):(\d+)(:(\d+))?([ap]m)?$/) || new Array(6);
        n.value = J ? j(parseInt(B, 10), J) : parseInt(B, 10), s.value = parseInt(N, 10), o.value = parseInt(z || 0, 10);
      }
      d.value = n.value == null || n.value < 12 ? "am" : "pm";
    }
    function R(O, B) {
      const N = h.value;
      if (!N) return B;
      const z = g.value ? B < 12 ? uh : fV : dV;
      return ((z.find((ae) => N((ae + B) % z.length + z[0])) || 0) + B) % z.length + z[0];
    }
    function U(O) {
      if (d.value = O, n.value != null) {
        const B = n.value + (d.value === "am" ? -12 : 12);
        n.value = R("hour", B);
      }
      return a("update:period", O), S(), !0;
    }
    function W(O) {
      m.value === "hour" ? n.value = g.value ? j(O, d.value) : O : m.value === "minute" ? s.value = O : o.value = O;
    }
    function D(O) {
      switch (m.value || "hour") {
        case "hour":
          a("update:hour", O);
          break;
        case "minute":
          a("update:minute", O);
          break;
        case "second":
          a("update:second", O);
          break;
      }
      const B = n.value !== null && s.value !== null && (e.useSeconds ? o.value !== null : !0);
      m.value === "hour" ? m.value = "minute" : e.useSeconds && m.value === "minute" && (m.value = "second"), !(n.value === l.value && s.value === u.value && (!e.useSeconds || o.value === c.value) || P() === null) && (l.value = n.value, u.value = s.value, e.useSeconds && (c.value = o.value), B && S());
    }
    ce(() => {
      const O = _r.filterProps(e), B = nm.filterProps(e), N = am.filterProps(ut(e, ["format", "modelValue", "min", "max"]));
      return w(_r, ne(O, {
        color: void 0,
        class: ["v-time-picker", e.class],
        style: e.style
      }), {
        title: () => {
          var z;
          return ((z = r.title) == null ? void 0 : z.call(r)) ?? T("div", {
            class: "v-time-picker__title"
          }, [i(e.title)]);
        },
        header: () => w(nm, ne(B, {
          ampm: g.value,
          hour: n.value,
          minute: s.value,
          period: d.value,
          second: o.value,
          viewMode: m.value,
          "onUpdate:period": (z) => U(z),
          "onUpdate:viewMode": (z) => m.value = z,
          ref: v
        }), null),
        default: () => w(am, ne(N, {
          allowedValues: m.value === "hour" ? h.value : m.value === "minute" ? y.value : f.value,
          double: m.value === "hour" && !g.value,
          format: m.value === "hour" ? g.value ? _ : (z) => z : (z) => On(z, 2),
          max: m.value === "hour" ? g.value && d.value === "am" ? 11 : 23 : 59,
          min: m.value === "hour" && g.value && d.value === "pm" ? 12 : 0,
          size: 20,
          step: m.value === "hour" ? 1 : 5,
          modelValue: m.value === "hour" ? n.value : m.value === "minute" ? s.value : o.value,
          onChange: D,
          onInput: W,
          ref: p
        }), null),
        actions: r.actions
      });
    });
  }
}), vV = {
  __name: "time-picker",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfDatePickerNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfTimePicker");
    const t = Jt("VTimePicker", { title: "" }), a = e, r = Gn(), { compProps: i, localData: n } = wt(q(a, "modelValue"), a.statefulLayout), s = C(() => {
      const o = { ...t.value, ...i.value };
      return o.format !== "24hr" && (o["ampm-in-title"] = !0), n.value && (o.modelValue = oh(n.value)), o;
    });
    return (o, l) => (ie(), pe(sl, {
      "model-value": a.modelValue,
      "stateful-layout": e.statefulLayout,
      "formatted-value": s.value.modelValue && H(r).format("2010-04-13T" + s.value.modelValue, "fullTime")
    }, {
      "prepend-inner": re(() => [
        w(H(Ae), {
          icon: e.statefulLayout.options.icons.clock
        }, null, 8, ["icon"])
      ]),
      default: re(() => [
        w(H(qa), null, {
          default: re(() => [
            w(H(ze), { defaults: { global: { density: "default" } } }, {
              default: re(() => [
                w(H(ch), ne(s.value, {
                  "onUpdate:modelValue": l[0] || (l[0] = (u) => {
                    e.statefulLayout.input(a.modelValue, u && H(lV)(u));
                  })
                }), null, 16)
              ]),
              _: 1
            })
          ]),
          _: 1
        })
      ]),
      _: 1
    }, 8, ["model-value", "stateful-layout", "formatted-value"]));
  }
}, Ic = Symbol.for("vuetify:v-tabs"), dh = Z({
  fixed: Boolean,
  sliderColor: String,
  hideSlider: Boolean,
  direction: {
    type: String,
    default: "horizontal"
  },
  ...ut(Ep({
    selectedClass: "v-tab--selected",
    variant: "text"
  }), ["active", "block", "flat", "location", "position", "symbol"])
}, "VTab"), mi = oe()({
  name: "VTab",
  props: dh(),
  setup(e, t) {
    let {
      slots: a,
      attrs: r
    } = t;
    const {
      textColorClasses: i,
      textColorStyles: n
    } = Bt(() => e.sliderColor), s = ee(), o = ee(), l = C(() => e.direction === "horizontal"), u = C(() => {
      var d, m;
      return ((m = (d = s.value) == null ? void 0 : d.group) == null ? void 0 : m.isSelected.value) ?? !1;
    });
    function c(d) {
      var v, p;
      let {
        value: m
      } = d;
      if (m) {
        const h = (p = (v = s.value) == null ? void 0 : v.$el.parentElement) == null ? void 0 : p.querySelector(".v-tab--selected .v-tab__slider"), y = o.value;
        if (!h || !y) return;
        const f = getComputedStyle(h).color, g = h.getBoundingClientRect(), P = y.getBoundingClientRect(), S = l.value ? "x" : "y", _ = l.value ? "X" : "Y", j = l.value ? "right" : "bottom", F = l.value ? "width" : "height", R = g[S], U = P[S], W = R > U ? g[j] - P[j] : g[S] - P[S], D = Math.sign(W) > 0 ? l.value ? "right" : "bottom" : Math.sign(W) < 0 ? l.value ? "left" : "top" : "center", B = (Math.abs(W) + (Math.sign(W) < 0 ? g[F] : P[F])) / Math.max(g[F], P[F]) || 0, N = g[F] / P[F] || 0, z = 1.5;
        Wa(y, {
          backgroundColor: [f, "currentcolor"],
          transform: [`translate${_}(${W}px) scale${_}(${N})`, `translate${_}(${W / z}px) scale${_}(${(B - 1) / z + 1})`, "none"],
          transformOrigin: Array(3).fill(D)
        }, {
          duration: 225,
          easing: ci
        });
      }
    }
    return ce(() => {
      const d = Be.filterProps(e);
      return w(Be, ne({
        symbol: Ic,
        ref: s,
        class: ["v-tab", e.class],
        style: e.style,
        tabindex: u.value ? 0 : -1,
        role: "tab",
        "aria-selected": String(u.value),
        active: !1
      }, d, r, {
        block: e.fixed,
        maxWidth: e.fixed ? 300 : void 0,
        "onGroup:selected": c
      }), {
        ...a,
        default: () => {
          var m;
          return T(ve, null, [((m = a.default) == null ? void 0 : m.call(a)) ?? e.text, !e.hideSlider && T("div", {
            ref: o,
            class: te(["v-tab__slider", i.value]),
            style: ye(n.value)
          }, null)]);
        }
      });
    }), Ut({}, s);
  }
}), pV = (e) => {
  const {
    touchstartX: t,
    touchendX: a,
    touchstartY: r,
    touchendY: i
  } = e, n = 0.5, s = 16;
  e.offsetX = a - t, e.offsetY = i - r, Math.abs(e.offsetY) < n * Math.abs(e.offsetX) && (e.left && a < t - s && e.left(e), e.right && a > t + s && e.right(e)), Math.abs(e.offsetX) < n * Math.abs(e.offsetY) && (e.up && i < r - s && e.up(e), e.down && i > r + s && e.down(e));
};
function hV(e, t) {
  var r;
  const a = e.changedTouches[0];
  t.touchstartX = a.clientX, t.touchstartY = a.clientY, (r = t.start) == null || r.call(t, {
    originalEvent: e,
    ...t
  });
}
function yV(e, t) {
  var r;
  const a = e.changedTouches[0];
  t.touchendX = a.clientX, t.touchendY = a.clientY, (r = t.end) == null || r.call(t, {
    originalEvent: e,
    ...t
  }), pV(t);
}
function gV(e, t) {
  var r;
  const a = e.changedTouches[0];
  t.touchmoveX = a.clientX, t.touchmoveY = a.clientY, (r = t.move) == null || r.call(t, {
    originalEvent: e,
    ...t
  });
}
function bV() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const t = {
    touchstartX: 0,
    touchstartY: 0,
    touchendX: 0,
    touchendY: 0,
    touchmoveX: 0,
    touchmoveY: 0,
    offsetX: 0,
    offsetY: 0,
    left: e.left,
    right: e.right,
    up: e.up,
    down: e.down,
    start: e.start,
    move: e.move,
    end: e.end
  };
  return {
    touchstart: (a) => hV(a, t),
    touchend: (a) => yV(a, t),
    touchmove: (a) => gV(a, t)
  };
}
function kV(e, t) {
  var o;
  const a = t.value, r = a != null && a.parent ? e.parentElement : e, i = (a == null ? void 0 : a.options) ?? {
    passive: !0
  }, n = (o = t.instance) == null ? void 0 : o.$.uid;
  if (!r || n === void 0) return;
  const s = bV(t.value);
  r._touchHandlers = r._touchHandlers ?? /* @__PURE__ */ Object.create(null), r._touchHandlers[n] = s, Fv(s).forEach((l) => {
    r.addEventListener(l, s[l], i);
  });
}
function wV(e, t) {
  var n, s;
  const a = (n = t.value) != null && n.parent ? e.parentElement : e, r = (s = t.instance) == null ? void 0 : s.$.uid;
  if (!(a != null && a._touchHandlers) || r === void 0) return;
  const i = a._touchHandlers[r];
  Fv(i).forEach((o) => {
    a.removeEventListener(o, i[o]);
  }), delete a._touchHandlers[r];
}
const Io = {
  mounted: kV,
  unmounted: wV
}, fh = Symbol.for("vuetify:v-window"), mh = Symbol.for("vuetify:v-window-group"), Oc = Z({
  continuous: Boolean,
  nextIcon: {
    type: [Boolean, String, Function, Object],
    default: "$next"
  },
  prevIcon: {
    type: [Boolean, String, Function, Object],
    default: "$prev"
  },
  reverse: Boolean,
  showArrows: {
    type: [Boolean, String],
    validator: (e) => typeof e == "boolean" || e === "hover"
  },
  verticalArrows: [Boolean, String],
  touch: {
    type: [Object, Boolean],
    default: void 0
  },
  direction: {
    type: String,
    default: "horizontal"
  },
  modelValue: null,
  disabled: Boolean,
  selectedClass: {
    type: String,
    default: "v-window-item--active"
  },
  // TODO: mandatory should probably not be exposed but do this for now
  mandatory: {
    type: [Boolean, String],
    default: "force"
  },
  crossfade: Boolean,
  transitionDuration: Number,
  ..._e(),
  ...Ke(),
  ...it()
}, "VWindow"), Pr = oe()({
  name: "VWindow",
  directives: {
    vTouch: Io
  },
  props: Oc(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      themeClasses: r
    } = ht(e), {
      isRtl: i
    } = jt(), {
      t: n
    } = dt(), s = Rr(e, mh), o = ee(), l = C(() => i.value ? !e.reverse : e.reverse), u = me(!1), c = C(() => {
      if (e.crossfade)
        return "v-window-crossfade-transition";
      const S = e.direction === "vertical" ? "y" : "x", j = (l.value ? !u.value : u.value) ? "-reverse" : "";
      return `v-window-${S}${j}-transition`;
    }), d = me(0), m = ee(void 0), v = C(() => s.items.value.findIndex((S) => s.selected.value.includes(S.id)));
    fe(v, (S, _) => {
      const j = s.items.value.length, F = j - 1;
      j <= 2 ? u.value = S < _ : S === F && _ === 0 ? u.value = !0 : S === 0 && _ === F ? u.value = !1 : u.value = S < _;
    }), St(fh, {
      transition: c,
      isReversed: u,
      transitionCount: d,
      transitionHeight: m,
      rootRef: o
    });
    const p = q(() => e.continuous || v.value !== 0), h = q(() => e.continuous || v.value !== s.items.value.length - 1);
    function y() {
      p.value && s.prev();
    }
    function f() {
      h.value && s.next();
    }
    const g = C(() => {
      const S = [], _ = {
        icon: i.value ? e.nextIcon : e.prevIcon,
        class: `v-window__${l.value ? "right" : "left"}`,
        onClick: s.prev,
        "aria-label": n("$vuetify.carousel.prev")
      };
      S.push(p.value ? a.prev ? a.prev({
        props: _
      }) : w(Be, _, null) : T("div", null, null));
      const j = {
        icon: i.value ? e.prevIcon : e.nextIcon,
        class: `v-window__${l.value ? "left" : "right"}`,
        onClick: s.next,
        "aria-label": n("$vuetify.carousel.next")
      };
      return S.push(h.value ? a.next ? a.next({
        props: j
      }) : w(Be, j, null) : T("div", null, null)), S;
    }), P = C(() => e.touch === !1 ? e.touch : {
      ...{
        left: () => {
          l.value ? y() : f();
        },
        right: () => {
          l.value ? f() : y();
        },
        start: (_) => {
          let {
            originalEvent: j
          } = _;
          j.stopPropagation();
        }
      },
      ...e.touch === !0 ? {} : e.touch
    });
    return ce(() => nt(w(e.tag, {
      ref: o,
      class: te(["v-window", {
        "v-window--show-arrows-on-hover": e.showArrows === "hover",
        "v-window--vertical-arrows": !!e.verticalArrows,
        "v-window--crossfade": !!e.crossfade
      }, r.value, e.class]),
      style: ye([e.style, e.transitionDuration && !Ln ? {
        "--v-window-transition-duration": ge(e.transitionDuration, "ms")
      } : void 0])
    }, {
      default: () => {
        var S, _;
        return [T("div", {
          class: "v-window__container",
          style: {
            height: m.value
          }
        }, [(S = a.default) == null ? void 0 : S.call(a, {
          group: s
        }), e.showArrows !== !1 && T("div", {
          class: te(["v-window__controls", {
            "v-window__controls--left": e.verticalArrows === "left" || e.verticalArrows === !0
          }, {
            "v-window__controls--right": e.verticalArrows === "right"
          }])
        }, [g.value])]), (_ = a.additional) == null ? void 0 : _.call(a, {
          group: s
        })];
      }
    }), [[Io, P.value]])), {
      group: s
    };
  }
}), $V = Z({
  ...ut(Oc(), ["continuous", "nextIcon", "prevIcon", "showArrows", "touch", "mandatory"])
}, "VTabsWindow"), vh = oe()({
  name: "VTabsWindow",
  props: $V(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = Fe(Ic, null), i = Ce(e, "modelValue"), n = C({
      get() {
        var s;
        return i.value != null || !r ? i.value : (s = r.items.value.find((o) => r.selected.value.includes(o.id))) == null ? void 0 : s.value;
      },
      set(s) {
        i.value = s;
      }
    });
    return ce(() => {
      const s = Pr.filterProps(e);
      return w(Pr, ne({
        _as: "VTabsWindow"
      }, s, {
        modelValue: n.value,
        "onUpdate:modelValue": (o) => n.value = o,
        class: ["v-tabs-window", e.class],
        style: e.style,
        mandatory: !1,
        touch: !1
      }), a);
    }), {};
  }
});
function ph() {
  const e = me(!1);
  return ha(() => {
    window.requestAnimationFrame(() => {
      e.value = !0;
    });
  }), {
    ssrBootStyles: q(() => e.value ? void 0 : {
      transition: "none !important"
    }),
    isBooted: No(e)
  };
}
const Ec = Z({
  reverseTransition: {
    type: [Boolean, String],
    default: void 0
  },
  transition: {
    type: [Boolean, String],
    default: void 0
  },
  ..._e(),
  ...Ci(),
  ...bc()
}, "VWindowItem"), Cr = oe()({
  name: "VWindowItem",
  directives: {
    vTouch: Io
  },
  props: Ec(),
  emits: {
    "group:selected": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = Fe(fh), i = wr(e, mh), {
      isBooted: n
    } = ph();
    if (!r || !i) throw new Error("[Vuetify] VWindowItem must be used inside VWindow");
    const s = me(!1), o = C(() => n.value && (r.isReversed.value ? e.reverseTransition !== !1 : e.transition !== !1));
    function l() {
      !s.value || !r || (s.value = !1, r.transitionCount.value > 0 && (r.transitionCount.value -= 1, r.transitionCount.value === 0 && (r.transitionHeight.value = void 0)));
    }
    function u() {
      var p;
      s.value || !r || (s.value = !0, r.transitionCount.value === 0 && (r.transitionHeight.value = ge((p = r.rootRef.value) == null ? void 0 : p.clientHeight)), r.transitionCount.value += 1);
    }
    function c() {
      l();
    }
    function d(p) {
      s.value && qe(() => {
        !o.value || !s.value || !r || (r.transitionHeight.value = ge(p.clientHeight));
      });
    }
    const m = C(() => {
      const p = r.isReversed.value ? e.reverseTransition : e.transition;
      return o.value ? {
        name: typeof p != "string" ? r.transition.value : p,
        onBeforeEnter: u,
        onAfterEnter: l,
        onEnterCancelled: c,
        onBeforeLeave: u,
        onAfterLeave: l,
        onLeaveCancelled: c,
        onEnter: d
      } : !1;
    }), {
      hasContent: v
    } = kc(e, i.isSelected);
    return ce(() => w(Ca, {
      transition: m.value,
      disabled: !n.value
    }, {
      default: () => {
        var p;
        return [nt(T("div", {
          class: te(["v-window-item", i.selectedClass.value, e.class]),
          style: ye(e.style)
        }, [v.value && ((p = a.default) == null ? void 0 : p.call(a))]), [[rn, i.isSelected.value]])];
      }
    })), {
      groupItem: i
    };
  }
}), SV = Z({
  ...Ec()
}, "VTabsWindowItem"), Oo = oe()({
  name: "VTabsWindowItem",
  props: SV(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return ce(() => {
      const r = Cr.filterProps(e);
      return w(Cr, ne({
        _as: "VTabsWindowItem"
      }, r, {
        class: ["v-tabs-window-item", e.class],
        style: e.style
      }), a);
    }), {};
  }
});
function _V(e) {
  let {
    selectedElement: t,
    containerElement: a,
    isRtl: r,
    isHorizontal: i
  } = e;
  const n = vi(i, a), s = hh(i, r, a), o = vi(i, t), l = yh(i, t), u = o * 0.4;
  return s > l ? l - u : s + n < l + o ? l - n + o + u : s;
}
function PV(e) {
  let {
    selectedElement: t,
    containerElement: a,
    isHorizontal: r
  } = e;
  const i = vi(r, a), n = yh(r, t), s = vi(r, t);
  return n - i / 2 + s / 2;
}
function rm(e, t) {
  const a = e ? "scrollWidth" : "scrollHeight";
  return (t == null ? void 0 : t[a]) || 0;
}
function CV(e, t) {
  const a = e ? "clientWidth" : "clientHeight";
  return (t == null ? void 0 : t[a]) || 0;
}
function hh(e, t, a) {
  if (!a)
    return 0;
  const {
    scrollLeft: r,
    offsetWidth: i,
    scrollWidth: n
  } = a;
  return e ? t ? n - i + r : r : a.scrollTop;
}
function vi(e, t) {
  const a = e ? "offsetWidth" : "offsetHeight";
  return (t == null ? void 0 : t[a]) || 0;
}
function yh(e, t) {
  const a = e ? "offsetLeft" : "offsetTop";
  return (t == null ? void 0 : t[a]) || 0;
}
const gh = Symbol.for("vuetify:v-slide-group"), Ac = Z({
  centerActive: Boolean,
  contentClass: null,
  direction: {
    type: String,
    default: "horizontal"
  },
  symbol: {
    type: null,
    default: gh
  },
  nextIcon: {
    type: xe,
    default: "$next"
  },
  prevIcon: {
    type: xe,
    default: "$prev"
  },
  showArrows: {
    type: [Boolean, String],
    validator: (e) => typeof e == "boolean" || ["always", "desktop", "mobile"].includes(e)
  },
  ..._e(),
  ...lp({
    mobile: null
  }),
  ...Ke(),
  ...Pi({
    selectedClass: "v-slide-group-item--active"
  })
}, "VSlideGroup"), Vs = oe()({
  name: "VSlideGroup",
  props: Ac(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      isRtl: r
    } = jt(), {
      displayClasses: i,
      mobile: n
    } = Xs(e), s = Rr(e, e.symbol), o = me(!1), l = me(0), u = me(0), c = me(0), d = C(() => e.direction === "horizontal"), {
      resizeRef: m,
      contentRect: v
    } = Bn(), {
      resizeRef: p,
      contentRect: h
    } = Bn(), y = gP(), f = C(() => ({
      container: m.el,
      duration: 200,
      easing: "easeOutQuart"
    })), g = C(() => s.selected.value.length ? s.items.value.findIndex((V) => V.id === s.selected.value[0]) : -1), P = C(() => s.selected.value.length ? s.items.value.findIndex((V) => V.id === s.selected.value[s.selected.value.length - 1]) : -1);
    if (rt) {
      let V = -1;
      fe(() => [s.selected.value, v.value, h.value, d.value], () => {
        cancelAnimationFrame(V), V = requestAnimationFrame(() => {
          if (v.value && h.value) {
            const $ = d.value ? "width" : "height";
            u.value = v.value[$], c.value = h.value[$], o.value = u.value + 1 < c.value;
          }
          if (g.value >= 0 && p.el) {
            const $ = p.el.children[P.value];
            _($, e.centerActive);
          }
        });
      });
    }
    const S = me(!1);
    function _(V, $) {
      let b = 0;
      $ ? b = PV({
        containerElement: m.el,
        isHorizontal: d.value,
        selectedElement: V
      }) : b = _V({
        containerElement: m.el,
        isHorizontal: d.value,
        isRtl: r.value,
        selectedElement: V
      }), j(b);
    }
    function j(V) {
      if (!rt || !m.el) return;
      const $ = vi(d.value, m.el), b = hh(d.value, r.value, m.el);
      if (!(rm(d.value, m.el) <= $ || // Prevent scrolling by only a couple of pixels, which doesn't look smooth
      Math.abs(V - b) < 16)) {
        if (d.value && r.value && m.el) {
          const {
            scrollWidth: k,
            offsetWidth: E
          } = m.el;
          V = k - E - V;
        }
        d.value ? y.horizontal(V, f.value) : y(V, f.value);
      }
    }
    function F(V) {
      const {
        scrollTop: $,
        scrollLeft: b
      } = V.target;
      l.value = d.value ? b : $;
    }
    function R(V) {
      if (S.value = !0, !(!o.value || !p.el)) {
        for (const $ of V.composedPath())
          for (const b of p.el.children)
            if (b === $) {
              _(b);
              return;
            }
      }
    }
    function U(V) {
      S.value = !1;
    }
    let W = !1;
    function D(V) {
      var $;
      !W && !S.value && !(V.relatedTarget && (($ = p.el) != null && $.contains(V.relatedTarget))) && z(), W = !1;
    }
    function O() {
      W = !0;
    }
    function B(V) {
      if (!p.el) return;
      function $(b) {
        V.preventDefault(), z(b);
      }
      d.value ? V.key === "ArrowRight" ? $(r.value ? "prev" : "next") : V.key === "ArrowLeft" && $(r.value ? "next" : "prev") : V.key === "ArrowDown" ? $("next") : V.key === "ArrowUp" && $("prev"), V.key === "Home" ? $("first") : V.key === "End" && $("last");
    }
    function N(V, $) {
      if (!V) return;
      let b = V;
      do
        b = b == null ? void 0 : b[$ === "next" ? "nextElementSibling" : "previousElementSibling"];
      while (b != null && b.hasAttribute("disabled"));
      return b;
    }
    function z(V) {
      if (!p.el) return;
      let $;
      if (!V)
        $ = gr(p.el)[0];
      else if (V === "next") {
        if ($ = N(p.el.querySelector(":focus"), V), !$) return z("first");
      } else if (V === "prev") {
        if ($ = N(p.el.querySelector(":focus"), V), !$) return z("last");
      } else V === "first" ? ($ = p.el.firstElementChild, $ != null && $.hasAttribute("disabled") && ($ = N($, "next"))) : V === "last" && ($ = p.el.lastElementChild, $ != null && $.hasAttribute("disabled") && ($ = N($, "prev")));
      $ && $.focus({
        preventScroll: !0
      });
    }
    function J(V) {
      const $ = d.value && r.value ? -1 : 1, b = (V === "prev" ? -$ : $) * u.value;
      let I = l.value + b;
      if (d.value && r.value && m.el) {
        const {
          scrollWidth: k,
          offsetWidth: E
        } = m.el;
        I += k - E;
      }
      j(I);
    }
    const ae = C(() => ({
      next: s.next,
      prev: s.prev,
      select: s.select,
      isSelected: s.isSelected
    })), X = C(() => o.value || Math.abs(l.value) > 0), L = C(() => {
      switch (e.showArrows) {
        case "always":
          return !0;
        case "desktop":
          return !n.value;
        case !0:
          return X.value;
        case "mobile":
          return n.value || X.value;
        default:
          return !n.value && X.value;
      }
    }), A = C(() => Math.abs(l.value) > 1), x = C(() => {
      if (!m.value || !X.value) return !1;
      const V = rm(d.value, m.el), $ = CV(d.value, m.el);
      return V - $ - Math.abs(l.value) > 1;
    });
    return ce(() => w(e.tag, {
      class: te(["v-slide-group", {
        "v-slide-group--vertical": !d.value,
        "v-slide-group--has-affixes": L.value,
        "v-slide-group--is-overflowing": o.value
      }, i.value, e.class]),
      style: ye(e.style),
      tabindex: S.value || s.selected.value.length ? -1 : 0,
      onFocus: D
    }, {
      default: () => {
        var V, $, b;
        return [L.value && T("div", {
          key: "prev",
          class: te(["v-slide-group__prev", {
            "v-slide-group__prev--disabled": !A.value
          }]),
          onMousedown: O,
          onClick: () => A.value && J("prev")
        }, [((V = a.prev) == null ? void 0 : V.call(a, ae.value)) ?? w(ko, null, {
          default: () => [w(Ae, {
            icon: r.value ? e.nextIcon : e.prevIcon
          }, null)]
        })]), T("div", {
          key: "container",
          ref: m,
          class: te(["v-slide-group__container", e.contentClass]),
          onScroll: F
        }, [T("div", {
          ref: p,
          class: "v-slide-group__content",
          onFocusin: R,
          onFocusout: U,
          onKeydown: B
        }, [($ = a.default) == null ? void 0 : $.call(a, ae.value)])]), L.value && T("div", {
          key: "next",
          class: te(["v-slide-group__next", {
            "v-slide-group__next--disabled": !x.value
          }]),
          onMousedown: O,
          onClick: () => x.value && J("next")
        }, [((b = a.next) == null ? void 0 : b.call(a, ae.value)) ?? w(ko, null, {
          default: () => [w(Ae, {
            icon: r.value ? e.prevIcon : e.nextIcon
          }, null)]
        })])];
      }
    })), {
      selected: s.selected,
      scrollTo: J,
      scrollOffset: l,
      focus: z,
      hasPrev: A,
      hasNext: x
    };
  }
});
function xV(e) {
  return e ? e.map((t) => gs(t) ? t : {
    text: t,
    value: t
  }) : [];
}
const VV = Z({
  alignTabs: {
    type: String,
    default: "start"
  },
  color: String,
  fixedTabs: Boolean,
  items: {
    type: Array,
    default: () => []
  },
  stacked: Boolean,
  bgColor: String,
  grow: Boolean,
  height: {
    type: [Number, String],
    default: void 0
  },
  hideSlider: Boolean,
  sliderColor: String,
  ...yn(dh(), ["spaced"]),
  ...Ac({
    mandatory: "force",
    selectedClass: "v-tab-item--selected"
  }),
  ...ga(),
  ...Ke()
}, "VTabs"), Tc = oe()({
  name: "VTabs",
  props: VV(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      slots: r
    } = t;
    const i = Ce(e, "modelValue"), n = C(() => xV(e.items)), {
      densityClasses: s
    } = ja(e), {
      backgroundColorClasses: o,
      backgroundColorStyles: l
    } = pt(() => e.bgColor), {
      scopeId: u
    } = nl();
    return Ta({
      VTab: {
        color: q(() => e.color),
        direction: q(() => e.direction),
        stacked: q(() => e.stacked),
        fixed: q(() => e.fixedTabs),
        sliderColor: q(() => e.sliderColor),
        hideSlider: q(() => e.hideSlider)
      }
    }), ce(() => {
      const c = Vs.filterProps(e), d = !!(r.window || e.items.length > 0);
      return T(ve, null, [w(Vs, ne(c, {
        modelValue: i.value,
        "onUpdate:modelValue": (m) => i.value = m,
        class: ["v-tabs", `v-tabs--${e.direction}`, `v-tabs--align-tabs-${e.alignTabs}`, {
          "v-tabs--fixed-tabs": e.fixedTabs,
          "v-tabs--grow": e.grow,
          "v-tabs--stacked": e.stacked
        }, s.value, o.value, e.class],
        style: [{
          "--v-tabs-height": ge(e.height)
        }, l.value, e.style],
        role: "tablist",
        symbol: Ic
      }, u, a), {
        default: () => {
          var m;
          return [((m = r.default) == null ? void 0 : m.call(r)) ?? n.value.map((v) => {
            var p;
            return ((p = r.tab) == null ? void 0 : p.call(r, {
              item: v
            })) ?? w(mi, ne(v, {
              key: v.text,
              value: v.value,
              spaced: e.spaced
            }), {
              default: r[`tab.${v.value}`] ? () => {
                var h;
                return (h = r[`tab.${v.value}`]) == null ? void 0 : h.call(r, {
                  item: v
                });
              } : void 0
            });
          })];
        }
      }), d && w(vh, ne({
        modelValue: i.value,
        "onUpdate:modelValue": (m) => i.value = m,
        key: "tabs-window"
      }, u), {
        default: () => {
          var m;
          return [n.value.map((v) => {
            var p;
            return ((p = r.item) == null ? void 0 : p.call(r, {
              item: v
            })) ?? w(Oo, {
              value: v.value
            }, {
              default: () => {
                var h;
                return (h = r[`item.${v.value}`]) == null ? void 0 : h.call(r, {
                  item: v
                });
              }
            });
          }), (m = r.window) == null ? void 0 : m.call(r)];
        }
      })]);
    }), {};
  }
}), IV = {
  __name: "date-time-picker",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfDatePickerNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfDatePicker");
    const t = Jt("VDatePicker", { hideHeader: !0 }), a = Jt("VTimePicker", { title: "" }), r = e, i = Gn(), n = ee("date"), s = ee(!1);
    fe(s, () => {
      n.value = "date";
    });
    const { compProps: o, localData: l } = wt(q(r, "modelValue"), r.statefulLayout), u = C(() => {
      const d = { ...t.value, ...o.value };
      return d.hideActions = !0, l.value && (d.modelValue = new Date(l.value)), d["onUpdate:modelValue"] = (m) => {
        if (m) {
          if (l.value) {
            const v = m && lh(
              /** @type Date */
              /** @type unknown */
              m
            )[0];
            r.statefulLayout.input(r.modelValue, v + l.value.slice(10));
          } else
            r.statefulLayout.input(r.modelValue, Vc(m));
          n.value = "time";
        }
      }, d;
    }), c = C(() => {
      const d = { ...a.value, ...o.value };
      return d.format !== "24hr" && (d["ampm-in-title"] = !0), l.value && (d.modelValue = oh(l.value.slice(11))), d["onUpdate:modelValue"] = (m) => {
        l.value && r.statefulLayout.input(r.modelValue, l.value.slice(0, 11) + m + l.value.slice(16));
      }, d;
    });
    return (d, m) => (ie(), pe(sl, {
      "menu-opened": s.value,
      "onUpdate:menuOpened": m[2] || (m[2] = (v) => s.value = v),
      "model-value": e.modelValue,
      "stateful-layout": e.statefulLayout,
      "formatted-value": e.modelValue.data && H(i).format(e.modelValue.data, "fullDateTime")
    }, {
      "prepend-inner": re(() => [
        w(H(Ae), {
          icon: e.statefulLayout.options.icons.calendar
        }, null, 8, ["icon"])
      ]),
      default: re(() => [
        w(H(qa), null, {
          default: re(() => [
            w(H(Tc), {
              modelValue: n.value,
              "onUpdate:modelValue": m[0] || (m[0] = (v) => n.value = v),
              "align-tabs": "center"
            }, {
              default: re(() => [
                w(H(mi), { value: "date" }, {
                  default: re(() => [
                    w(H(Ae), {
                      icon: e.statefulLayout.options.icons.calendar
                    }, null, 8, ["icon"])
                  ]),
                  _: 1
                }),
                w(H(mi), {
                  value: "time",
                  disabled: !e.modelValue.data
                }, {
                  default: re(() => [
                    w(H(Ae), {
                      icon: e.statefulLayout.options.icons.clock
                    }, null, 8, ["icon"])
                  ]),
                  _: 1
                }, 8, ["disabled"])
              ]),
              _: 1
            }, 8, ["modelValue"]),
            w(H(vh), {
              modelValue: n.value,
              "onUpdate:modelValue": m[1] || (m[1] = (v) => n.value = v)
            }, {
              default: re(() => [
                w(H(Oo), { value: "date" }, {
                  default: re(() => [
                    w(H(sh), en(tn(u.value)), null, 16)
                  ]),
                  _: 1
                }),
                w(H(Oo), { value: "time" }, {
                  default: re(() => [
                    w(H(ze), { defaults: { global: { density: "default" } } }, {
                      default: re(() => [
                        w(H(ch), en(tn(c.value)), null, 16)
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ]),
              _: 1
            }, 8, ["modelValue"])
          ]),
          _: 1
        })
      ]),
      _: 1
    }, 8, ["menu-opened", "model-value", "stateful-layout", "formatted-value"]));
  }
}, OV = Z({
  color: {
    type: Object
  },
  disabled: Boolean,
  dotSize: {
    type: [Number, String],
    default: 10
  },
  height: {
    type: [Number, String],
    default: 150
  },
  width: {
    type: [Number, String],
    default: 300
  },
  ..._e()
}, "VColorPickerCanvas"), EV = Ha({
  name: "VColorPickerCanvas",
  props: OV(),
  emits: {
    "update:color": (e) => !0,
    "update:position": (e) => !0
  },
  setup(e, t) {
    let {
      emit: a
    } = t;
    const r = me(!1), i = ee(), n = me(parseFloat(e.width)), s = me(parseFloat(e.height)), o = ee({
      x: 0,
      y: 0
    }), l = C({
      get: () => o.value,
      set(y) {
        var P, S;
        if (!i.value) return;
        const {
          x: f,
          y: g
        } = y;
        o.value = y, a("update:color", {
          h: ((P = e.color) == null ? void 0 : P.h) ?? 0,
          s: lt(f, 0, n.value) / n.value,
          v: 1 - lt(g, 0, s.value) / s.value,
          a: ((S = e.color) == null ? void 0 : S.a) ?? 1
        });
      }
    }), u = C(() => {
      const {
        x: y,
        y: f
      } = l.value, g = parseInt(e.dotSize, 10) / 2;
      return {
        width: ge(e.dotSize),
        height: ge(e.dotSize),
        transform: `translate(${ge(y - g)}, ${ge(f - g)})`
      };
    }), {
      resizeRef: c
    } = Bn((y) => {
      var P;
      if (!((P = c.el) != null && P.offsetParent)) return;
      const {
        width: f,
        height: g
      } = y[0].contentRect;
      n.value = f, s.value = g;
    });
    function d(y, f, g) {
      const {
        left: P,
        top: S,
        width: _,
        height: j
      } = g;
      l.value = {
        x: lt(y - P, 0, _),
        y: lt(f - S, 0, j)
      };
    }
    function m(y) {
      y.type === "mousedown" && y.preventDefault(), !e.disabled && (v(y), window.addEventListener("mousemove", v), window.addEventListener("mouseup", p), window.addEventListener("touchmove", v), window.addEventListener("touchend", p));
    }
    function v(y) {
      if (e.disabled || !i.value) return;
      r.value = !0;
      const f = h_(y);
      d(f.clientX, f.clientY, i.value.getBoundingClientRect());
    }
    function p() {
      window.removeEventListener("mousemove", v), window.removeEventListener("mouseup", p), window.removeEventListener("touchmove", v), window.removeEventListener("touchend", p);
    }
    function h() {
      var S;
      if (!i.value) return;
      const y = i.value, f = y.getContext("2d");
      if (!f) return;
      const g = f.createLinearGradient(0, 0, y.width, 0);
      g.addColorStop(0, "hsla(0, 0%, 100%, 1)"), g.addColorStop(1, `hsla(${((S = e.color) == null ? void 0 : S.h) ?? 0}, 100%, 50%, 1)`), f.fillStyle = g, f.fillRect(0, 0, y.width, y.height);
      const P = f.createLinearGradient(0, 0, 0, y.height);
      P.addColorStop(0, "hsla(0, 0%, 0%, 0)"), P.addColorStop(1, "hsla(0, 0%, 0%, 1)"), f.fillStyle = P, f.fillRect(0, 0, y.width, y.height);
    }
    return fe(() => {
      var y;
      return (y = e.color) == null ? void 0 : y.h;
    }, h, {
      immediate: !0
    }), fe(() => [n.value, s.value], (y, f) => {
      h(), o.value = {
        x: l.value.x * y[0] / f[0],
        y: l.value.y * y[1] / f[1]
      };
    }, {
      flush: "post"
    }), fe(() => e.color, () => {
      if (r.value) {
        r.value = !1;
        return;
      }
      o.value = e.color ? {
        x: e.color.s * n.value,
        y: (1 - e.color.v) * s.value
      } : {
        x: 0,
        y: 0
      };
    }, {
      deep: !0,
      immediate: !0
    }), ha(() => h()), ce(() => T("div", {
      ref: c,
      class: te(["v-color-picker-canvas", e.class]),
      style: ye(e.style),
      onMousedown: m,
      onTouchstartPassive: m
    }, [T("canvas", {
      ref: i,
      width: n.value,
      height: s.value
    }, null), e.color && T("div", {
      class: te(["v-color-picker-canvas__dot", {
        "v-color-picker-canvas__dot--disabled": e.disabled
      }]),
      style: ye(u.value)
    }, null)])), {};
  }
});
function AV(e, t) {
  if (t) {
    const {
      a,
      ...r
    } = e;
    return r;
  }
  return e;
}
function TV(e, t) {
  if (t == null || typeof t == "string") {
    const a = e.a !== 1;
    if (t != null && t.startsWith("rgb(")) {
      const {
        r: i,
        g: n,
        b: s,
        a: o
      } = Fa(e);
      return `rgb(${i} ${n} ${s}` + (a ? ` / ${o})` : ")");
    } else if (t != null && t.startsWith("hsl(")) {
      const {
        h: i,
        s: n,
        l: s,
        a: o
      } = po(e);
      return `hsl(${i} ${Math.round(n * 100)} ${Math.round(s * 100)}` + (a ? ` / ${o})` : ")");
    }
    const r = ap(e);
    return e.a === 1 ? r.slice(0, 7) : r;
  }
  if (typeof t == "object") {
    let a;
    return In(t, ["r", "g", "b"]) ? a = Fa(e) : In(t, ["h", "s", "l"]) ? a = po(e) : In(t, ["h", "s", "v"]) && (a = e), AV(a, !In(t, ["a"]) && e.a === 1);
  }
  return e;
}
const cr = {
  h: 0,
  s: 0,
  v: 0,
  a: 1
}, Eo = {
  inputProps: {
    type: "number",
    min: 0
  },
  inputs: [{
    label: "R",
    max: 255,
    step: 1,
    getValue: (e) => Math.round(e.r),
    getColor: (e, t) => ({
      ...e,
      r: Number(t)
    }),
    localeKey: "redInput"
  }, {
    label: "G",
    max: 255,
    step: 1,
    getValue: (e) => Math.round(e.g),
    getColor: (e, t) => ({
      ...e,
      g: Number(t)
    }),
    localeKey: "greenInput"
  }, {
    label: "B",
    max: 255,
    step: 1,
    getValue: (e) => Math.round(e.b),
    getColor: (e, t) => ({
      ...e,
      b: Number(t)
    }),
    localeKey: "blueInput"
  }, {
    label: "A",
    max: 1,
    step: 0.01,
    getValue: (e) => {
      let {
        a: t
      } = e;
      return t != null ? Math.round(t * 100) / 100 : 1;
    },
    getColor: (e, t) => ({
      ...e,
      a: Number(t)
    }),
    localeKey: "alphaInput"
  }],
  to: Fa,
  from: Si
};
var cm;
const jV = {
  ...Eo,
  inputs: (cm = Eo.inputs) == null ? void 0 : cm.slice(0, 3)
}, Ao = {
  inputProps: {
    type: "number",
    min: 0
  },
  inputs: [{
    label: "H",
    max: 360,
    step: 1,
    getValue: (e) => Math.round(e.h),
    getColor: (e, t) => ({
      ...e,
      h: Number(t)
    }),
    localeKey: "hueInput"
  }, {
    label: "S",
    max: 1,
    step: 0.01,
    getValue: (e) => Math.round(e.s * 100) / 100,
    getColor: (e, t) => ({
      ...e,
      s: Number(t)
    }),
    localeKey: "saturationInput"
  }, {
    label: "L",
    max: 1,
    step: 0.01,
    getValue: (e) => Math.round(e.l * 100) / 100,
    getColor: (e, t) => ({
      ...e,
      l: Number(t)
    }),
    localeKey: "lightnessInput"
  }, {
    label: "A",
    max: 1,
    step: 0.01,
    getValue: (e) => {
      let {
        a: t
      } = e;
      return t != null ? Math.round(t * 100) / 100 : 1;
    },
    getColor: (e, t) => ({
      ...e,
      a: Number(t)
    }),
    localeKey: "alphaInput"
  }],
  to: po,
  from: sc
}, MV = {
  ...Ao,
  inputs: Ao.inputs.slice(0, 3)
}, bh = {
  inputProps: {
    type: "text"
  },
  inputs: [{
    label: "HEXA",
    getValue: (e) => e,
    getColor: (e, t) => t,
    localeKey: "hexaInput"
  }],
  to: ap,
  from: F_
}, DV = {
  ...bh,
  inputs: [{
    label: "HEX",
    getValue: (e) => e.slice(0, 7),
    getColor: (e, t) => t,
    localeKey: "hexInput"
  }]
}, Tn = {
  rgb: jV,
  rgba: Eo,
  hsl: MV,
  hsla: Ao,
  hex: DV,
  hexa: bh
}, RV = (e) => {
  let {
    label: t,
    ...a
  } = e;
  return T("div", {
    class: "v-color-picker-edit__input"
  }, [T("input", en(tn(a)), null), T("span", null, [t])]);
}, NV = Z({
  color: Object,
  disabled: Boolean,
  mode: {
    type: String,
    default: "rgba",
    validator: (e) => Object.keys(Tn).includes(e)
  },
  modes: {
    type: Array,
    default: () => Object.keys(Tn),
    validator: (e) => Array.isArray(e) && e.every((t) => Object.keys(Tn).includes(t))
  },
  ..._e()
}, "VColorPickerEdit"), zV = Ha({
  name: "VColorPickerEdit",
  props: NV(),
  emits: {
    "update:color": (e) => !0,
    "update:mode": (e) => !0
  },
  setup(e, t) {
    let {
      emit: a
    } = t;
    const {
      t: r
    } = dt(), i = C(() => e.modes.map((s) => ({
      ...Tn[s],
      name: s
    }))), n = C(() => {
      var l;
      const s = i.value.find((u) => u.name === e.mode);
      if (!s) return [];
      const o = e.color ? s.to(e.color) : null;
      return (l = s.inputs) == null ? void 0 : l.map((u) => {
        let {
          getValue: c,
          getColor: d,
          localeKey: m,
          ...v
        } = u;
        return {
          ...s.inputProps,
          ...v,
          ariaLabel: r(`$vuetify.colorPicker.ariaLabel.${m}`),
          disabled: e.disabled,
          value: o && c(o),
          onChange: (p) => {
            const h = p.target;
            h && a("update:color", s.from(d(o ?? s.to(cr), h.value)));
          }
        };
      });
    });
    return ce(() => {
      var s;
      return T("div", {
        class: te(["v-color-picker-edit", e.class]),
        style: ye(e.style)
      }, [(s = n.value) == null ? void 0 : s.map((o) => w(RV, o, null)), i.value.length > 1 && w(Be, {
        icon: "$unfold",
        size: "x-small",
        variant: "plain",
        "aria-label": r("$vuetify.colorPicker.ariaLabel.changeFormat"),
        onClick: () => {
          const o = i.value.findIndex((l) => l.name === e.mode);
          a("update:mode", i.value[(o + 1) % i.value.length].name);
        }
      }, null)]);
    }), {};
  }
}), kh = Z({
  color: {
    type: Object
  },
  disabled: Boolean,
  hideAlpha: Boolean,
  hideEyeDropper: Boolean,
  eyeDropperIcon: {
    type: xe,
    default: "$eyeDropper"
  },
  ..._e()
}, "VColorPickerPreview"), LV = Ha({
  name: "VColorPickerPreview",
  props: kh(),
  emits: {
    "update:color": (e) => !0
  },
  setup(e, t) {
    let {
      emit: a
    } = t;
    const {
      t: r
    } = dt(), i = new AbortController();
    hy(() => i.abort());
    async function n() {
      if (!Zd || e.disabled) return;
      const s = new window.EyeDropper();
      try {
        const o = await s.open({
          signal: i.signal
        }), l = Si(Ya(o.sRGBHex));
        a("update:color", {
          ...e.color ?? cr,
          ...l
        });
      } catch {
      }
    }
    return ce(() => {
      var s, o;
      return T("div", {
        class: te(["v-color-picker-preview", {
          "v-color-picker-preview--hide-alpha": e.hideAlpha
        }, e.class]),
        style: ye(e.style)
      }, [Zd && !e.hideEyeDropper && T("div", {
        class: "v-color-picker-preview__eye-dropper",
        key: "eyeDropper"
      }, [w(Be, {
        "aria-label": r("$vuetify.colorPicker.ariaLabel.eyedropper"),
        density: "comfortable",
        disabled: e.disabled,
        icon: e.eyeDropperIcon,
        variant: "plain",
        onClick: n
      }, null)]), T("div", {
        class: "v-color-picker-preview__dot"
      }, [T("div", {
        style: {
          background: ep(e.color ?? cr)
        }
      }, null)]), T("div", {
        class: "v-color-picker-preview__sliders"
      }, [w(Vo, {
        class: "v-color-picker-preview__track v-color-picker-preview__hue",
        name: r("$vuetify.colorPicker.ariaLabel.hueSlider"),
        modelValue: (s = e.color) == null ? void 0 : s.h,
        "onUpdate:modelValue": (l) => a("update:color", {
          ...e.color ?? cr,
          h: l
        }),
        step: 0,
        min: 0,
        max: 360,
        disabled: e.disabled,
        thumbSize: 14,
        trackSize: 8,
        trackFillColor: "white",
        hideDetails: !0
      }, null), !e.hideAlpha && w(Vo, {
        class: "v-color-picker-preview__track v-color-picker-preview__alpha",
        name: r("$vuetify.colorPicker.ariaLabel.alphaSlider"),
        modelValue: ((o = e.color) == null ? void 0 : o.a) ?? 1,
        "onUpdate:modelValue": (l) => a("update:color", {
          ...e.color ?? cr,
          a: l
        }),
        step: 1 / 256,
        min: 0,
        max: 1,
        disabled: e.disabled,
        thumbSize: 14,
        trackSize: 8,
        trackFillColor: "white",
        hideDetails: !0
      }, null)])]);
    }), {};
  }
}), BV = {
  base: "#f44336",
  lighten5: "#ffebee",
  lighten4: "#ffcdd2",
  lighten3: "#ef9a9a",
  lighten2: "#e57373",
  lighten1: "#ef5350",
  darken1: "#e53935",
  darken2: "#d32f2f",
  darken3: "#c62828",
  darken4: "#b71c1c",
  accent1: "#ff8a80",
  accent2: "#ff5252",
  accent3: "#ff1744",
  accent4: "#d50000"
}, FV = {
  base: "#e91e63",
  lighten5: "#fce4ec",
  lighten4: "#f8bbd0",
  lighten3: "#f48fb1",
  lighten2: "#f06292",
  lighten1: "#ec407a",
  darken1: "#d81b60",
  darken2: "#c2185b",
  darken3: "#ad1457",
  darken4: "#880e4f",
  accent1: "#ff80ab",
  accent2: "#ff4081",
  accent3: "#f50057",
  accent4: "#c51162"
}, qV = {
  base: "#9c27b0",
  lighten5: "#f3e5f5",
  lighten4: "#e1bee7",
  lighten3: "#ce93d8",
  lighten2: "#ba68c8",
  lighten1: "#ab47bc",
  darken1: "#8e24aa",
  darken2: "#7b1fa2",
  darken3: "#6a1b9a",
  darken4: "#4a148c",
  accent1: "#ea80fc",
  accent2: "#e040fb",
  accent3: "#d500f9",
  accent4: "#aa00ff"
}, KV = {
  base: "#673ab7",
  lighten5: "#ede7f6",
  lighten4: "#d1c4e9",
  lighten3: "#b39ddb",
  lighten2: "#9575cd",
  lighten1: "#7e57c2",
  darken1: "#5e35b1",
  darken2: "#512da8",
  darken3: "#4527a0",
  darken4: "#311b92",
  accent1: "#b388ff",
  accent2: "#7c4dff",
  accent3: "#651fff",
  accent4: "#6200ea"
}, HV = {
  base: "#3f51b5",
  lighten5: "#e8eaf6",
  lighten4: "#c5cae9",
  lighten3: "#9fa8da",
  lighten2: "#7986cb",
  lighten1: "#5c6bc0",
  darken1: "#3949ab",
  darken2: "#303f9f",
  darken3: "#283593",
  darken4: "#1a237e",
  accent1: "#8c9eff",
  accent2: "#536dfe",
  accent3: "#3d5afe",
  accent4: "#304ffe"
}, UV = {
  base: "#2196f3",
  lighten5: "#e3f2fd",
  lighten4: "#bbdefb",
  lighten3: "#90caf9",
  lighten2: "#64b5f6",
  lighten1: "#42a5f5",
  darken1: "#1e88e5",
  darken2: "#1976d2",
  darken3: "#1565c0",
  darken4: "#0d47a1",
  accent1: "#82b1ff",
  accent2: "#448aff",
  accent3: "#2979ff",
  accent4: "#2962ff"
}, WV = {
  base: "#03a9f4",
  lighten5: "#e1f5fe",
  lighten4: "#b3e5fc",
  lighten3: "#81d4fa",
  lighten2: "#4fc3f7",
  lighten1: "#29b6f6",
  darken1: "#039be5",
  darken2: "#0288d1",
  darken3: "#0277bd",
  darken4: "#01579b",
  accent1: "#80d8ff",
  accent2: "#40c4ff",
  accent3: "#00b0ff",
  accent4: "#0091ea"
}, GV = {
  base: "#00bcd4",
  lighten5: "#e0f7fa",
  lighten4: "#b2ebf2",
  lighten3: "#80deea",
  lighten2: "#4dd0e1",
  lighten1: "#26c6da",
  darken1: "#00acc1",
  darken2: "#0097a7",
  darken3: "#00838f",
  darken4: "#006064",
  accent1: "#84ffff",
  accent2: "#18ffff",
  accent3: "#00e5ff",
  accent4: "#00b8d4"
}, YV = {
  base: "#009688",
  lighten5: "#e0f2f1",
  lighten4: "#b2dfdb",
  lighten3: "#80cbc4",
  lighten2: "#4db6ac",
  lighten1: "#26a69a",
  darken1: "#00897b",
  darken2: "#00796b",
  darken3: "#00695c",
  darken4: "#004d40",
  accent1: "#a7ffeb",
  accent2: "#64ffda",
  accent3: "#1de9b6",
  accent4: "#00bfa5"
}, XV = {
  base: "#4caf50",
  lighten5: "#e8f5e9",
  lighten4: "#c8e6c9",
  lighten3: "#a5d6a7",
  lighten2: "#81c784",
  lighten1: "#66bb6a",
  darken1: "#43a047",
  darken2: "#388e3c",
  darken3: "#2e7d32",
  darken4: "#1b5e20",
  accent1: "#b9f6ca",
  accent2: "#69f0ae",
  accent3: "#00e676",
  accent4: "#00c853"
}, ZV = {
  base: "#8bc34a",
  lighten5: "#f1f8e9",
  lighten4: "#dcedc8",
  lighten3: "#c5e1a5",
  lighten2: "#aed581",
  lighten1: "#9ccc65",
  darken1: "#7cb342",
  darken2: "#689f38",
  darken3: "#558b2f",
  darken4: "#33691e",
  accent1: "#ccff90",
  accent2: "#b2ff59",
  accent3: "#76ff03",
  accent4: "#64dd17"
}, JV = {
  base: "#cddc39",
  lighten5: "#f9fbe7",
  lighten4: "#f0f4c3",
  lighten3: "#e6ee9c",
  lighten2: "#dce775",
  lighten1: "#d4e157",
  darken1: "#c0ca33",
  darken2: "#afb42b",
  darken3: "#9e9d24",
  darken4: "#827717",
  accent1: "#f4ff81",
  accent2: "#eeff41",
  accent3: "#c6ff00",
  accent4: "#aeea00"
}, QV = {
  base: "#ffeb3b",
  lighten5: "#fffde7",
  lighten4: "#fff9c4",
  lighten3: "#fff59d",
  lighten2: "#fff176",
  lighten1: "#ffee58",
  darken1: "#fdd835",
  darken2: "#fbc02d",
  darken3: "#f9a825",
  darken4: "#f57f17",
  accent1: "#ffff8d",
  accent2: "#ffff00",
  accent3: "#ffea00",
  accent4: "#ffd600"
}, eI = {
  base: "#ffc107",
  lighten5: "#fff8e1",
  lighten4: "#ffecb3",
  lighten3: "#ffe082",
  lighten2: "#ffd54f",
  lighten1: "#ffca28",
  darken1: "#ffb300",
  darken2: "#ffa000",
  darken3: "#ff8f00",
  darken4: "#ff6f00",
  accent1: "#ffe57f",
  accent2: "#ffd740",
  accent3: "#ffc400",
  accent4: "#ffab00"
}, tI = {
  base: "#ff9800",
  lighten5: "#fff3e0",
  lighten4: "#ffe0b2",
  lighten3: "#ffcc80",
  lighten2: "#ffb74d",
  lighten1: "#ffa726",
  darken1: "#fb8c00",
  darken2: "#f57c00",
  darken3: "#ef6c00",
  darken4: "#e65100",
  accent1: "#ffd180",
  accent2: "#ffab40",
  accent3: "#ff9100",
  accent4: "#ff6d00"
}, aI = {
  base: "#ff5722",
  lighten5: "#fbe9e7",
  lighten4: "#ffccbc",
  lighten3: "#ffab91",
  lighten2: "#ff8a65",
  lighten1: "#ff7043",
  darken1: "#f4511e",
  darken2: "#e64a19",
  darken3: "#d84315",
  darken4: "#bf360c",
  accent1: "#ff9e80",
  accent2: "#ff6e40",
  accent3: "#ff3d00",
  accent4: "#dd2c00"
}, nI = {
  base: "#795548",
  lighten5: "#efebe9",
  lighten4: "#d7ccc8",
  lighten3: "#bcaaa4",
  lighten2: "#a1887f",
  lighten1: "#8d6e63",
  darken1: "#6d4c41",
  darken2: "#5d4037",
  darken3: "#4e342e",
  darken4: "#3e2723"
}, rI = {
  base: "#607d8b",
  lighten5: "#eceff1",
  lighten4: "#cfd8dc",
  lighten3: "#b0bec5",
  lighten2: "#90a4ae",
  lighten1: "#78909c",
  darken1: "#546e7a",
  darken2: "#455a64",
  darken3: "#37474f",
  darken4: "#263238"
}, iI = {
  base: "#9e9e9e",
  lighten5: "#fafafa",
  lighten4: "#f5f5f5",
  lighten3: "#eeeeee",
  lighten2: "#e0e0e0",
  lighten1: "#bdbdbd",
  darken1: "#757575",
  darken2: "#616161",
  darken3: "#424242",
  darken4: "#212121"
}, sI = {
  black: "#000000",
  white: "#ffffff",
  transparent: "#ffffff00"
}, lI = {
  red: BV,
  pink: FV,
  purple: qV,
  deepPurple: KV,
  indigo: HV,
  blue: UV,
  lightBlue: WV,
  cyan: GV,
  teal: YV,
  green: XV,
  lightGreen: ZV,
  lime: JV,
  yellow: QV,
  amber: eI,
  orange: tI,
  deepOrange: aI,
  brown: nI,
  blueGrey: rI,
  grey: iI,
  shades: sI
}, oI = Z({
  swatches: {
    type: Array,
    default: () => uI(lI)
  },
  disabled: Boolean,
  color: Object,
  maxHeight: [Number, String],
  ..._e()
}, "VColorPickerSwatches");
function uI(e) {
  return Object.keys(e).map((t) => {
    const a = e[t];
    return a.base ? [a.base, a.darken4, a.darken3, a.darken2, a.darken1, a.lighten1, a.lighten2, a.lighten3, a.lighten4, a.lighten5] : [a.black, a.white, a.transparent];
  });
}
const cI = Ha({
  name: "VColorPickerSwatches",
  props: oI(),
  emits: {
    "update:color": (e) => !0
  },
  setup(e, t) {
    let {
      emit: a
    } = t;
    return ce(() => T("div", {
      class: te(["v-color-picker-swatches", e.class]),
      style: ye([{
        maxHeight: ge(e.maxHeight)
      }, e.style])
    }, [T("div", null, [e.swatches.map((r) => T("div", {
      class: "v-color-picker-swatches__swatch"
    }, [r.map((i) => {
      const n = Ya(i), s = Si(n), o = Qv(n);
      return T("div", {
        class: "v-color-picker-swatches__color",
        onClick: () => s && a("update:color", s)
      }, [T("div", {
        style: {
          background: o
        }
      }, [e.color && Et(e.color, s) ? w(Ae, {
        size: "x-small",
        icon: "$success",
        color: K_(i, "#FFFFFF") > 2 ? "white" : "black"
      }, null) : void 0])]);
    })]))])])), {};
  }
}), dI = Z({
  canvasHeight: {
    type: [String, Number],
    default: 150
  },
  disabled: Boolean,
  dotSize: {
    type: [Number, String],
    default: 10
  },
  hideCanvas: Boolean,
  hideSliders: Boolean,
  hideInputs: Boolean,
  mode: {
    type: String,
    default: "rgba",
    validator: (e) => Object.keys(Tn).includes(e)
  },
  modes: {
    type: Array,
    default: () => Object.keys(Tn),
    validator: (e) => Array.isArray(e) && e.every((t) => Object.keys(Tn).includes(t))
  },
  showSwatches: Boolean,
  swatches: Array,
  swatchesMaxHeight: {
    type: [Number, String],
    default: 150
  },
  modelValue: {
    type: [Object, String]
  },
  ...ll({
    hideHeader: !0
  }),
  ...yn(kh(), ["hideEyeDropper", "eyeDropperIcon"])
}, "VColorPicker"), fI = Ha({
  name: "VColorPicker",
  props: dI(),
  emits: {
    "update:modelValue": (e) => !0,
    "update:mode": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = Ce(e, "mode"), i = ee(null), n = Ce(e, "modelValue", void 0, (c) => {
      if (c == null || c === "") return null;
      let d;
      try {
        d = Si(Ya(c));
      } catch (m) {
        return Ja(m), null;
      }
      return d;
    }, (c) => c ? TV(c, e.modelValue) : null), s = C(() => n.value ? {
      ...n.value,
      h: i.value ?? n.value.h
    } : null), {
      rtlClasses: o
    } = jt();
    let l = !0;
    fe(n, (c) => {
      if (!l) {
        l = !0;
        return;
      }
      c && (i.value = c.h);
    }, {
      immediate: !0
    });
    const u = (c) => {
      l = !1, i.value = c.h, n.value = c;
    };
    return bi(() => {
      e.modes.includes(r.value) || (r.value = e.modes[0]);
    }), Ta({
      VSlider: {
        color: void 0,
        trackColor: void 0,
        trackFillColor: void 0
      }
    }), ce(() => {
      const c = _r.filterProps(e);
      return w(_r, ne(c, {
        class: ["v-color-picker", o.value, e.class],
        style: [{
          "--v-color-picker-color-hsv": ep({
            ...s.value ?? cr,
            a: 1
          })
        }, e.style]
      }), {
        ...a,
        default: () => T(ve, null, [!e.hideCanvas && w(EV, {
          key: "canvas",
          color: s.value,
          "onUpdate:color": u,
          disabled: e.disabled,
          dotSize: e.dotSize,
          width: e.width,
          height: e.canvasHeight
        }, null), (!e.hideSliders || !e.hideInputs) && T("div", {
          key: "controls",
          class: "v-color-picker__controls"
        }, [!e.hideSliders && w(LV, {
          key: "preview",
          color: s.value,
          "onUpdate:color": u,
          hideAlpha: !r.value.endsWith("a"),
          disabled: e.disabled,
          hideEyeDropper: e.hideEyeDropper,
          eyeDropperIcon: e.eyeDropperIcon
        }, null), !e.hideInputs && w(zV, {
          key: "edit",
          modes: e.modes,
          mode: r.value,
          "onUpdate:mode": (d) => r.value = d,
          color: s.value,
          "onUpdate:color": u,
          disabled: e.disabled
        }, null)]), e.showSwatches && w(cI, {
          key: "swatches",
          color: s.value,
          "onUpdate:color": u,
          maxHeight: e.swatchesMaxHeight,
          swatches: e.swatches,
          disabled: e.disabled
        }, null)])
      });
    }), {};
  }
}), mI = {
  __name: "color-picker",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfColorPickerNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfColorPicker");
    const t = e, { compProps: a, localData: r } = wt(q(t, "modelValue"), t.statefulLayout), i = C(() => {
      const s = { ...a.value };
      return s.modelValue = r.value, s;
    }), n = C(() => ({
      minWidth: "300px",
      maxWidth: "300px"
    }));
    return (s, o) => (ie(), pe(sl, ne({ "model-value": e.modelValue }, n.value, {
      "stateful-layout": e.statefulLayout,
      "formatted-value": e.modelValue.data
    }), Bo({
      default: re(() => [
        w(H(fI), ne(i.value, {
          "onUpdate:modelValue": o[0] || (o[0] = (l) => e.statefulLayout.input(e.modelValue, l))
        }), null, 16)
      ]),
      _: 2
    }, [
      e.modelValue.data ? {
        name: "prepend-inner",
        fn: re(() => [
          T("div", {
            style: ye(`height:30px; width: 30px; border-radius: 40px; margin-right:6px; background: ${e.modelValue.data};`)
          }, null, 4)
        ]),
        key: "0"
      } : void 0
    ]), 1040, ["model-value", "stateful-layout", "formatted-value"]));
  }
};
function vI(e) {
  return {
    aspectStyles: C(() => {
      const t = Number(e.aspectRatio);
      return t ? {
        paddingBottom: String(1 / t * 100) + "%"
      } : void 0;
    })
  };
}
const wh = Z({
  aspectRatio: [String, Number],
  contentClass: null,
  inline: Boolean,
  ..._e(),
  ...la()
}, "VResponsive"), im = oe()({
  name: "VResponsive",
  props: wh(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      aspectStyles: r
    } = vI(e), {
      dimensionStyles: i
    } = oa(e);
    return ce(() => {
      var n;
      return T("div", {
        class: te(["v-responsive", {
          "v-responsive--inline": e.inline
        }, e.class]),
        style: ye([i.value, e.style])
      }, [T("div", {
        class: "v-responsive__sizer",
        style: ye(r.value)
      }, null), (n = a.additional) == null ? void 0 : n.call(a), a.default && T("div", {
        class: te(["v-responsive__content", e.contentClass])
      }, [a.default()])]);
    }), {};
  }
}), pI = Z({
  absolute: Boolean,
  alt: String,
  cover: Boolean,
  color: String,
  draggable: {
    type: [Boolean, String],
    default: void 0
  },
  eager: Boolean,
  gradient: String,
  lazySrc: String,
  options: {
    type: Object,
    // For more information on types, navigate to:
    // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API
    default: () => ({
      root: void 0,
      rootMargin: void 0,
      threshold: void 0
    })
  },
  sizes: String,
  src: {
    type: [String, Object],
    default: ""
  },
  crossorigin: String,
  referrerpolicy: String,
  srcset: String,
  position: String,
  ...wh(),
  ..._e(),
  ...Kt(),
  ...Xn()
}, "VImg"), ol = oe()({
  name: "VImg",
  directives: {
    vIntersect: hn
  },
  props: pI(),
  emits: {
    loadstart: (e) => !0,
    load: (e) => !0,
    error: (e) => !0
  },
  setup(e, t) {
    let {
      emit: a,
      slots: r
    } = t;
    const {
      backgroundColorClasses: i,
      backgroundColorStyles: n
    } = pt(() => e.color), {
      roundedClasses: s
    } = Ht(e), o = kt("VImg"), l = me(""), u = ee(), c = me(e.eager ? "loading" : "idle"), d = me(), m = me(), v = C(() => e.src && typeof e.src == "object" ? {
      src: e.src.src,
      srcset: e.srcset || e.src.srcset,
      lazySrc: e.lazySrc || e.src.lazySrc,
      aspect: Number(e.aspectRatio || e.src.aspect || 0)
    } : {
      src: e.src,
      srcset: e.srcset,
      lazySrc: e.lazySrc,
      aspect: Number(e.aspectRatio || 0)
    }), p = C(() => v.value.aspect || d.value / m.value || 0);
    fe(() => e.src, () => {
      h(c.value !== "idle");
    }), fe(p, (O, B) => {
      !O && B && u.value && S(u.value);
    }), bi(() => h());
    function h(O) {
      if (!(e.eager && O) && !(nc && !O && !e.eager)) {
        if (c.value = "loading", v.value.lazySrc) {
          const B = new Image();
          B.src = v.value.lazySrc, S(B, null);
        }
        v.value.src && qe(() => {
          var B;
          a("loadstart", ((B = u.value) == null ? void 0 : B.currentSrc) || v.value.src), setTimeout(() => {
            var N;
            if (!o.isUnmounted)
              if ((N = u.value) != null && N.complete) {
                if (u.value.naturalWidth || f(), c.value === "error") return;
                p.value || S(u.value, null), c.value === "loading" && y();
              } else
                p.value || S(u.value), g();
          });
        });
      }
    }
    function y() {
      var O;
      o.isUnmounted || (g(), S(u.value), c.value = "loaded", a("load", ((O = u.value) == null ? void 0 : O.currentSrc) || v.value.src));
    }
    function f() {
      var O;
      o.isUnmounted || (c.value = "error", a("error", ((O = u.value) == null ? void 0 : O.currentSrc) || v.value.src));
    }
    function g() {
      const O = u.value;
      O && (l.value = O.currentSrc || O.src);
    }
    let P = -1;
    Aa(() => {
      clearTimeout(P);
    });
    function S(O) {
      let B = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 100;
      const N = () => {
        if (clearTimeout(P), o.isUnmounted) return;
        const {
          naturalHeight: z,
          naturalWidth: J
        } = O;
        z || J ? (d.value = J, m.value = z) : !O.complete && c.value === "loading" && B != null ? P = window.setTimeout(N, B) : (O.currentSrc.endsWith(".svg") || O.currentSrc.startsWith("data:image/svg+xml")) && (d.value = 1, m.value = 1);
      };
      N();
    }
    const _ = q(() => ({
      "v-img__img--cover": e.cover,
      "v-img__img--contain": !e.cover
    })), j = () => {
      var N;
      if (!v.value.src || c.value === "idle") return null;
      const O = T("img", {
        class: te(["v-img__img", _.value]),
        style: {
          objectPosition: e.position
        },
        crossorigin: e.crossorigin,
        src: v.value.src,
        srcset: v.value.srcset,
        alt: e.alt,
        referrerpolicy: e.referrerpolicy,
        draggable: e.draggable,
        sizes: e.sizes,
        ref: u,
        onLoad: y,
        onError: f
      }, null), B = (N = r.sources) == null ? void 0 : N.call(r);
      return w(Ca, {
        transition: e.transition,
        appear: !0
      }, {
        default: () => [nt(B ? T("picture", {
          class: "v-img__picture"
        }, [B, O]) : O, [[rn, c.value === "loaded"]])]
      });
    }, F = () => w(Ca, {
      transition: e.transition
    }, {
      default: () => [v.value.lazySrc && c.value !== "loaded" && T("img", {
        class: te(["v-img__img", "v-img__img--preload", _.value]),
        style: {
          objectPosition: e.position
        },
        crossorigin: e.crossorigin,
        src: v.value.lazySrc,
        alt: e.alt,
        referrerpolicy: e.referrerpolicy,
        draggable: e.draggable
      }, null)]
    }), R = () => r.placeholder ? w(Ca, {
      transition: e.transition,
      appear: !0
    }, {
      default: () => [(c.value === "loading" || c.value === "error" && !r.error) && T("div", {
        class: "v-img__placeholder"
      }, [r.placeholder()])]
    }) : null, U = () => r.error ? w(Ca, {
      transition: e.transition,
      appear: !0
    }, {
      default: () => [c.value === "error" && T("div", {
        class: "v-img__error"
      }, [r.error()])]
    }) : null, W = () => e.gradient ? T("div", {
      class: "v-img__gradient",
      style: {
        backgroundImage: `linear-gradient(${e.gradient})`
      }
    }, null) : null, D = me(!1);
    {
      const O = fe(p, (B) => {
        B && (requestAnimationFrame(() => {
          requestAnimationFrame(() => {
            D.value = !0;
          });
        }), O());
      });
    }
    return ce(() => {
      const O = im.filterProps(e);
      return nt(w(im, ne({
        class: ["v-img", {
          "v-img--absolute": e.absolute,
          "v-img--booting": !D.value
        }, i.value, s.value, e.class],
        style: [{
          width: ge(e.width === "auto" ? d.value : e.width)
        }, n.value, e.style]
      }, O, {
        aspectRatio: p.value,
        "aria-label": e.alt,
        role: e.alt ? "img" : void 0
      }), {
        additional: () => T(ve, null, [w(j, null, null), w(F, null, null), w(W, null, null), w(R, null, null), w(U, null, null)]),
        default: r.default
      }), [[hn, {
        handler: h,
        options: e.options
      }, null, {
        once: !0
      }]]);
    }), {
      currentSrc: l,
      image: u,
      state: c,
      naturalWidth: d,
      naturalHeight: m
    };
  }
}), hI = Z({
  start: Boolean,
  end: Boolean,
  icon: xe,
  image: String,
  text: String,
  ...sn(),
  ..._e(),
  ...ga(),
  ...Kt(),
  ...xi(),
  ...Ke(),
  ...it(),
  ...on({
    variant: "flat"
  })
}, "VAvatar"), Ea = oe()({
  name: "VAvatar",
  props: hI(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      themeClasses: r
    } = ht(e), {
      borderClasses: i
    } = ln(e), {
      colorClasses: n,
      colorStyles: s,
      variantClasses: o
    } = Dr(e), {
      densityClasses: l
    } = ja(e), {
      roundedClasses: u
    } = Ht(e), {
      sizeClasses: c,
      sizeStyles: d
    } = Vi(e);
    return ce(() => w(e.tag, {
      class: te(["v-avatar", {
        "v-avatar--start": e.start,
        "v-avatar--end": e.end
      }, r.value, i.value, n.value, l.value, u.value, c.value, o.value, e.class]),
      style: ye([s.value, d.value, e.style])
    }, {
      default: () => [a.default ? w(ze, {
        key: "content-defaults",
        defaults: {
          VImg: {
            cover: !0,
            src: e.image
          },
          VIcon: {
            icon: e.icon
          }
        }
      }, {
        default: () => [a.default()]
      }) : e.image ? w(ol, {
        key: "image",
        src: e.image,
        alt: "",
        cover: !0
      }, null) : e.icon ? w(Ae, {
        key: "icon",
        icon: e.icon
      }, null) : e.text, Yn(!1, "v-avatar")]
    })), {};
  }
}), $h = Symbol.for("vuetify:v-chip-group"), yI = Z({
  baseColor: String,
  column: Boolean,
  filter: Boolean,
  valueComparator: {
    type: Function,
    default: Et
  },
  ...Ac(),
  ..._e(),
  ...Pi({
    selectedClass: "v-chip--selected"
  }),
  ...Ke(),
  ...it(),
  ...on({
    variant: "tonal"
  })
}, "VChipGroup");
oe()({
  name: "VChipGroup",
  props: yI(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      themeClasses: r
    } = ht(e), {
      isSelected: i,
      select: n,
      next: s,
      prev: o,
      selected: l
    } = Rr(e, $h);
    return Ta({
      VChip: {
        baseColor: q(() => e.baseColor),
        color: q(() => e.color),
        disabled: q(() => e.disabled),
        filter: q(() => e.filter),
        variant: q(() => e.variant)
      }
    }), ce(() => {
      const u = Vs.filterProps(e);
      return w(Vs, ne(u, {
        class: ["v-chip-group", {
          "v-chip-group--column": e.column
        }, r.value, e.class],
        style: e.style
      }), {
        default: () => {
          var c;
          return [(c = a.default) == null ? void 0 : c.call(a, {
            isSelected: i,
            select: n,
            next: s,
            prev: o,
            selected: l.value
          })];
        }
      });
    }), {};
  }
});
const gI = Z({
  activeClass: String,
  appendAvatar: String,
  appendIcon: xe,
  baseColor: String,
  closable: Boolean,
  closeIcon: {
    type: xe,
    default: "$delete"
  },
  closeLabel: {
    type: String,
    default: "$vuetify.close"
  },
  draggable: Boolean,
  filter: Boolean,
  filterIcon: {
    type: xe,
    default: "$complete"
  },
  label: Boolean,
  link: {
    type: Boolean,
    default: void 0
  },
  pill: Boolean,
  prependAvatar: String,
  prependIcon: xe,
  ripple: {
    type: [Boolean, Object],
    default: !0
  },
  text: {
    type: [String, Number, Boolean],
    default: void 0
  },
  modelValue: {
    type: Boolean,
    default: !0
  },
  onClick: Lt(),
  onClickOnce: Lt(),
  ...sn(),
  ..._e(),
  ...ga(),
  ...ba(),
  ...Ci(),
  ...Kt(),
  ...al(),
  ...xi(),
  ...Ke({
    tag: "span"
  }),
  ...it(),
  ...on({
    variant: "tonal"
  })
}, "VChip"), ul = oe()({
  name: "VChip",
  directives: {
    vRipple: Ft
  },
  props: gI(),
  emits: {
    "click:close": (e) => !0,
    "update:modelValue": (e) => !0,
    "group:selected": (e) => !0,
    click: (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      emit: r,
      slots: i
    } = t;
    const {
      t: n
    } = dt(), {
      borderClasses: s
    } = ln(e), {
      densityClasses: o
    } = ja(e), {
      elevationClasses: l
    } = ka(e), {
      roundedClasses: u
    } = Ht(e), {
      sizeClasses: c
    } = Vi(e), {
      themeClasses: d
    } = ht(e), m = Ce(e, "modelValue"), v = wr(e, $h, !1), p = wr(e, gh, !1), h = tl(e, a), y = q(() => e.link !== !1 && h.isLink.value), f = C(() => !e.disabled && e.link !== !1 && (!!v || e.link || h.isClickable.value)), g = q(() => ({
      "aria-label": n(e.closeLabel),
      disabled: e.disabled,
      onClick(R) {
        R.preventDefault(), R.stopPropagation(), m.value = !1, r("click:close", R);
      }
    }));
    fe(m, (R) => {
      R ? (v == null || v.register(), p == null || p.register()) : (v == null || v.unregister(), p == null || p.unregister());
    });
    const {
      colorClasses: P,
      colorStyles: S,
      variantClasses: _
    } = Dr(() => ({
      color: !v || v.isSelected.value ? e.color ?? e.baseColor : e.baseColor,
      variant: e.variant
    }));
    function j(R) {
      var U;
      r("click", R), f.value && ((U = h.navigate) == null || U.call(h, R), v == null || v.toggle());
    }
    function F(R) {
      (R.key === "Enter" || R.key === " ") && (R.preventDefault(), j(R));
    }
    return () => {
      var z;
      const R = h.isLink.value ? "a" : e.tag, U = !!(e.appendIcon || e.appendAvatar), W = !!(U || i.append), D = !!(i.close || e.closable), O = !!(i.filter || e.filter) && v, B = !!(e.prependIcon || e.prependAvatar), N = !!(B || i.prepend);
      return m.value && nt(w(R, ne(h.linkProps, {
        class: ["v-chip", {
          "v-chip--disabled": e.disabled,
          "v-chip--label": e.label,
          "v-chip--link": f.value,
          "v-chip--filter": O,
          "v-chip--pill": e.pill,
          [`${e.activeClass}`]: e.activeClass && ((z = h.isActive) == null ? void 0 : z.value)
        }, d.value, s.value, P.value, o.value, l.value, u.value, c.value, _.value, v == null ? void 0 : v.selectedClass.value, e.class],
        style: [S.value, e.style],
        disabled: e.disabled || void 0,
        draggable: e.draggable,
        tabindex: f.value ? 0 : void 0,
        onClick: j,
        onKeydown: f.value && !y.value && F
      }), {
        default: () => {
          var J;
          return [Yn(f.value, "v-chip"), O && w(Rp, {
            key: "filter"
          }, {
            default: () => [nt(T("div", {
              class: "v-chip__filter"
            }, [i.filter ? w(ze, {
              key: "filter-defaults",
              disabled: !e.filterIcon,
              defaults: {
                VIcon: {
                  icon: e.filterIcon
                }
              }
            }, i.filter) : w(Ae, {
              key: "filter-icon",
              icon: e.filterIcon
            }, null)]), [[rn, v.isSelected.value]])]
          }), N && T("div", {
            key: "prepend",
            class: "v-chip__prepend"
          }, [i.prepend ? w(ze, {
            key: "prepend-defaults",
            disabled: !B,
            defaults: {
              VAvatar: {
                image: e.prependAvatar,
                start: !0
              },
              VIcon: {
                icon: e.prependIcon,
                start: !0
              }
            }
          }, i.prepend) : T(ve, null, [e.prependIcon && w(Ae, {
            key: "prepend-icon",
            icon: e.prependIcon,
            start: !0
          }, null), e.prependAvatar && w(Ea, {
            key: "prepend-avatar",
            image: e.prependAvatar,
            start: !0
          }, null)])]), T("div", {
            class: "v-chip__content",
            "data-no-activator": ""
          }, [((J = i.default) == null ? void 0 : J.call(i, {
            isSelected: v == null ? void 0 : v.isSelected.value,
            selectedClass: v == null ? void 0 : v.selectedClass.value,
            select: v == null ? void 0 : v.select,
            toggle: v == null ? void 0 : v.toggle,
            value: v == null ? void 0 : v.value.value,
            disabled: e.disabled
          })) ?? Xe(e.text)]), W && T("div", {
            key: "append",
            class: "v-chip__append"
          }, [i.append ? w(ze, {
            key: "append-defaults",
            disabled: !U,
            defaults: {
              VAvatar: {
                end: !0,
                image: e.appendAvatar
              },
              VIcon: {
                end: !0,
                icon: e.appendIcon
              }
            }
          }, i.append) : T(ve, null, [e.appendIcon && w(Ae, {
            key: "append-icon",
            end: !0,
            icon: e.appendIcon
          }, null), e.appendAvatar && w(Ea, {
            key: "append-avatar",
            end: !0,
            image: e.appendAvatar
          }, null)])]), D && T("button", ne({
            key: "close",
            class: "v-chip__close",
            type: "button",
            "data-testid": "close-chip"
          }, g.value), [i.close ? w(ze, {
            key: "close-defaults",
            defaults: {
              VIcon: {
                icon: e.closeIcon,
                size: "x-small"
              }
            }
          }, i.close) : w(Ae, {
            key: "close-icon",
            icon: e.closeIcon,
            size: "x-small"
          }, null)])];
        }
      }), [[Ft, f.value && e.ripple, null]]);
    };
  }
}), To = Symbol.for("vuetify:list");
function Sh() {
  let {
    filterable: e
  } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
    filterable: !1
  };
  const t = Fe(To, {
    filterable: !1,
    hasPrepend: me(!1),
    updateHasPrepend: () => null
  }), a = {
    filterable: t.filterable || e,
    hasPrepend: me(!1),
    updateHasPrepend: (r) => {
      r && (a.hasPrepend.value = r);
    }
  };
  return St(To, a), t;
}
function _h() {
  return Fe(To, null);
}
const jc = (e) => {
  const t = {
    activate: (a) => {
      let {
        id: r,
        value: i,
        activated: n
      } = a;
      return r = Qe(r), e && !i && n.size === 1 && n.has(r) || (i ? n.add(r) : n.delete(r)), n;
    },
    in: (a, r, i) => {
      let n = /* @__PURE__ */ new Set();
      if (a != null)
        for (const s of ot(a))
          n = t.activate({
            id: s,
            value: !0,
            activated: new Set(n),
            children: r,
            parents: i
          });
      return n;
    },
    out: (a) => Array.from(a)
  };
  return t;
}, Ph = (e) => {
  const t = jc(e);
  return {
    activate: (r) => {
      let {
        activated: i,
        id: n,
        ...s
      } = r;
      n = Qe(n);
      const o = i.has(n) ? /* @__PURE__ */ new Set([n]) : /* @__PURE__ */ new Set();
      return t.activate({
        ...s,
        id: n,
        activated: o
      });
    },
    in: (r, i, n) => {
      let s = /* @__PURE__ */ new Set();
      if (r != null) {
        const o = ot(r);
        o.length && (s = t.in(o.slice(0, 1), i, n));
      }
      return s;
    },
    out: (r, i, n) => t.out(r, i, n)
  };
}, bI = (e) => {
  const t = jc(e);
  return {
    activate: (r) => {
      let {
        id: i,
        activated: n,
        children: s,
        ...o
      } = r;
      return i = Qe(i), s.has(i) ? n : t.activate({
        id: i,
        activated: n,
        children: s,
        ...o
      });
    },
    in: t.in,
    out: t.out
  };
}, kI = (e) => {
  const t = Ph(e);
  return {
    activate: (r) => {
      let {
        id: i,
        activated: n,
        children: s,
        ...o
      } = r;
      return i = Qe(i), s.has(i) ? n : t.activate({
        id: i,
        activated: n,
        children: s,
        ...o
      });
    },
    in: t.in,
    out: t.out
  };
}, wI = {
  open: (e) => {
    let {
      id: t,
      value: a,
      opened: r,
      parents: i
    } = e;
    if (a) {
      const n = /* @__PURE__ */ new Set();
      n.add(t);
      let s = i.get(t);
      for (; s != null; )
        n.add(s), s = i.get(s);
      return n;
    } else
      return r.delete(t), r;
  },
  select: () => null
}, Ch = {
  open: (e) => {
    let {
      id: t,
      value: a,
      opened: r,
      parents: i
    } = e;
    if (a) {
      let n = i.get(t);
      for (r.add(t); n != null && n !== t; )
        r.add(n), n = i.get(n);
      return r;
    } else
      r.delete(t);
    return r;
  },
  select: () => null
}, $I = {
  open: Ch.open,
  select: (e) => {
    let {
      id: t,
      value: a,
      opened: r,
      parents: i
    } = e;
    if (!a) return r;
    const n = [];
    let s = i.get(t);
    for (; s != null; )
      n.push(s), s = i.get(s);
    return new Set(n);
  }
}, Mc = (e) => {
  const t = {
    select: (a) => {
      let {
        id: r,
        value: i,
        selected: n
      } = a;
      if (r = Qe(r), e && !i) {
        const s = Array.from(n.entries()).reduce((o, l) => {
          let [u, c] = l;
          return c === "on" && o.push(u), o;
        }, []);
        if (s.length === 1 && s[0] === r) return n;
      }
      return n.set(r, i ? "on" : "off"), n;
    },
    in: (a, r, i, n) => {
      const s = /* @__PURE__ */ new Map();
      for (const o of a || [])
        t.select({
          id: o,
          value: !0,
          selected: s,
          children: r,
          parents: i,
          disabled: n
        });
      return s;
    },
    out: (a) => {
      const r = [];
      for (const [i, n] of a.entries())
        n === "on" && r.push(i);
      return r;
    }
  };
  return t;
}, xh = (e) => {
  const t = Mc(e);
  return {
    select: (r) => {
      let {
        selected: i,
        id: n,
        ...s
      } = r;
      n = Qe(n);
      const o = i.has(n) ? /* @__PURE__ */ new Map([[n, i.get(n)]]) : /* @__PURE__ */ new Map();
      return t.select({
        ...s,
        id: n,
        selected: o
      });
    },
    in: (r, i, n, s) => r != null && r.length ? t.in(r.slice(0, 1), i, n, s) : /* @__PURE__ */ new Map(),
    out: (r, i, n) => t.out(r, i, n)
  };
}, SI = (e) => {
  const t = Mc(e);
  return {
    select: (r) => {
      let {
        id: i,
        selected: n,
        children: s,
        ...o
      } = r;
      return i = Qe(i), s.has(i) ? n : t.select({
        id: i,
        selected: n,
        children: s,
        ...o
      });
    },
    in: t.in,
    out: t.out
  };
}, _I = (e) => {
  const t = xh(e);
  return {
    select: (r) => {
      let {
        id: i,
        selected: n,
        children: s,
        ...o
      } = r;
      return i = Qe(i), s.has(i) ? n : t.select({
        id: i,
        selected: n,
        children: s,
        ...o
      });
    },
    in: t.in,
    out: t.out
  };
}, Vh = (e) => {
  const t = {
    select: (a) => {
      let {
        id: r,
        value: i,
        selected: n,
        children: s,
        parents: o,
        disabled: l
      } = a;
      r = Qe(r);
      const u = new Map(n), c = [r];
      for (; c.length; ) {
        const m = c.shift();
        l.has(m) || n.set(Qe(m), i ? "on" : "off"), s.has(m) && c.push(...s.get(m));
      }
      let d = Qe(o.get(r));
      for (; d; ) {
        let m = !0, v = !0;
        for (const p of s.get(d)) {
          const h = Qe(p);
          if (!l.has(h) && (n.get(h) !== "on" && (m = !1), n.has(h) && n.get(h) !== "off" && (v = !1), !m && !v))
            break;
        }
        n.set(d, m ? "on" : v ? "off" : "indeterminate"), d = Qe(o.get(d));
      }
      return e && !i && Array.from(n.entries()).reduce((v, p) => {
        let [h, y] = p;
        return y === "on" && v.push(h), v;
      }, []).length === 0 ? u : n;
    },
    in: (a, r, i, n) => {
      let s = /* @__PURE__ */ new Map();
      for (const o of a || [])
        s = t.select({
          id: o,
          value: !0,
          selected: s,
          children: r,
          parents: i,
          disabled: n
        });
      return s;
    },
    out: (a, r) => {
      const i = [];
      for (const [n, s] of a.entries())
        s === "on" && !r.has(n) && i.push(n);
      return i;
    }
  };
  return t;
}, PI = (e) => {
  const t = Vh(e);
  return {
    select: t.select,
    in: t.in,
    out: (r, i, n) => {
      const s = [];
      for (const [o, l] of r.entries())
        if (l === "on") {
          if (n.has(o)) {
            const u = n.get(o);
            if (r.get(u) === "on") continue;
          }
          s.push(o);
        }
      return s;
    }
  };
}, pi = Symbol.for("vuetify:nested"), Ih = {
  id: me(),
  root: {
    register: () => null,
    unregister: () => null,
    children: ee(/* @__PURE__ */ new Map()),
    parents: ee(/* @__PURE__ */ new Map()),
    disabled: ee(/* @__PURE__ */ new Set()),
    open: () => null,
    openOnSelect: () => null,
    activate: () => null,
    select: () => null,
    activatable: ee(!1),
    selectable: ee(!1),
    opened: ee(/* @__PURE__ */ new Set()),
    activated: ee(/* @__PURE__ */ new Set()),
    selected: ee(/* @__PURE__ */ new Map()),
    selectedValues: ee([]),
    getPath: () => []
  }
}, CI = Z({
  activatable: Boolean,
  selectable: Boolean,
  activeStrategy: [String, Function, Object],
  selectStrategy: [String, Function, Object],
  openStrategy: [String, Object],
  opened: null,
  activated: null,
  selected: null,
  mandatory: Boolean
}, "nested"), xI = (e) => {
  let t = !1;
  const a = me(/* @__PURE__ */ new Map()), r = me(/* @__PURE__ */ new Map()), i = me(/* @__PURE__ */ new Set()), n = Ce(e, "opened", e.opened, (h) => new Set(Array.isArray(h) ? h.map((y) => Qe(y)) : h), (h) => [...h.values()]), s = C(() => {
    if (typeof e.activeStrategy == "object") return e.activeStrategy;
    if (typeof e.activeStrategy == "function") return e.activeStrategy(e.mandatory);
    switch (e.activeStrategy) {
      case "leaf":
        return bI(e.mandatory);
      case "single-leaf":
        return kI(e.mandatory);
      case "independent":
        return jc(e.mandatory);
      case "single-independent":
      default:
        return Ph(e.mandatory);
    }
  }), o = C(() => {
    if (typeof e.selectStrategy == "object") return e.selectStrategy;
    if (typeof e.selectStrategy == "function") return e.selectStrategy(e.mandatory);
    switch (e.selectStrategy) {
      case "single-leaf":
        return _I(e.mandatory);
      case "leaf":
        return SI(e.mandatory);
      case "independent":
        return Mc(e.mandatory);
      case "single-independent":
        return xh(e.mandatory);
      case "trunk":
        return PI(e.mandatory);
      case "classic":
      default:
        return Vh(e.mandatory);
    }
  }), l = C(() => {
    if (typeof e.openStrategy == "object") return e.openStrategy;
    switch (e.openStrategy) {
      case "list":
        return $I;
      case "single":
        return wI;
      case "multiple":
      default:
        return Ch;
    }
  }), u = Ce(e, "activated", e.activated, (h) => s.value.in(h, a.value, r.value), (h) => s.value.out(h, a.value, r.value)), c = Ce(e, "selected", e.selected, (h) => o.value.in(h, a.value, r.value, i.value), (h) => o.value.out(h, a.value, r.value));
  Aa(() => {
    t = !0;
  });
  function d(h) {
    const y = [];
    let f = Qe(h);
    for (; f !== void 0; )
      y.unshift(f), f = r.value.get(f);
    return y;
  }
  const m = kt("nested"), v = /* @__PURE__ */ new Set(), p = {
    id: me(),
    root: {
      opened: n,
      activatable: q(() => e.activatable),
      selectable: q(() => e.selectable),
      activated: u,
      selected: c,
      selectedValues: C(() => {
        const h = [];
        for (const [y, f] of c.value.entries())
          f === "on" && h.push(y);
        return h;
      }),
      register: (h, y, f, g) => {
        if (v.has(h)) {
          const P = d(h).map(String).join(" -> "), S = d(y).concat(h).map(String).join(" -> ");
          Jv(`Multiple nodes with the same ID
	${P}
	${S}`);
          return;
        } else
          v.add(h);
        y && h !== y && r.value.set(h, y), f && i.value.add(h), g && a.value.set(h, []), y != null && a.value.set(y, [...a.value.get(y) || [], h]);
      },
      unregister: (h) => {
        if (t) return;
        v.delete(h), a.value.delete(h), i.value.delete(h);
        const y = r.value.get(h);
        if (y) {
          const f = a.value.get(y) ?? [];
          a.value.set(y, f.filter((g) => g !== h));
        }
        r.value.delete(h);
      },
      open: (h, y, f) => {
        m.emit("click:open", {
          id: h,
          value: y,
          path: d(h),
          event: f
        });
        const g = l.value.open({
          id: h,
          value: y,
          opened: new Set(n.value),
          children: a.value,
          parents: r.value,
          event: f
        });
        g && (n.value = g);
      },
      openOnSelect: (h, y, f) => {
        const g = l.value.select({
          id: h,
          value: y,
          selected: new Map(c.value),
          opened: new Set(n.value),
          children: a.value,
          parents: r.value,
          event: f
        });
        g && (n.value = g);
      },
      select: (h, y, f) => {
        m.emit("click:select", {
          id: h,
          value: y,
          path: d(h),
          event: f
        });
        const g = o.value.select({
          id: h,
          value: y,
          selected: new Map(c.value),
          children: a.value,
          parents: r.value,
          disabled: i.value,
          event: f
        });
        g && (c.value = g), p.root.openOnSelect(h, y, f);
      },
      activate: (h, y, f) => {
        if (!e.activatable)
          return p.root.select(h, !0, f);
        m.emit("click:activate", {
          id: h,
          value: y,
          path: d(h),
          event: f
        });
        const g = s.value.activate({
          id: h,
          value: y,
          activated: new Set(u.value),
          children: a.value,
          parents: r.value,
          event: f
        });
        if (g.size !== u.value.size)
          u.value = g;
        else {
          for (const P of g)
            if (!u.value.has(P)) {
              u.value = g;
              return;
            }
          for (const P of u.value)
            if (!g.has(P)) {
              u.value = g;
              return;
            }
        }
      },
      children: a,
      parents: r,
      disabled: i,
      getPath: d
    }
  };
  return St(pi, p), p.root;
}, Oh = (e, t, a) => {
  const r = Fe(pi, Ih), i = Symbol("nested item"), n = C(() => {
    const o = Qe(Tt(e));
    return o !== void 0 ? o : i;
  }), s = {
    ...r,
    id: n,
    open: (o, l) => r.root.open(n.value, o, l),
    openOnSelect: (o, l) => r.root.openOnSelect(n.value, o, l),
    isOpen: C(() => r.root.opened.value.has(n.value)),
    parent: C(() => r.root.parents.value.get(n.value)),
    activate: (o, l) => r.root.activate(n.value, o, l),
    isActivated: C(() => r.root.activated.value.has(n.value)),
    select: (o, l) => r.root.select(n.value, o, l),
    isSelected: C(() => r.root.selected.value.get(n.value) === "on"),
    isIndeterminate: C(() => r.root.selected.value.get(n.value) === "indeterminate"),
    isLeaf: C(() => !r.root.children.value.get(n.value)),
    isGroupActivator: r.isGroupActivator
  };
  return bi(() => {
    r.isGroupActivator || r.root.register(n.value, r.id.value, Tt(t), a);
  }), Aa(() => {
    r.isGroupActivator || r.root.unregister(n.value);
  }), a && St(pi, s), s;
}, VI = () => {
  const e = Fe(pi, Ih);
  St(pi, {
    ...e,
    isGroupActivator: !0
  });
}, II = Ha({
  name: "VListGroupActivator",
  setup(e, t) {
    let {
      slots: a
    } = t;
    return VI(), () => {
      var r;
      return (r = a.default) == null ? void 0 : r.call(a);
    };
  }
}), OI = Z({
  /* @deprecated */
  activeColor: String,
  baseColor: String,
  color: String,
  collapseIcon: {
    type: xe,
    default: "$collapse"
  },
  disabled: Boolean,
  expandIcon: {
    type: xe,
    default: "$expand"
  },
  rawId: [String, Number],
  prependIcon: xe,
  appendIcon: xe,
  fluid: Boolean,
  subgroup: Boolean,
  title: String,
  value: null,
  ..._e(),
  ...Ke()
}, "VListGroup"), sm = oe()({
  name: "VListGroup",
  props: OI(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      isOpen: r,
      open: i,
      id: n
    } = Oh(() => e.value, () => e.disabled, !0), s = C(() => `v-list-group--id-${String(e.rawId ?? n.value)}`), o = _h(), {
      isBooted: l
    } = ph();
    function u(v) {
      var p;
      ["INPUT", "TEXTAREA"].includes((p = v.target) == null ? void 0 : p.tagName) || i(!r.value, v);
    }
    const c = C(() => ({
      onClick: u,
      class: "v-list-group__header",
      id: s.value
    })), d = C(() => r.value ? e.collapseIcon : e.expandIcon), m = C(() => ({
      VListItem: {
        activeColor: e.activeColor,
        baseColor: e.baseColor,
        color: e.color,
        prependIcon: e.prependIcon || e.subgroup && d.value,
        appendIcon: e.appendIcon || !e.subgroup && d.value,
        title: e.title,
        value: e.value
      }
    }));
    return ce(() => w(e.tag, {
      class: te(["v-list-group", {
        "v-list-group--prepend": o == null ? void 0 : o.hasPrepend.value,
        "v-list-group--fluid": e.fluid,
        "v-list-group--subgroup": e.subgroup,
        "v-list-group--open": r.value
      }, e.class]),
      style: ye(e.style)
    }, {
      default: () => [a.activator && w(ze, {
        defaults: m.value
      }, {
        default: () => [w(II, null, {
          default: () => [a.activator({
            props: c.value,
            isOpen: r.value
          })]
        })]
      }), w(Ca, {
        transition: {
          component: yc
        },
        disabled: !l.value
      }, {
        default: () => {
          var v;
          return [nt(T("div", {
            class: "v-list-group__items",
            role: "group",
            "aria-labelledby": s.value
          }, [(v = a.default) == null ? void 0 : v.call(a)]), [[rn, r.value]])];
        }
      })]
    })), {
      isOpen: r
    };
  }
}), EI = Z({
  opacity: [Number, String],
  ..._e(),
  ...Ke()
}, "VListItemSubtitle"), Eh = oe()({
  name: "VListItemSubtitle",
  props: EI(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return ce(() => w(e.tag, {
      class: te(["v-list-item-subtitle", e.class]),
      style: ye([{
        "--v-list-item-subtitle-opacity": e.opacity
      }, e.style])
    }, a)), {};
  }
}), jo = Mr("v-list-item-title"), AI = Z({
  active: {
    type: Boolean,
    default: void 0
  },
  activeClass: String,
  /* @deprecated */
  activeColor: String,
  appendAvatar: String,
  appendIcon: xe,
  baseColor: String,
  disabled: Boolean,
  lines: [Boolean, String],
  link: {
    type: Boolean,
    default: void 0
  },
  nav: Boolean,
  prependAvatar: String,
  prependIcon: xe,
  ripple: {
    type: [Boolean, Object],
    default: !0
  },
  slim: Boolean,
  subtitle: {
    type: [String, Number, Boolean],
    default: void 0
  },
  title: {
    type: [String, Number, Boolean],
    default: void 0
  },
  value: null,
  onClick: Lt(),
  onClickOnce: Lt(),
  ...sn(),
  ..._e(),
  ...ga(),
  ...la(),
  ...ba(),
  ...Kt(),
  ...al(),
  ...Ke(),
  ...it(),
  ...on({
    variant: "text"
  })
}, "VListItem"), vt = oe()({
  name: "VListItem",
  directives: {
    vRipple: Ft
  },
  props: AI(),
  emits: {
    click: (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      slots: r,
      emit: i
    } = t;
    const n = tl(e, a), s = C(() => e.value === void 0 ? n.href.value : e.value), {
      activate: o,
      isActivated: l,
      select: u,
      isOpen: c,
      isSelected: d,
      isIndeterminate: m,
      isGroupActivator: v,
      root: p,
      parent: h,
      openOnSelect: y,
      id: f
    } = Oh(s, () => e.disabled, !1), g = _h(), P = C(() => {
      var E;
      return e.active !== !1 && (e.active || ((E = n.isActive) == null ? void 0 : E.value) || (p.activatable.value ? l.value : d.value));
    }), S = q(() => e.link !== !1 && n.isLink.value), _ = C(() => !!g && (p.selectable.value || p.activatable.value || e.value != null)), j = C(() => !e.disabled && e.link !== !1 && (e.link || n.isClickable.value || _.value)), F = C(() => g ? _.value ? "option" : "listitem" : void 0), R = C(() => {
      if (_.value)
        return p.activatable.value ? l.value : p.selectable.value ? d.value : P.value;
    }), U = q(() => e.rounded || e.nav), W = q(() => e.color ?? e.activeColor), D = q(() => ({
      color: P.value ? W.value ?? e.baseColor : e.baseColor,
      variant: e.variant
    }));
    fe(() => {
      var E;
      return (E = n.isActive) == null ? void 0 : E.value;
    }, (E) => {
      E && O();
    }), bi(() => {
      var E;
      (E = n.isActive) != null && E.value && O();
    });
    function O() {
      h.value != null && p.open(h.value, !0), y(!0);
    }
    const {
      themeClasses: B
    } = ht(e), {
      borderClasses: N
    } = ln(e), {
      colorClasses: z,
      colorStyles: J,
      variantClasses: ae
    } = Dr(D), {
      densityClasses: X
    } = ja(e), {
      dimensionStyles: L
    } = oa(e), {
      elevationClasses: A
    } = ka(e), {
      roundedClasses: x
    } = Ht(U), V = q(() => e.lines ? `v-list-item--${e.lines}-line` : void 0), $ = q(() => e.ripple !== void 0 && e.ripple && (g != null && g.filterable) ? {
      keys: ["Enter"]
    } : e.ripple), b = C(() => ({
      isActive: P.value,
      select: u,
      isOpen: c.value,
      isSelected: d.value,
      isIndeterminate: m.value
    }));
    function I(E) {
      var M, K;
      i("click", E), !["INPUT", "TEXTAREA"].includes((M = E.target) == null ? void 0 : M.tagName) && j.value && ((K = n.navigate) == null || K.call(n, E), !v && (p.activatable.value ? o(!l.value, E) : (p.selectable.value || e.value != null && !S.value) && u(!d.value, E)));
    }
    function k(E) {
      const M = E.target;
      ["INPUT", "TEXTAREA"].includes(M.tagName) || (E.key === "Enter" || E.key === " " && !(g != null && g.filterable)) && (E.preventDefault(), E.stopPropagation(), E.target.dispatchEvent(new MouseEvent("click", E)));
    }
    return ce(() => {
      const E = S.value ? "a" : e.tag, M = r.title || e.title != null, K = r.subtitle || e.subtitle != null, Y = !!(e.appendAvatar || e.appendIcon), le = !!(Y || r.append), se = !!(e.prependAvatar || e.prependIcon), Q = !!(se || r.prepend);
      return g == null || g.updateHasPrepend(Q), e.activeColor && M_("active-color", ["color", "base-color"]), nt(w(E, ne(n.linkProps, {
        class: ["v-list-item", {
          "v-list-item--active": P.value,
          "v-list-item--disabled": e.disabled,
          "v-list-item--link": j.value,
          "v-list-item--nav": e.nav,
          "v-list-item--prepend": !Q && (g == null ? void 0 : g.hasPrepend.value),
          "v-list-item--slim": e.slim,
          [`${e.activeClass}`]: e.activeClass && P.value
        }, B.value, N.value, z.value, X.value, A.value, V.value, x.value, ae.value, e.class],
        style: [J.value, L.value, e.style],
        tabindex: j.value ? g ? -2 : 0 : void 0,
        "aria-selected": R.value,
        role: F.value,
        onClick: I,
        onKeydown: j.value && !S.value && k
      }), {
        default: () => {
          var ue;
          return [Yn(j.value || P.value, "v-list-item"), Q && T("div", {
            key: "prepend",
            class: "v-list-item__prepend"
          }, [r.prepend ? w(ze, {
            key: "prepend-defaults",
            disabled: !se,
            defaults: {
              VAvatar: {
                density: e.density,
                image: e.prependAvatar
              },
              VIcon: {
                density: e.density,
                icon: e.prependIcon
              },
              VListItemAction: {
                start: !0
              }
            }
          }, {
            default: () => {
              var G;
              return [(G = r.prepend) == null ? void 0 : G.call(r, b.value)];
            }
          }) : T(ve, null, [e.prependAvatar && w(Ea, {
            key: "prepend-avatar",
            density: e.density,
            image: e.prependAvatar
          }, null), e.prependIcon && w(Ae, {
            key: "prepend-icon",
            density: e.density,
            icon: e.prependIcon
          }, null)]), T("div", {
            class: "v-list-item__spacer"
          }, null)]), T("div", {
            class: "v-list-item__content",
            "data-no-activator": ""
          }, [M && w(jo, {
            key: "title"
          }, {
            default: () => {
              var G;
              return [((G = r.title) == null ? void 0 : G.call(r, {
                title: e.title
              })) ?? Xe(e.title)];
            }
          }), K && w(Eh, {
            key: "subtitle"
          }, {
            default: () => {
              var G;
              return [((G = r.subtitle) == null ? void 0 : G.call(r, {
                subtitle: e.subtitle
              })) ?? Xe(e.subtitle)];
            }
          }), (ue = r.default) == null ? void 0 : ue.call(r, b.value)]), le && T("div", {
            key: "append",
            class: "v-list-item__append"
          }, [r.append ? w(ze, {
            key: "append-defaults",
            disabled: !Y,
            defaults: {
              VAvatar: {
                density: e.density,
                image: e.appendAvatar
              },
              VIcon: {
                density: e.density,
                icon: e.appendIcon
              },
              VListItemAction: {
                end: !0
              }
            }
          }, {
            default: () => {
              var G;
              return [(G = r.append) == null ? void 0 : G.call(r, b.value)];
            }
          }) : T(ve, null, [e.appendIcon && w(Ae, {
            key: "append-icon",
            density: e.density,
            icon: e.appendIcon
          }, null), e.appendAvatar && w(Ea, {
            key: "append-avatar",
            density: e.density,
            image: e.appendAvatar
          }, null)]), T("div", {
            class: "v-list-item__spacer"
          }, null)])];
        }
      }), [[Ft, j.value && $.value]]);
    }), {
      activate: o,
      isActivated: l,
      isGroupActivator: v,
      isSelected: d,
      list: g,
      select: u,
      root: p,
      id: f,
      link: n
    };
  }
}), TI = Z({
  color: String,
  inset: Boolean,
  sticky: Boolean,
  title: String,
  ..._e(),
  ...Ke()
}, "VListSubheader"), Lr = oe()({
  name: "VListSubheader",
  props: TI(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      textColorClasses: r,
      textColorStyles: i
    } = Bt(() => e.color);
    return ce(() => {
      const n = !!(a.default || e.title);
      return w(e.tag, {
        class: te(["v-list-subheader", {
          "v-list-subheader--inset": e.inset,
          "v-list-subheader--sticky": e.sticky
        }, r.value, e.class]),
        style: ye([{
          textColorStyles: i
        }, e.style])
      }, {
        default: () => {
          var s;
          return [n && T("div", {
            class: "v-list-subheader__text"
          }, [((s = a.default) == null ? void 0 : s.call(a)) ?? e.title])];
        }
      });
    }), {};
  }
}), jI = Z({
  items: Array,
  returnObject: Boolean
}, "VListChildren"), Ah = oe()({
  name: "VListChildren",
  props: jI(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return Sh(), () => {
      var r, i;
      return ((r = a.default) == null ? void 0 : r.call(a)) ?? ((i = e.items) == null ? void 0 : i.map((n) => {
        var m, v;
        let {
          children: s,
          props: o,
          type: l,
          raw: u
        } = n;
        if (l === "divider")
          return ((m = a.divider) == null ? void 0 : m.call(a, {
            props: o
          })) ?? w(xa, o, null);
        if (l === "subheader")
          return ((v = a.subheader) == null ? void 0 : v.call(a, {
            props: o
          })) ?? w(Lr, o, null);
        const c = {
          subtitle: a.subtitle ? (p) => {
            var h;
            return (h = a.subtitle) == null ? void 0 : h.call(a, {
              ...p,
              item: u
            });
          } : void 0,
          prepend: a.prepend ? (p) => {
            var h;
            return (h = a.prepend) == null ? void 0 : h.call(a, {
              ...p,
              item: u
            });
          } : void 0,
          append: a.append ? (p) => {
            var h;
            return (h = a.append) == null ? void 0 : h.call(a, {
              ...p,
              item: u
            });
          } : void 0,
          title: a.title ? (p) => {
            var h;
            return (h = a.title) == null ? void 0 : h.call(a, {
              ...p,
              item: u
            });
          } : void 0
        }, d = sm.filterProps(o);
        return s ? w(sm, ne(d, {
          value: e.returnObject ? u : o == null ? void 0 : o.value,
          rawId: o == null ? void 0 : o.value
        }), {
          activator: (p) => {
            let {
              props: h
            } = p;
            const y = ne(o, h, {
              value: e.returnObject ? u : o.value
            });
            return a.header ? a.header({
              props: y
            }) : w(vt, y, c);
          },
          default: () => w(Ah, {
            items: s,
            returnObject: e.returnObject
          }, a)
        }) : a.item ? a.item({
          props: o
        }) : w(vt, ne(o, {
          value: e.returnObject ? u : o.value
        }), c);
      }));
    };
  }
}), Th = Z({
  items: {
    type: Array,
    default: () => []
  },
  itemTitle: {
    type: [String, Array, Function],
    default: "title"
  },
  itemValue: {
    type: [String, Array, Function],
    default: "value"
  },
  itemChildren: {
    type: [Boolean, String, Array, Function],
    default: "children"
  },
  itemProps: {
    type: [Boolean, String, Array, Function],
    default: "props"
  },
  itemType: {
    type: [Boolean, String, Array, Function],
    default: "type"
  },
  returnObject: Boolean,
  valueComparator: Function
}, "list-items"), MI = /* @__PURE__ */ new Set(["item", "divider", "subheader"]);
function Pa(e, t) {
  const a = Zt(t, e.itemTitle, t), r = Zt(t, e.itemValue, a), i = Zt(t, e.itemChildren), n = e.itemProps === !0 ? typeof t == "object" && t != null && !Array.isArray(t) ? "children" in t ? ut(t, ["children"]) : t : void 0 : Zt(t, e.itemProps);
  let s = Zt(t, e.itemType, "item");
  MI.has(s) || (s = "item");
  const o = {
    title: a,
    value: r,
    ...n
  };
  return {
    type: s,
    title: String(o.title ?? ""),
    value: o.value,
    props: o,
    children: s === "item" && Array.isArray(i) ? jh(e, i) : void 0,
    raw: t
  };
}
Pa.neededProps = ["itemTitle", "itemValue", "itemChildren", "itemProps", "itemType"];
function jh(e, t) {
  const a = yn(e, Pa.neededProps), r = [];
  for (const i of t)
    r.push(Pa(a, i));
  return r;
}
function Dc(e) {
  const t = C(() => jh(e, e.items)), a = C(() => t.value.some((o) => o.value === null)), r = me(/* @__PURE__ */ new Map()), i = me([]);
  At(() => {
    const o = t.value, l = /* @__PURE__ */ new Map(), u = [];
    for (let c = 0; c < o.length; c++) {
      const d = o[c];
      if (fo(d.value) || d.value === null) {
        let m = l.get(d.value);
        m || (m = [], l.set(d.value, m)), m.push(d);
      } else
        u.push(d);
    }
    r.value = l, i.value = u;
  });
  function n(o) {
    const l = r.value, u = t.value, c = i.value, d = a.value, m = e.returnObject, v = !!e.valueComparator, p = e.valueComparator || Et, h = yn(e, Pa.neededProps), y = [];
    e: for (const f of o) {
      if (!d && f === null) continue;
      if (m && typeof f == "string") {
        y.push(Pa(h, f));
        continue;
      }
      const g = l.get(f);
      if (v || !g) {
        for (const P of v ? u : c)
          if (p(f, P.value)) {
            y.push(P);
            continue e;
          }
        y.push(Pa(h, f));
        continue;
      }
      y.push(...g);
    }
    return y;
  }
  function s(o) {
    return e.returnObject ? o.map((l) => {
      let {
        raw: u
      } = l;
      return u;
    }) : o.map((l) => {
      let {
        value: u
      } = l;
      return u;
    });
  }
  return {
    items: t,
    transformIn: n,
    transformOut: s
  };
}
const DI = /* @__PURE__ */ new Set(["item", "divider", "subheader"]);
function RI(e, t) {
  const a = fo(t) ? t : Zt(t, e.itemTitle), r = fo(t) ? t : Zt(t, e.itemValue, void 0), i = Zt(t, e.itemChildren), n = e.itemProps === !0 ? ut(t, ["children"]) : Zt(t, e.itemProps);
  let s = Zt(t, e.itemType, "item");
  DI.has(s) || (s = "item");
  const o = {
    title: a,
    value: r,
    ...n
  };
  return {
    type: s,
    title: o.title,
    value: o.value,
    props: o,
    children: s === "item" && i ? Mh(e, i) : void 0,
    raw: t
  };
}
function Mh(e, t) {
  const a = [];
  for (const r of t)
    a.push(RI(e, r));
  return a;
}
function NI(e) {
  return {
    items: C(() => Mh(e, e.items))
  };
}
const zI = Z({
  baseColor: String,
  /* @deprecated */
  activeColor: String,
  activeClass: String,
  bgColor: String,
  disabled: Boolean,
  filterable: Boolean,
  expandIcon: xe,
  collapseIcon: xe,
  lines: {
    type: [Boolean, String],
    default: "one"
  },
  slim: Boolean,
  nav: Boolean,
  "onClick:open": Lt(),
  "onClick:select": Lt(),
  "onUpdate:opened": Lt(),
  ...CI({
    selectStrategy: "single-leaf",
    openStrategy: "list"
  }),
  ...sn(),
  ..._e(),
  ...ga(),
  ...la(),
  ...ba(),
  ...Th(),
  ...Kt(),
  ...Ke(),
  ...it(),
  ...on({
    variant: "text"
  })
}, "VList"), hi = oe()({
  name: "VList",
  props: zI(),
  emits: {
    "update:selected": (e) => !0,
    "update:activated": (e) => !0,
    "update:opened": (e) => !0,
    "click:open": (e) => !0,
    "click:activate": (e) => !0,
    "click:select": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      items: r
    } = NI(e), {
      themeClasses: i
    } = ht(e), {
      backgroundColorClasses: n,
      backgroundColorStyles: s
    } = pt(() => e.bgColor), {
      borderClasses: o
    } = ln(e), {
      densityClasses: l
    } = ja(e), {
      dimensionStyles: u
    } = oa(e), {
      elevationClasses: c
    } = ka(e), {
      roundedClasses: d
    } = Ht(e), {
      children: m,
      open: v,
      parents: p,
      select: h,
      getPath: y
    } = xI(e), f = q(() => e.lines ? `v-list--${e.lines}-line` : void 0), g = q(() => e.activeColor), P = q(() => e.baseColor), S = q(() => e.color), _ = q(() => e.selectable || e.activatable);
    Sh({
      filterable: e.filterable
    }), Ta({
      VListGroup: {
        activeColor: g,
        baseColor: P,
        color: S,
        expandIcon: q(() => e.expandIcon),
        collapseIcon: q(() => e.collapseIcon)
      },
      VListItem: {
        activeClass: q(() => e.activeClass),
        activeColor: g,
        baseColor: P,
        color: S,
        density: q(() => e.density),
        disabled: q(() => e.disabled),
        lines: q(() => e.lines),
        nav: q(() => e.nav),
        slim: q(() => e.slim),
        variant: q(() => e.variant)
      }
    });
    const j = me(!1), F = ee();
    function R(N) {
      j.value = !0;
    }
    function U(N) {
      j.value = !1;
    }
    function W(N) {
      var z;
      !j.value && !(N.relatedTarget && ((z = F.value) != null && z.contains(N.relatedTarget))) && B();
    }
    function D(N) {
      const z = N.target;
      if (!(!F.value || z.tagName === "INPUT" && ["Home", "End"].includes(N.key) || z.tagName === "TEXTAREA")) {
        if (N.key === "ArrowDown")
          B("next");
        else if (N.key === "ArrowUp")
          B("prev");
        else if (N.key === "Home")
          B("first");
        else if (N.key === "End")
          B("last");
        else
          return;
        N.preventDefault();
      }
    }
    function O(N) {
      j.value = !0;
    }
    function B(N) {
      if (F.value)
        return ii(F.value, N);
    }
    return ce(() => w(e.tag, {
      ref: F,
      class: te(["v-list", {
        "v-list--disabled": e.disabled,
        "v-list--nav": e.nav,
        "v-list--slim": e.slim
      }, i.value, n.value, o.value, l.value, c.value, f.value, d.value, e.class]),
      style: ye([s.value, u.value, e.style]),
      tabindex: e.disabled ? -1 : 0,
      role: _.value ? "listbox" : "list",
      "aria-activedescendant": void 0,
      onFocusin: R,
      onFocusout: U,
      onFocus: W,
      onKeydown: D,
      onMousedown: O
    }, {
      default: () => [w(Ah, {
        items: r.value,
        returnObject: e.returnObject
      }, a)]
    })), {
      open: v,
      select: h,
      focus: B,
      children: m,
      parents: p,
      getPath: y
    };
  }
}), LI = Z({
  start: Boolean,
  end: Boolean,
  ..._e(),
  ...Ke()
}, "VListItemAction"), Xi = oe()({
  name: "VListItemAction",
  props: LI(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return ce(() => w(e.tag, {
      class: te(["v-list-item-action", {
        "v-list-item-action--start": e.start,
        "v-list-item-action--end": e.end
      }, e.class]),
      style: ye(e.style)
    }, a)), {};
  }
}), BI = Z({
  renderless: Boolean,
  ..._e()
}, "VVirtualScrollItem"), FI = oe()({
  name: "VVirtualScrollItem",
  inheritAttrs: !1,
  props: BI(),
  emits: {
    "update:height": (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      emit: r,
      slots: i
    } = t;
    const {
      resizeRef: n,
      contentRect: s
    } = Bn(void 0, "border");
    fe(() => {
      var o;
      return (o = s.value) == null ? void 0 : o.height;
    }, (o) => {
      o != null && r("update:height", o);
    }), ce(() => {
      var o, l;
      return e.renderless ? T(ve, null, [(o = i.default) == null ? void 0 : o.call(i, {
        itemRef: n
      })]) : T("div", ne({
        ref: n,
        class: ["v-virtual-scroll__item", e.class],
        style: e.style
      }, a), [(l = i.default) == null ? void 0 : l.call(i)]);
    });
  }
}), qI = -1, KI = 1, Nl = 100, HI = Z({
  itemHeight: {
    type: [Number, String],
    default: null
  },
  itemKey: {
    type: [String, Array, Function],
    default: null
  },
  height: [Number, String]
}, "virtual");
function UI(e, t) {
  const a = Xs(), r = me(0);
  At(() => {
    r.value = parseFloat(e.itemHeight || 0);
  });
  const i = me(0), n = me(Math.ceil(
    // Assume 16px items filling the entire screen height if
    // not provided. This is probably incorrect but it minimises
    // the chance of ending up with empty space at the bottom.
    // The default value is set here to avoid poisoning getSize()
    (parseInt(e.height) || a.height.value) / (r.value || 16)
  ) || 1), s = me(0), o = me(0), l = ee(), u = ee();
  let c = 0;
  const {
    resizeRef: d,
    contentRect: m
  } = Bn();
  At(() => {
    d.value = l.value;
  });
  const v = C(() => {
    var A;
    return l.value === document.documentElement ? a.height.value : ((A = m.value) == null ? void 0 : A.height) || parseInt(e.height) || 0;
  }), p = C(() => !!(l.value && u.value && v.value && r.value));
  let h = Array.from({
    length: t.value.length
  }), y = Array.from({
    length: t.value.length
  });
  const f = me(0);
  let g = -1;
  function P(A) {
    return h[A] || r.value;
  }
  const S = Hv(() => {
    const A = performance.now();
    y[0] = 0;
    const x = t.value.length;
    for (let V = 1; V <= x - 1; V++)
      y[V] = (y[V - 1] || 0) + P(V - 1);
    f.value = Math.max(f.value, performance.now() - A);
  }, f), _ = fe(p, (A) => {
    A && (_(), c = u.value.offsetTop, S.immediate(), J(), ~g && qe(() => {
      rt && window.requestAnimationFrame(() => {
        X(g), g = -1;
      });
    }));
  });
  It(() => {
    S.clear();
  });
  function j(A, x) {
    const V = h[A], $ = r.value;
    r.value = $ ? Math.min(r.value, x) : x, (V !== x || $ !== r.value) && (h[A] = x, S());
  }
  function F(A) {
    A = lt(A, 0, t.value.length - 1);
    const x = Math.floor(A), V = A % 1, $ = x + 1, b = y[x] || 0, I = y[$] || b;
    return b + (I - b) * V;
  }
  function R(A) {
    return WI(y, A);
  }
  let U = 0, W = 0, D = 0;
  fe(v, (A, x) => {
    x && (J(), A < x && requestAnimationFrame(() => {
      W = 0, J();
    }));
  });
  let O = -1;
  function B() {
    if (!l.value || !u.value) return;
    const A = l.value.scrollTop, x = performance.now();
    x - D > 500 ? (W = Math.sign(A - U), c = u.value.offsetTop) : W = A - U, U = A, D = x, window.clearTimeout(O), O = window.setTimeout(N, 500), J();
  }
  function N() {
    !l.value || !u.value || (W = 0, D = 0, window.clearTimeout(O), J());
  }
  let z = -1;
  function J() {
    cancelAnimationFrame(z), z = requestAnimationFrame(ae);
  }
  function ae() {
    if (!l.value || !v.value || !r.value) return;
    const A = U - c, x = Math.sign(W), V = Math.max(0, A - Nl), $ = lt(R(V), 0, t.value.length), b = A + v.value + Nl, I = lt(R(b) + 1, $ + 1, t.value.length);
    if (
      // Only update the side we're scrolling towards,
      // the other side will be updated incidentally
      (x !== qI || $ < i.value) && (x !== KI || I > n.value)
    ) {
      const k = F(i.value) - F($), E = F(I) - F(n.value);
      Math.max(k, E) > Nl ? (i.value = $, n.value = I) : ($ <= 0 && (i.value = $), I >= t.value.length && (n.value = I));
    }
    s.value = F(i.value), o.value = F(t.value.length) - F(n.value);
  }
  function X(A) {
    const x = F(A);
    !l.value || A && !x ? g = A : l.value.scrollTop = x;
  }
  const L = C(() => t.value.slice(i.value, n.value).map((A, x) => {
    const V = x + i.value;
    return {
      raw: A,
      index: V,
      key: Zt(A, e.itemKey, V)
    };
  }));
  return fe(t, () => {
    h = Array.from({
      length: t.value.length
    }), y = Array.from({
      length: t.value.length
    }), S.immediate(), J();
  }, {
    deep: 1
  }), {
    calculateVisibleItems: J,
    containerRef: l,
    markerRef: u,
    computedItems: L,
    paddingTop: s,
    paddingBottom: o,
    scrollToIndex: X,
    handleScroll: B,
    handleScrollend: N,
    handleItemResize: j
  };
}
function WI(e, t) {
  let a = e.length - 1, r = 0, i = 0, n = null, s = -1;
  if (e[a] < t)
    return a;
  for (; r <= a; )
    if (i = r + a >> 1, n = e[i], n > t)
      a = i - 1;
    else if (n < t)
      s = i, r = i + 1;
    else return n === t ? i : r;
  return s;
}
const GI = Z({
  items: {
    type: Array,
    default: () => []
  },
  renderless: Boolean,
  ...HI(),
  ..._e(),
  ...la()
}, "VVirtualScroll"), Rc = oe()({
  name: "VVirtualScroll",
  props: GI(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = kt("VVirtualScroll"), {
      dimensionStyles: i
    } = oa(e), {
      calculateVisibleItems: n,
      containerRef: s,
      markerRef: o,
      handleScroll: l,
      handleScrollend: u,
      handleItemResize: c,
      scrollToIndex: d,
      paddingTop: m,
      paddingBottom: v,
      computedItems: p
    } = UI(e, q(() => e.items));
    return pn(() => e.renderless, () => {
      function h() {
        var g, P;
        const f = (arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1) ? "addEventListener" : "removeEventListener";
        s.value === document.documentElement ? (document[f]("scroll", l, {
          passive: !0
        }), document[f]("scrollend", u)) : ((g = s.value) == null || g[f]("scroll", l, {
          passive: !0
        }), (P = s.value) == null || P[f]("scrollend", u));
      }
      ha(() => {
        s.value = ip(r.vnode.el, !0), h(!0);
      }), It(h);
    }), ce(() => {
      const h = p.value.map((y) => w(FI, {
        key: y.key,
        renderless: e.renderless,
        "onUpdate:height": (f) => c(y.index, f)
      }, {
        default: (f) => {
          var g;
          return (g = a.default) == null ? void 0 : g.call(a, {
            item: y.raw,
            index: y.index,
            ...f
          });
        }
      }));
      return e.renderless ? T(ve, null, [T("div", {
        ref: o,
        class: "v-virtual-scroll__spacer",
        style: {
          paddingTop: ge(m.value)
        }
      }, null), h, T("div", {
        class: "v-virtual-scroll__spacer",
        style: {
          paddingBottom: ge(v.value)
        }
      }, null)]) : T("div", {
        ref: s,
        class: te(["v-virtual-scroll", e.class]),
        onScrollPassive: l,
        onScrollend: u,
        style: ye([i.value, e.style])
      }, [T("div", {
        ref: o,
        class: "v-virtual-scroll__container",
        style: {
          paddingTop: ge(m.value),
          paddingBottom: ge(v.value)
        }
      }, [h])]);
    }), {
      calculateVisibleItems: n,
      scrollToIndex: d
    };
  }
});
function Nc(e, t) {
  const a = me(!1);
  let r;
  function i(o) {
    cancelAnimationFrame(r), a.value = !0, r = requestAnimationFrame(() => {
      r = requestAnimationFrame(() => {
        a.value = !1;
      });
    });
  }
  async function n() {
    await new Promise((o) => requestAnimationFrame(o)), await new Promise((o) => requestAnimationFrame(o)), await new Promise((o) => requestAnimationFrame(o)), await new Promise((o) => {
      if (a.value) {
        const l = fe(a, () => {
          l(), o();
        });
      } else o();
    });
  }
  async function s(o) {
    var c, d;
    if (o.key === "Tab" && ((c = t.value) == null || c.focus()), !["PageDown", "PageUp", "Home", "End"].includes(o.key)) return;
    const l = (d = e.value) == null ? void 0 : d.$el;
    if (!l) return;
    (o.key === "Home" || o.key === "End") && l.scrollTo({
      top: o.key === "Home" ? 0 : l.scrollHeight,
      behavior: "smooth"
    }), await n();
    const u = l.querySelectorAll(":scope > :not(.v-virtual-scroll__spacer)");
    if (o.key === "PageDown" || o.key === "Home") {
      const m = l.getBoundingClientRect().top;
      for (const v of u)
        if (v.getBoundingClientRect().top >= m) {
          v.focus();
          break;
        }
    } else {
      const m = l.getBoundingClientRect().bottom;
      for (const v of [...u].reverse())
        if (v.getBoundingClientRect().bottom <= m) {
          v.focus();
          break;
        }
    }
  }
  return {
    onScrollPassive: i,
    onKeydown: s
  };
}
const YI = Z({
  closeText: {
    type: String,
    default: "$vuetify.close"
  },
  openText: {
    type: String,
    default: "$vuetify.open"
  }
}, "autocomplete");
function zc(e, t) {
  const {
    t: a
  } = dt(), r = pa(), i = C(() => `menu-${r}`), n = q(() => Tt(t)), s = q(() => i.value), o = q(() => a(Tt(t) ? e.closeText : e.openText));
  return {
    menuId: i,
    ariaExpanded: n,
    ariaControls: s,
    ariaLabel: o
  };
}
const Lc = Z({
  chips: Boolean,
  closableChips: Boolean,
  eager: Boolean,
  hideNoData: Boolean,
  hideSelected: Boolean,
  listProps: {
    type: Object
  },
  menu: Boolean,
  menuIcon: {
    type: xe,
    default: "$dropdown"
  },
  menuProps: {
    type: Object
  },
  multiple: Boolean,
  noDataText: {
    type: String,
    default: "$vuetify.noDataText"
  },
  openOnClear: Boolean,
  itemColor: String,
  noAutoScroll: Boolean,
  ...YI(),
  ...Th({
    itemChildren: !1
  })
}, "Select"), XI = Z({
  ...Lc(),
  ...ut(Ai({
    modelValue: null,
    role: "combobox"
  }), ["validationValue", "dirty", "appendInnerIcon"]),
  ...Xn({
    transition: {
      component: hc
    }
  })
}, "VSelect"), Bc = oe()({
  name: "VSelect",
  props: XI(),
  emits: {
    "update:focused": (e) => !0,
    "update:modelValue": (e) => !0,
    "update:menu": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      t: r
    } = dt(), i = ee(), n = ee(), s = ee(), {
      items: o,
      transformIn: l,
      transformOut: u
    } = Dc(e), c = Ce(e, "modelValue", [], ($) => l($ === null ? [null] : ot($)), ($) => {
      const b = u($);
      return e.multiple ? b : b[0] ?? null;
    }), d = C(() => typeof e.counterValue == "function" ? e.counterValue(c.value) : typeof e.counterValue == "number" ? e.counterValue : c.value.length), m = zr(e), v = C(() => c.value.map(($) => $.value)), p = me(!1);
    let h = "", y = -1, f;
    const g = C(() => e.hideSelected ? o.value.filter(($) => !c.value.some((b) => (e.valueComparator || Et)(b, $))) : o.value), P = C(() => e.hideNoData && !g.value.length || m.isReadonly.value || m.isDisabled.value), S = Ce(e, "menu"), _ = C({
      get: () => S.value,
      set: ($) => {
        var b;
        S.value && !$ && ((b = n.value) != null && b.ΨopenChildren.size) || $ && P.value || (S.value = $);
      }
    }), {
      menuId: j,
      ariaExpanded: F,
      ariaControls: R,
      ariaLabel: U
    } = zc(e, _), W = C(() => {
      var $;
      return {
        ...e.menuProps,
        activatorProps: {
          ...(($ = e.menuProps) == null ? void 0 : $.activatorProps) || {},
          "aria-haspopup": "listbox"
          // Set aria-haspopup to 'listbox'
        }
      };
    }), D = ee(), O = Nc(D, i);
    function B($) {
      e.openOnClear && (_.value = !0);
    }
    function N() {
      P.value || (_.value = !_.value);
    }
    function z($) {
      kr($) && J($);
    }
    function J($) {
      var se, Q, ue;
      if (!$.key || m.isReadonly.value) return;
      ["Enter", " ", "ArrowDown", "ArrowUp", "Home", "End"].includes($.key) && $.preventDefault(), ["Enter", "ArrowDown", " "].includes($.key) && (_.value = !0), ["Escape", "Tab"].includes($.key) && (_.value = !1), $.key === "Home" ? (se = D.value) == null || se.focus("first") : $.key === "End" && ((Q = D.value) == null || Q.focus("last"));
      const b = 1e3;
      if (!kr($)) return;
      const I = performance.now();
      I - f > b && (h = "", y = -1), h += $.key.toLowerCase(), f = I;
      const k = g.value;
      function E() {
        let G = M();
        return G || h.at(-1) === h.at(-2) && (h = h.slice(0, -1), G = M(), G) || (y = -1, G = M(), G) ? G : (h = $.key.toLowerCase(), M());
      }
      function M() {
        for (let G = y + 1; G < k.length; G++) {
          const de = k[G];
          if (de.title.toLowerCase().startsWith(h))
            return [de, G];
        }
      }
      const K = E();
      if (!K) return;
      const [Y, le] = K;
      y = le, (ue = D.value) == null || ue.focus(le), e.multiple || (c.value = [Y]);
    }
    function ae($) {
      let b = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
      if (!$.props.disabled)
        if (e.multiple) {
          const I = c.value.findIndex((E) => (e.valueComparator || Et)(E.value, $.value)), k = b ?? !~I;
          if (~I) {
            const E = k ? [...c.value, $] : [...c.value];
            E.splice(I, 1), c.value = E;
          } else k && (c.value = [...c.value, $]);
        } else {
          const I = b !== !1;
          c.value = I ? [$] : [], qe(() => {
            _.value = !1;
          });
        }
    }
    function X($) {
      var b;
      (b = D.value) != null && b.$el.contains($.relatedTarget) || (_.value = !1);
    }
    function L() {
      var $;
      e.eager && (($ = s.value) == null || $.calculateVisibleItems());
    }
    function A() {
      var $;
      p.value && (($ = i.value) == null || $.focus());
    }
    function x($) {
      p.value = !0;
    }
    function V($) {
      if ($ == null) c.value = [];
      else if (br(i.value, ":autofill") || br(i.value, ":-webkit-autofill")) {
        const b = o.value.find((I) => I.title === $);
        b && ae(b);
      } else i.value && (i.value.value = "");
    }
    return fe(_, () => {
      if (!e.hideSelected && _.value && c.value.length) {
        const $ = g.value.findIndex((b) => c.value.some((I) => (e.valueComparator || Et)(I.value, b.value)));
        rt && !e.noAutoScroll && window.requestAnimationFrame(() => {
          var b;
          $ >= 0 && ((b = s.value) == null || b.scrollToIndex($));
        });
      }
    }), fe(o, ($, b) => {
      _.value || p.value && e.hideNoData && !b.length && $.length && (_.value = !0);
    }), ce(() => {
      const $ = !!(e.chips || a.chip), b = !!(!e.hideNoData || g.value.length || a["prepend-item"] || a["append-item"] || a["no-data"]), I = c.value.length > 0, k = Oa.filterProps(e), E = I || !p.value && e.label && !e.persistentPlaceholder ? void 0 : e.placeholder;
      return w(Oa, ne({
        ref: i
      }, k, {
        modelValue: c.value.map((M) => M.props.value).join(", "),
        "onUpdate:modelValue": V,
        focused: p.value,
        "onUpdate:focused": (M) => p.value = M,
        validationValue: c.externalValue,
        counterValue: d.value,
        dirty: I,
        class: ["v-select", {
          "v-select--active-menu": _.value,
          "v-select--chips": !!e.chips,
          [`v-select--${e.multiple ? "multiple" : "single"}`]: !0,
          "v-select--selected": c.value.length,
          "v-select--selection-slot": !!a.selection
        }, e.class],
        style: e.style,
        inputmode: "none",
        placeholder: E,
        "onClick:clear": B,
        "onMousedown:control": N,
        onBlur: X,
        onKeydown: J,
        "aria-expanded": F.value,
        "aria-controls": R.value,
        "aria-label": U.value,
        title: U.value
      }), {
        ...a,
        default: () => T(ve, null, [w(Fn, ne({
          id: j.value,
          ref: n,
          modelValue: _.value,
          "onUpdate:modelValue": (M) => _.value = M,
          activator: "parent",
          contentClass: "v-select__content",
          disabled: P.value,
          eager: e.eager,
          maxHeight: 310,
          openOnClick: !1,
          closeOnContentClick: !1,
          transition: e.transition,
          onAfterEnter: L,
          onAfterLeave: A
        }, W.value), {
          default: () => [b && w(hi, ne({
            ref: D,
            selected: v.value,
            selectStrategy: e.multiple ? "independent" : "single-independent",
            onMousedown: (M) => M.preventDefault(),
            onKeydown: z,
            onFocusin: x,
            tabindex: "-1",
            selectable: !0,
            "aria-live": "polite",
            "aria-label": `${e.label}-list`,
            color: e.itemColor ?? e.color
          }, O, e.listProps), {
            default: () => {
              var M, K, Y;
              return [(M = a["prepend-item"]) == null ? void 0 : M.call(a), !g.value.length && !e.hideNoData && (((K = a["no-data"]) == null ? void 0 : K.call(a)) ?? w(vt, {
                key: "no-data",
                title: r(e.noDataText)
              }, null)), w(Rc, {
                ref: s,
                renderless: !0,
                items: g.value,
                itemKey: "value"
              }, {
                default: (le) => {
                  var $e, ke, Ve;
                  let {
                    item: se,
                    index: Q,
                    itemRef: ue
                  } = le;
                  const G = k_(se.props), de = ne(se.props, {
                    ref: ue,
                    key: se.value,
                    onClick: () => ae(se, null)
                  });
                  return se.type === "divider" ? (($e = a.divider) == null ? void 0 : $e.call(a, {
                    props: se.raw,
                    index: Q
                  })) ?? w(xa, ne(se.props, {
                    key: `divider-${Q}`
                  }), null) : se.type === "subheader" ? ((ke = a.subheader) == null ? void 0 : ke.call(a, {
                    props: se.raw,
                    index: Q
                  })) ?? w(Lr, ne(se.props, {
                    key: `subheader-${Q}`
                  }), null) : ((Ve = a.item) == null ? void 0 : Ve.call(a, {
                    item: se,
                    index: Q,
                    props: de
                  })) ?? w(vt, ne(de, {
                    role: "option"
                  }), {
                    prepend: (Se) => {
                      let {
                        isSelected: je
                      } = Se;
                      return T(ve, null, [e.multiple && !e.hideSelected ? w(Sr, {
                        key: se.value,
                        modelValue: je,
                        ripple: !1,
                        tabindex: "-1"
                      }, null) : void 0, G.prependAvatar && w(Ea, {
                        image: G.prependAvatar
                      }, null), G.prependIcon && w(Ae, {
                        icon: G.prependIcon
                      }, null)]);
                    }
                  });
                }
              }), (Y = a["append-item"]) == null ? void 0 : Y.call(a)];
            }
          })]
        }), c.value.map((M, K) => {
          function Y(ue) {
            ue.stopPropagation(), ue.preventDefault(), ae(M, !1);
          }
          const le = {
            "onClick:close": Y,
            onKeydown(ue) {
              ue.key !== "Enter" && ue.key !== " " || (ue.preventDefault(), ue.stopPropagation(), Y(ue));
            },
            onMousedown(ue) {
              ue.preventDefault(), ue.stopPropagation();
            },
            modelValue: !0,
            "onUpdate:modelValue": void 0
          }, se = $ ? !!a.chip : !!a.selection, Q = se ? Gs($ ? a.chip({
            item: M,
            index: K,
            props: le
          }) : a.selection({
            item: M,
            index: K
          })) : void 0;
          if (!(se && !Q))
            return T("div", {
              key: M.value,
              class: "v-select__selection"
            }, [$ ? a.chip ? w(ze, {
              key: "chip-defaults",
              defaults: {
                VChip: {
                  closable: e.closableChips,
                  size: "small",
                  text: M.title
                }
              }
            }, {
              default: () => [Q]
            }) : w(ul, ne({
              key: "chip",
              closable: e.closableChips,
              size: "small",
              text: M.title,
              disabled: M.props.disabled
            }, le), null) : Q ?? T("span", {
              class: "v-select__selection-text"
            }, [M.title, e.multiple && K < c.value.length - 1 && T("span", {
              class: "v-select__selection-comma"
            }, [He(",")])])]);
        })]),
        "append-inner": function() {
          var le, se;
          for (var M = arguments.length, K = new Array(M), Y = 0; Y < M; Y++)
            K[Y] = arguments[Y];
          return T(ve, null, [(le = a["append-inner"]) == null ? void 0 : le.call(a, ...K), e.menuIcon ? w(Ae, {
            class: "v-select__menu-icon",
            color: (se = i.value) == null ? void 0 : se.fieldIconColor,
            icon: e.menuIcon
          }, null) : void 0]);
        }
      });
    }), Ut({
      isFocused: p,
      menu: _,
      select: ae
    }, i);
  }
});
function Ti(e, t) {
  const a = me([]), r = ee(!1), i = ee(""), n = C(() => !!(e.value.layout.items || e.value.layout.getItems)), s = async () => {
    r.value = !0;
    try {
      a.value = await t.getItems(e.value, i.value);
    } finally {
      r.value = !1;
    }
  };
  return fe(() => e.value.itemsCacheKey, (l, u) => {
    l !== u && s();
  }, { immediate: !0 }), fe(i, () => {
    s();
  }), { hasItems: n, items: a, loading: r, search: i, prepareSelectedItem: (l, u) => {
    let c = l;
    if (l === u)
      try {
        c = t.prepareSelectItem(e.value, l), c.value === void 0 && (c.value = u);
      } catch {
        c = { value: u };
      }
    return c;
  } };
}
const ZI = Z({
  text: String,
  ..._e(),
  ...Ke()
}, "VToolbarTitle"), JI = oe()({
  name: "VToolbarTitle",
  props: ZI(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return ce(() => {
      const r = !!(a.default || a.text || e.text);
      return w(e.tag, {
        class: te(["v-toolbar-title", e.class]),
        style: ye(e.style)
      }, {
        default: () => {
          var i;
          return [r && T("div", {
            class: "v-toolbar-title__placeholder"
          }, [a.text ? a.text() : e.text, (i = a.default) == null ? void 0 : i.call(a)])];
        }
      });
    }), {};
  }
}), QI = [null, "prominent", "default", "comfortable", "compact"], eO = Z({
  absolute: Boolean,
  collapse: Boolean,
  color: String,
  density: {
    type: String,
    default: "default",
    validator: (e) => QI.includes(e)
  },
  extended: {
    type: Boolean,
    default: null
  },
  extensionHeight: {
    type: [Number, String],
    default: 48
  },
  flat: Boolean,
  floating: Boolean,
  height: {
    type: [Number, String],
    default: 64
  },
  image: String,
  title: String,
  ...sn(),
  ..._e(),
  ...ba(),
  ...Kt(),
  ...Ke({
    tag: "header"
  }),
  ...it()
}, "VToolbar"), tO = oe()({
  name: "VToolbar",
  props: eO(),
  setup(e, t) {
    var v;
    let {
      slots: a
    } = t;
    const {
      backgroundColorClasses: r,
      backgroundColorStyles: i
    } = pt(() => e.color), {
      borderClasses: n
    } = ln(e), {
      elevationClasses: s
    } = ka(e), {
      roundedClasses: o
    } = Ht(e), {
      themeClasses: l
    } = ht(e), {
      rtlClasses: u
    } = jt(), c = me(e.extended === null ? !!((v = a.extension) != null && v.call(a)) : e.extended), d = C(() => parseInt(Number(e.height) + (e.density === "prominent" ? Number(e.height) : 0) - (e.density === "comfortable" ? 8 : 0) - (e.density === "compact" ? 16 : 0), 10)), m = C(() => c.value ? parseInt(Number(e.extensionHeight) + (e.density === "prominent" ? Number(e.extensionHeight) : 0) - (e.density === "comfortable" ? 4 : 0) - (e.density === "compact" ? 8 : 0), 10) : 0);
    return Ta({
      VBtn: {
        variant: "text"
      }
    }), ce(() => {
      var f;
      const p = !!(e.title || a.title), h = !!(a.image || e.image), y = (f = a.extension) == null ? void 0 : f.call(a);
      return c.value = e.extended === null ? !!y : e.extended, w(e.tag, {
        class: te(["v-toolbar", {
          "v-toolbar--absolute": e.absolute,
          "v-toolbar--collapse": e.collapse,
          "v-toolbar--flat": e.flat,
          "v-toolbar--floating": e.floating,
          [`v-toolbar--density-${e.density}`]: !0
        }, r.value, n.value, s.value, o.value, l.value, u.value, e.class]),
        style: ye([i.value, e.style])
      }, {
        default: () => [h && T("div", {
          key: "image",
          class: "v-toolbar__image"
        }, [a.image ? w(ze, {
          key: "image-defaults",
          disabled: !e.image,
          defaults: {
            VImg: {
              cover: !0,
              src: e.image
            }
          }
        }, a.image) : w(ol, {
          key: "image-img",
          cover: !0,
          src: e.image
        }, null)]), w(ze, {
          defaults: {
            VTabs: {
              height: ge(d.value)
            }
          }
        }, {
          default: () => {
            var g, P, S;
            return [T("div", {
              class: "v-toolbar__content",
              style: {
                height: ge(d.value)
              }
            }, [a.prepend && T("div", {
              class: "v-toolbar__prepend"
            }, [(g = a.prepend) == null ? void 0 : g.call(a)]), p && w(JI, {
              key: "title",
              text: e.title
            }, {
              text: a.title
            }), (P = a.default) == null ? void 0 : P.call(a), a.append && T("div", {
              class: "v-toolbar__append"
            }, [(S = a.append) == null ? void 0 : S.call(a)])])];
          }
        }), w(ze, {
          defaults: {
            VTabs: {
              height: ge(m.value)
            }
          }
        }, {
          default: () => [w(yc, null, {
            default: () => [c.value && T("div", {
              class: "v-toolbar__extension",
              style: {
                height: ge(m.value)
              }
            }, [y])]
          })]
        })]
      });
    }), {
      contentHeight: d,
      extensionHeight: m
    };
  }
}), aO = (e, t, a) => {
  if (e == null || t == null) return -1;
  if (!t.length) return 0;
  e = e.toString().toLocaleLowerCase(), t = t.toString().toLocaleLowerCase();
  const r = [];
  let i = e.indexOf(t);
  for (; ~i; )
    r.push([i, i + t.length]), i = e.indexOf(t, i + t.length);
  return r.length ? r : -1;
};
function zl(e, t) {
  if (!(e == null || typeof e == "boolean" || e === -1))
    return typeof e == "number" ? [[e, e + t.length]] : Array.isArray(e[0]) ? e : [e];
}
const Dh = Z({
  customFilter: Function,
  customKeyFilter: Object,
  filterKeys: [Array, String],
  filterMode: {
    type: String,
    default: "intersection"
  },
  noFilter: Boolean
}, "filter");
function nO(e, t, a) {
  var l;
  const r = [], i = (a == null ? void 0 : a.default) ?? aO, n = a != null && a.filterKeys ? ot(a.filterKeys) : !1, s = Object.keys((a == null ? void 0 : a.customKeyFilter) ?? {}).length;
  if (!(e != null && e.length)) return r;
  let o = null;
  e: for (let u = 0; u < e.length; u++) {
    const [c, d = c] = ot(e[u]), m = {}, v = {};
    let p = -1;
    if ((t || s > 0) && !(a != null && a.noFilter)) {
      let h = !1;
      if (typeof c == "object") {
        if (c.type === "divider" || c.type === "subheader") {
          (o == null ? void 0 : o.type) === "divider" && c.type === "subheader" && r.push(o), o = {
            index: u,
            matches: {},
            type: c.type
          };
          continue;
        }
        const g = n || Object.keys(d);
        h = g.length === s;
        for (const P of g) {
          const S = Zt(d, P), _ = (l = a == null ? void 0 : a.customKeyFilter) == null ? void 0 : l[P];
          if (p = _ ? _(S, t, c) : i(S, t, c), p !== -1 && p !== !1)
            _ ? m[P] = zl(p, t) : v[P] = zl(p, t);
          else if ((a == null ? void 0 : a.filterMode) === "every")
            continue e;
        }
      } else
        p = i(c, t, c), p !== -1 && p !== !1 && (v.title = zl(p, t));
      const y = Object.keys(v).length, f = Object.keys(m).length;
      if (!y && !f || (a == null ? void 0 : a.filterMode) === "union" && f !== s && !y || (a == null ? void 0 : a.filterMode) === "intersection" && (f !== s || !y && s > 0 && !h)) continue;
    }
    o && (r.push(o), o = null), r.push({
      index: u,
      matches: {
        ...v,
        ...m
      }
    });
  }
  return r;
}
function Rh(e, t, a, r) {
  const i = me([]), n = me(/* @__PURE__ */ new Map()), s = C(() => H(t));
  At(() => {
    const l = typeof a == "function" ? a() : H(a), u = typeof l != "string" && typeof l != "number" ? "" : String(l), c = nO(s.value, u, {
      customKeyFilter: {
        ...e.customKeyFilter,
        ...H(r == null ? void 0 : r.customKeyFilter)
      },
      default: e.customFilter,
      filterKeys: e.filterKeys,
      filterMode: e.filterMode,
      noFilter: e.noFilter
    }), d = H(t), m = [], v = /* @__PURE__ */ new Map();
    c.forEach((p) => {
      let {
        index: h,
        matches: y
      } = p;
      const f = d[h];
      m.push(f), v.set(f.value, y);
    }), i.value = m, n.value = v;
  });
  function o(l) {
    return n.value.get(l.value);
  }
  return {
    filteredItems: i,
    filteredMatches: n,
    getMatches: o
  };
}
function Nh(e, t, a) {
  return a == null || !a.length ? t : a.map((r, i) => {
    const n = i === 0 ? 0 : a[i - 1][1], s = [T("span", {
      class: te(`${e}__unmask`)
    }, [t.slice(n, r[0])]), T("span", {
      class: te(`${e}__mask`)
    }, [t.slice(r[0], r[1])])];
    return i === a.length - 1 && s.push(T("span", {
      class: te(`${e}__unmask`)
    }, [t.slice(r[1])])), T(ve, null, [s]);
  });
}
const rO = Z({
  autoSelectFirst: {
    type: [Boolean, String]
  },
  clearOnSelect: Boolean,
  search: String,
  ...Dh({
    filterKeys: ["title"]
  }),
  ...Lc(),
  ...ut(Ai({
    modelValue: null,
    role: "combobox"
  }), ["validationValue", "dirty", "appendInnerIcon"]),
  ...Xn({
    transition: !1
  })
}, "VAutocomplete"), zh = oe()({
  name: "VAutocomplete",
  props: rO(),
  emits: {
    "update:focused": (e) => !0,
    "update:search": (e) => !0,
    "update:modelValue": (e) => !0,
    "update:menu": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      t: r
    } = dt(), i = ee(), n = me(!1), s = me(!0), o = me(!1), l = ee(), u = ee(), c = me(-1), {
      items: d,
      transformIn: m,
      transformOut: v
    } = Dc(e), {
      textColorClasses: p,
      textColorStyles: h
    } = Bt(() => {
      var Q;
      return (Q = i.value) == null ? void 0 : Q.color;
    }), y = Ce(e, "search", ""), f = Ce(e, "modelValue", [], (Q) => m(Q === null ? [null] : ot(Q)), (Q) => {
      const ue = v(Q);
      return e.multiple ? ue : ue[0] ?? null;
    }), g = C(() => typeof e.counterValue == "function" ? e.counterValue(f.value) : typeof e.counterValue == "number" ? e.counterValue : f.value.length), P = zr(e), {
      filteredItems: S,
      getMatches: _
    } = Rh(e, d, () => s.value ? "" : y.value), j = C(() => e.hideSelected ? S.value.filter((Q) => !f.value.some((ue) => ue.value === Q.value)) : S.value), F = C(() => !!(e.chips || a.chip)), R = C(() => F.value || !!a.selection), U = C(() => f.value.map((Q) => Q.props.value)), W = C(() => {
      var ue;
      return (e.autoSelectFirst === !0 || e.autoSelectFirst === "exact" && y.value === ((ue = j.value[0]) == null ? void 0 : ue.title)) && j.value.length > 0 && !s.value && !o.value;
    }), D = C(() => e.hideNoData && !j.value.length || P.isReadonly.value || P.isDisabled.value), O = Ce(e, "menu"), B = C({
      get: () => O.value,
      set: (Q) => {
        var ue;
        O.value && !Q && ((ue = l.value) != null && ue.ΨopenChildren.size) || Q && D.value || (O.value = Q);
      }
    }), {
      menuId: N,
      ariaExpanded: z,
      ariaControls: J,
      ariaLabel: ae
    } = zc(e, B), X = ee(), L = Nc(X, i);
    function A(Q) {
      e.openOnClear && (B.value = !0), y.value = "";
    }
    function x() {
      D.value || (B.value = !0);
    }
    function V(Q) {
      D.value || (n.value && (Q.preventDefault(), Q.stopPropagation()), B.value = !B.value);
    }
    function $(Q) {
      var ue;
      (kr(Q) || Q.key === "Backspace") && ((ue = i.value) == null || ue.focus());
    }
    function b(Q) {
      var de, $e, ke, Ve, Se;
      if (P.isReadonly.value) return;
      const ue = (de = i.value) == null ? void 0 : de.selectionStart, G = f.value.length;
      if (["Enter", "ArrowDown", "ArrowUp"].includes(Q.key) && Q.preventDefault(), ["Enter", "ArrowDown"].includes(Q.key) && (B.value = !0), ["Escape"].includes(Q.key) && (B.value = !1), W.value && ["Enter", "Tab"].includes(Q.key) && !f.value.some((je) => {
        let {
          value: be
        } = je;
        return be === j.value[0].value;
      }) && se(j.value[0]), Q.key === "ArrowDown" && W.value && (($e = X.value) == null || $e.focus("next")), ["Backspace", "Delete"].includes(Q.key)) {
        if (!e.multiple && R.value && f.value.length > 0 && !y.value) return se(f.value[0], !1);
        if (~c.value) {
          Q.preventDefault();
          const je = c.value;
          se(f.value[c.value], !1), c.value = je >= G - 1 ? G - 2 : je;
        } else Q.key === "Backspace" && !y.value && (c.value = G - 1);
        return;
      }
      if (e.multiple)
        if (Q.key === "ArrowLeft") {
          if (c.value < 0 && ue && ue > 0) return;
          const je = c.value > -1 ? c.value - 1 : G - 1;
          if (f.value[je])
            c.value = je;
          else {
            const be = ((ke = y.value) == null ? void 0 : ke.length) ?? null;
            c.value = -1, (Ve = i.value) == null || Ve.setSelectionRange(be, be);
          }
        } else if (Q.key === "ArrowRight") {
          if (c.value < 0) return;
          const je = c.value + 1;
          f.value[je] ? c.value = je : (c.value = -1, (Se = i.value) == null || Se.setSelectionRange(0, 0));
        } else ~c.value && kr(Q) && (c.value = -1);
    }
    function I(Q) {
      if (br(i.value, ":autofill") || br(i.value, ":-webkit-autofill")) {
        const ue = d.value.find((G) => G.title === Q.target.value);
        ue && se(ue);
      }
    }
    function k() {
      var Q;
      e.eager && ((Q = u.value) == null || Q.calculateVisibleItems());
    }
    function E() {
      var Q;
      n.value && (s.value = !0, (Q = i.value) == null || Q.focus());
    }
    function M(Q) {
      n.value = !0, setTimeout(() => {
        o.value = !0;
      });
    }
    function K(Q) {
      o.value = !1;
    }
    function Y(Q) {
      (Q == null || Q === "" && !e.multiple && !R.value) && (f.value = []);
    }
    const le = me(!1);
    function se(Q) {
      let ue = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
      if (!(!Q || Q.props.disabled))
        if (e.multiple) {
          const G = f.value.findIndex(($e) => (e.valueComparator || Et)($e.value, Q.value)), de = ue ?? !~G;
          if (~G) {
            const $e = de ? [...f.value, Q] : [...f.value];
            $e.splice(G, 1), f.value = $e;
          } else de && (f.value = [...f.value, Q]);
          e.clearOnSelect && (y.value = "");
        } else {
          const G = ue !== !1;
          f.value = G ? [Q] : [], y.value = G && !R.value ? Q.title : "", qe(() => {
            B.value = !1, s.value = !0;
          });
        }
    }
    return fe(n, (Q, ue) => {
      var G;
      Q !== ue && (Q ? (le.value = !0, y.value = e.multiple || R.value ? "" : String(((G = f.value.at(-1)) == null ? void 0 : G.props.title) ?? ""), s.value = !0, qe(() => le.value = !1)) : (!e.multiple && y.value == null && (f.value = []), B.value = !1, y.value = "", c.value = -1));
    }), fe(y, (Q) => {
      !n.value || le.value || (Q && (B.value = !0), s.value = !Q);
    }), fe(B, () => {
      if (!e.hideSelected && B.value && f.value.length) {
        const Q = j.value.findIndex((ue) => f.value.some((G) => ue.value === G.value));
        rt && window.requestAnimationFrame(() => {
          var ue;
          Q >= 0 && ((ue = u.value) == null || ue.scrollToIndex(Q));
        });
      }
    }), fe(d, (Q, ue) => {
      B.value || n.value && !ue.length && Q.length && (B.value = !0);
    }), ce(() => {
      const Q = !!(!e.hideNoData || j.value.length || a["prepend-item"] || a["append-item"] || a["no-data"]), ue = f.value.length > 0, G = Oa.filterProps(e);
      return w(Oa, ne({
        ref: i
      }, G, {
        modelValue: y.value,
        "onUpdate:modelValue": [(de) => y.value = de, Y],
        focused: n.value,
        "onUpdate:focused": (de) => n.value = de,
        validationValue: f.externalValue,
        counterValue: g.value,
        dirty: ue,
        onChange: I,
        class: ["v-autocomplete", `v-autocomplete--${e.multiple ? "multiple" : "single"}`, {
          "v-autocomplete--active-menu": B.value,
          "v-autocomplete--chips": !!e.chips,
          "v-autocomplete--selection-slot": !!R.value,
          "v-autocomplete--selecting-index": c.value > -1
        }, e.class],
        style: e.style,
        readonly: P.isReadonly.value,
        placeholder: ue ? void 0 : e.placeholder,
        "onClick:clear": A,
        "onMousedown:control": x,
        onKeydown: b,
        "aria-expanded": z.value,
        "aria-controls": J.value
      }), {
        ...a,
        default: () => T(ve, null, [w(Fn, ne({
          id: N.value,
          ref: l,
          modelValue: B.value,
          "onUpdate:modelValue": (de) => B.value = de,
          activator: "parent",
          contentClass: "v-autocomplete__content",
          disabled: D.value,
          eager: e.eager,
          maxHeight: 310,
          openOnClick: !1,
          closeOnContentClick: !1,
          transition: e.transition,
          onAfterEnter: k,
          onAfterLeave: E
        }, e.menuProps), {
          default: () => [Q && w(hi, ne({
            ref: X,
            filterable: !0,
            selected: U.value,
            selectStrategy: e.multiple ? "independent" : "single-independent",
            onMousedown: (de) => de.preventDefault(),
            onKeydown: $,
            onFocusin: M,
            onFocusout: K,
            tabindex: "-1",
            selectable: !0,
            "aria-live": "polite",
            color: e.itemColor ?? e.color
          }, L, e.listProps), {
            default: () => {
              var de, $e, ke;
              return [(de = a["prepend-item"]) == null ? void 0 : de.call(a), !j.value.length && !e.hideNoData && ((($e = a["no-data"]) == null ? void 0 : $e.call(a)) ?? w(vt, {
                key: "no-data",
                title: r(e.noDataText)
              }, null)), w(Rc, {
                ref: u,
                renderless: !0,
                items: j.value,
                itemKey: "value"
              }, {
                default: (Ve) => {
                  var tt, ca, Wt;
                  let {
                    item: Se,
                    index: je,
                    itemRef: be
                  } = Ve;
                  const st = ne(Se.props, {
                    ref: be,
                    key: Se.value,
                    active: W.value && je === 0 ? !0 : void 0,
                    onClick: () => se(Se, null)
                  });
                  return Se.type === "divider" ? ((tt = a.divider) == null ? void 0 : tt.call(a, {
                    props: Se.raw,
                    index: je
                  })) ?? w(xa, ne(Se.props, {
                    key: `divider-${je}`
                  }), null) : Se.type === "subheader" ? ((ca = a.subheader) == null ? void 0 : ca.call(a, {
                    props: Se.raw,
                    index: je
                  })) ?? w(Lr, ne(Se.props, {
                    key: `subheader-${je}`
                  }), null) : ((Wt = a.item) == null ? void 0 : Wt.call(a, {
                    item: Se,
                    index: je,
                    props: st
                  })) ?? w(vt, ne(st, {
                    role: "option"
                  }), {
                    prepend: (Gt) => {
                      let {
                        isSelected: Ma
                      } = Gt;
                      return T(ve, null, [e.multiple && !e.hideSelected ? w(Sr, {
                        key: Se.value,
                        modelValue: Ma,
                        ripple: !1,
                        tabindex: "-1"
                      }, null) : void 0, Se.props.prependAvatar && w(Ea, {
                        image: Se.props.prependAvatar
                      }, null), Se.props.prependIcon && w(Ae, {
                        icon: Se.props.prependIcon
                      }, null)]);
                    },
                    title: () => {
                      var Gt;
                      return s.value ? Se.title : Nh("v-autocomplete", Se.title, (Gt = _(Se)) == null ? void 0 : Gt.title);
                    }
                  });
                }
              }), (ke = a["append-item"]) == null ? void 0 : ke.call(a)];
            }
          })]
        }), f.value.map((de, $e) => {
          function ke(be) {
            be.stopPropagation(), be.preventDefault(), se(de, !1);
          }
          const Ve = {
            "onClick:close": ke,
            onKeydown(be) {
              be.key !== "Enter" && be.key !== " " || (be.preventDefault(), be.stopPropagation(), ke(be));
            },
            onMousedown(be) {
              be.preventDefault(), be.stopPropagation();
            },
            modelValue: !0,
            "onUpdate:modelValue": void 0
          }, Se = F.value ? !!a.chip : !!a.selection, je = Se ? Gs(F.value ? a.chip({
            item: de,
            index: $e,
            props: Ve
          }) : a.selection({
            item: de,
            index: $e
          })) : void 0;
          if (!(Se && !je))
            return T("div", {
              key: de.value,
              class: te(["v-autocomplete__selection", $e === c.value && ["v-autocomplete__selection--selected", p.value]]),
              style: ye($e === c.value ? h.value : {})
            }, [F.value ? a.chip ? w(ze, {
              key: "chip-defaults",
              defaults: {
                VChip: {
                  closable: e.closableChips,
                  size: "small",
                  text: de.title
                }
              }
            }, {
              default: () => [je]
            }) : w(ul, ne({
              key: "chip",
              closable: e.closableChips,
              size: "small",
              text: de.title,
              disabled: de.props.disabled
            }, Ve), null) : je ?? T("span", {
              class: "v-autocomplete__selection-text"
            }, [de.title, e.multiple && $e < f.value.length - 1 && T("span", {
              class: "v-autocomplete__selection-comma"
            }, [He(",")])])]);
        })]),
        "append-inner": function() {
          var Ve, Se;
          for (var de = arguments.length, $e = new Array(de), ke = 0; ke < de; ke++)
            $e[ke] = arguments[ke];
          return T(ve, null, [(Ve = a["append-inner"]) == null ? void 0 : Ve.call(a, ...$e), e.menuIcon ? w(Ae, {
            class: "v-autocomplete__menu-icon",
            color: (Se = i.value) == null ? void 0 : Se.fieldIconColor,
            icon: e.menuIcon,
            onMousedown: V,
            onClick: Yv,
            "aria-label": ae.value,
            title: ae.value,
            tabindex: "-1"
          }, null) : void 0]);
        }
      });
    }), Ut({
      isFocused: n,
      isPristine: s,
      menu: B,
      search: y,
      filteredItems: S,
      select: se
    }, i);
  }
}), iO = Z({
  fullscreen: Boolean,
  retainFocus: {
    type: Boolean,
    default: !0
  },
  scrollable: Boolean,
  ...wc({
    origin: "center center",
    scrollStrategy: "block",
    transition: {
      component: hc
    },
    zIndex: 2400
  })
}, "VDialog"), sO = oe()({
  name: "VDialog",
  props: iO(),
  emits: {
    "update:modelValue": (e) => !0,
    afterEnter: () => !0,
    afterLeave: () => !0
  },
  setup(e, t) {
    let {
      emit: a,
      slots: r
    } = t;
    const i = Ce(e, "modelValue"), {
      scopeId: n
    } = nl(), s = ee();
    async function o(d) {
      var p, h, y;
      const m = d.relatedTarget, v = d.target;
      await qe(), i.value && m !== v && ((p = s.value) != null && p.contentEl) && // We're the topmost dialog
      ((h = s.value) != null && h.globalTop) && // It isn't the document or the dialog body
      ![document, s.value.contentEl].includes(v) && // It isn't inside the dialog body
      !s.value.contentEl.contains(v) && ((y = gr(s.value.contentEl)[0]) == null || y.focus());
    }
    function l(d) {
      var y;
      if (d.key !== "Tab" || !((y = s.value) != null && y.contentEl)) return;
      const m = gr(s.value.contentEl);
      if (!m.length) return;
      const v = m[0], p = m[m.length - 1], h = document.activeElement;
      d.shiftKey && h === v ? (d.preventDefault(), p.focus()) : !d.shiftKey && h === p && (d.preventDefault(), v.focus());
    }
    Aa(() => {
      document.removeEventListener("focusin", o), document.removeEventListener("keydown", l);
    }), rt && fe(() => i.value && e.retainFocus, (d) => {
      d ? (document.addEventListener("focusin", o, {
        once: !0
      }), document.addEventListener("keydown", l)) : (document.removeEventListener("focusin", o), document.removeEventListener("keydown", l));
    }, {
      immediate: !0
    });
    function u() {
      var d;
      a("afterEnter"), (e.scrim || e.retainFocus) && ((d = s.value) != null && d.contentEl) && !s.value.contentEl.contains(document.activeElement) && s.value.contentEl.focus({
        preventScroll: !0
      });
    }
    function c() {
      a("afterLeave");
    }
    return fe(i, async (d) => {
      var m;
      d || (await qe(), (m = s.value.activatorEl) == null || m.focus({
        preventScroll: !0
      }));
    }), ce(() => {
      const d = xs.filterProps(e), m = ne({
        "aria-haspopup": "dialog"
      }, e.activatorProps), v = ne({
        tabindex: -1
      }, e.contentProps);
      return w(xs, ne({
        ref: s,
        class: ["v-dialog", {
          "v-dialog--fullscreen": e.fullscreen,
          "v-dialog--scrollable": e.scrollable
        }, e.class],
        style: e.style
      }, d, {
        modelValue: i.value,
        "onUpdate:modelValue": (p) => i.value = p,
        "aria-modal": "true",
        activatorProps: m,
        contentProps: v,
        height: e.fullscreen ? void 0 : e.height,
        width: e.fullscreen ? void 0 : e.width,
        maxHeight: e.fullscreen ? void 0 : e.maxHeight,
        maxWidth: e.fullscreen ? void 0 : e.maxWidth,
        role: "dialog",
        onAfterEnter: u,
        onAfterLeave: c
      }, n), {
        activator: r.activator,
        default: function() {
          for (var p = arguments.length, h = new Array(p), y = 0; y < p; y++)
            h[y] = arguments[y];
          return w(ze, {
            root: "VDialog"
          }, {
            default: () => {
              var f;
              return [(f = r.default) == null ? void 0 : f.call(r, ...h)];
            }
          });
        }
      });
    }), Ut({}, s);
  }
}), lO = Z({
  ..._e(),
  ...Ke()
}, "VCardActions"), oO = oe()({
  name: "VCardActions",
  props: lO(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return Ta({
      VBtn: {
        slim: !0,
        variant: "text"
      }
    }), ce(() => w(e.tag, {
      class: te(["v-card-actions", e.class]),
      style: ye(e.style)
    }, a)), {};
  }
}), uO = Z({
  opacity: [Number, String],
  ..._e(),
  ...Ke()
}, "VCardSubtitle"), cO = oe()({
  name: "VCardSubtitle",
  props: uO(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return ce(() => w(e.tag, {
      class: te(["v-card-subtitle", e.class]),
      style: ye([{
        "--v-card-subtitle-opacity": e.opacity
      }, e.style])
    }, a)), {};
  }
}), dO = Mr("v-card-title"), fO = Z({
  appendAvatar: String,
  appendIcon: xe,
  prependAvatar: String,
  prependIcon: xe,
  subtitle: {
    type: [String, Number, Boolean],
    default: void 0
  },
  title: {
    type: [String, Number, Boolean],
    default: void 0
  },
  ..._e(),
  ...ga(),
  ...Ke()
}, "VCardItem"), mO = oe()({
  name: "VCardItem",
  props: fO(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return ce(() => {
      const r = !!(e.prependAvatar || e.prependIcon), i = !!(r || a.prepend), n = !!(e.appendAvatar || e.appendIcon), s = !!(n || a.append), o = !!(e.title != null || a.title), l = !!(e.subtitle != null || a.subtitle);
      return w(e.tag, {
        class: te(["v-card-item", e.class]),
        style: ye(e.style)
      }, {
        default: () => {
          var u;
          return [i && T("div", {
            key: "prepend",
            class: "v-card-item__prepend"
          }, [a.prepend ? w(ze, {
            key: "prepend-defaults",
            disabled: !r,
            defaults: {
              VAvatar: {
                density: e.density,
                image: e.prependAvatar
              },
              VIcon: {
                density: e.density,
                icon: e.prependIcon
              }
            }
          }, a.prepend) : T(ve, null, [e.prependAvatar && w(Ea, {
            key: "prepend-avatar",
            density: e.density,
            image: e.prependAvatar
          }, null), e.prependIcon && w(Ae, {
            key: "prepend-icon",
            density: e.density,
            icon: e.prependIcon
          }, null)])]), T("div", {
            class: "v-card-item__content"
          }, [o && w(dO, {
            key: "title"
          }, {
            default: () => {
              var c;
              return [((c = a.title) == null ? void 0 : c.call(a)) ?? Xe(e.title)];
            }
          }), l && w(cO, {
            key: "subtitle"
          }, {
            default: () => {
              var c;
              return [((c = a.subtitle) == null ? void 0 : c.call(a)) ?? Xe(e.subtitle)];
            }
          }), (u = a.default) == null ? void 0 : u.call(a)]), s && T("div", {
            key: "append",
            class: "v-card-item__append"
          }, [a.append ? w(ze, {
            key: "append-defaults",
            disabled: !n,
            defaults: {
              VAvatar: {
                density: e.density,
                image: e.appendAvatar
              },
              VIcon: {
                density: e.density,
                icon: e.appendIcon
              }
            }
          }, a.append) : T(ve, null, [e.appendIcon && w(Ae, {
            key: "append-icon",
            density: e.density,
            icon: e.appendIcon
          }, null), e.appendAvatar && w(Ea, {
            key: "append-avatar",
            density: e.density,
            image: e.appendAvatar
          }, null)])])];
        }
      });
    }), {};
  }
}), vO = Z({
  opacity: [Number, String],
  ..._e(),
  ...Ke()
}, "VCardText"), pO = oe()({
  name: "VCardText",
  props: vO(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return ce(() => w(e.tag, {
      class: te(["v-card-text", e.class]),
      style: ye([{
        "--v-card-text-opacity": e.opacity
      }, e.style])
    }, a)), {};
  }
}), hO = Z({
  appendAvatar: String,
  appendIcon: xe,
  disabled: Boolean,
  flat: Boolean,
  hover: Boolean,
  image: String,
  link: {
    type: Boolean,
    default: void 0
  },
  prependAvatar: String,
  prependIcon: xe,
  ripple: {
    type: [Boolean, Object],
    default: !0
  },
  subtitle: {
    type: [String, Number, Boolean],
    default: void 0
  },
  text: {
    type: [String, Number, Boolean],
    default: void 0
  },
  title: {
    type: [String, Number, Boolean],
    default: void 0
  },
  ...sn(),
  ..._e(),
  ...ga(),
  ...la(),
  ...ba(),
  ...vc(),
  ...Ii(),
  ...Qs(),
  ...Kt(),
  ...al(),
  ...Ke(),
  ...it(),
  ...on({
    variant: "elevated"
  })
}, "VCard"), Lh = oe()({
  name: "VCard",
  directives: {
    vRipple: Ft
  },
  props: hO(),
  setup(e, t) {
    let {
      attrs: a,
      slots: r
    } = t;
    const {
      themeClasses: i
    } = ht(e), {
      borderClasses: n
    } = ln(e), {
      colorClasses: s,
      colorStyles: o,
      variantClasses: l
    } = Dr(e), {
      densityClasses: u
    } = ja(e), {
      dimensionStyles: c
    } = oa(e), {
      elevationClasses: d
    } = ka(e), {
      loaderClasses: m
    } = Js(e), {
      locationStyles: v
    } = Oi(e), {
      positionClasses: p
    } = el(e), {
      roundedClasses: h
    } = Ht(e), y = tl(e, a);
    return ce(() => {
      const f = e.link !== !1 && y.isLink.value, g = !e.disabled && e.link !== !1 && (e.link || y.isClickable.value), P = f ? "a" : e.tag, S = !!(r.title || e.title != null), _ = !!(r.subtitle || e.subtitle != null), j = S || _, F = !!(r.append || e.appendAvatar || e.appendIcon), R = !!(r.prepend || e.prependAvatar || e.prependIcon), U = !!(r.image || e.image), W = j || R || F, D = !!(r.text || e.text != null);
      return nt(w(P, ne(y.linkProps, {
        class: ["v-card", {
          "v-card--disabled": e.disabled,
          "v-card--flat": e.flat,
          "v-card--hover": e.hover && !(e.disabled || e.flat),
          "v-card--link": g
        }, i.value, n.value, s.value, u.value, d.value, m.value, p.value, h.value, l.value, e.class],
        style: [o.value, c.value, v.value, e.style],
        onClick: g && y.navigate,
        tabindex: e.disabled ? -1 : void 0
      }), {
        default: () => {
          var O;
          return [U && T("div", {
            key: "image",
            class: "v-card__image"
          }, [r.image ? w(ze, {
            key: "image-defaults",
            disabled: !e.image,
            defaults: {
              VImg: {
                cover: !0,
                src: e.image
              }
            }
          }, r.image) : w(ol, {
            key: "image-img",
            cover: !0,
            src: e.image
          }, null)]), w(pc, {
            name: "v-card",
            active: !!e.loading,
            color: typeof e.loading == "boolean" ? void 0 : e.loading
          }, {
            default: r.loader
          }), W && w(mO, {
            key: "item",
            prependAvatar: e.prependAvatar,
            prependIcon: e.prependIcon,
            title: e.title,
            subtitle: e.subtitle,
            appendAvatar: e.appendAvatar,
            appendIcon: e.appendIcon
          }, {
            default: r.item,
            prepend: r.prepend,
            title: r.title,
            subtitle: r.subtitle,
            append: r.append
          }), D && w(pO, {
            key: "text"
          }, {
            default: () => {
              var B;
              return [((B = r.text) == null ? void 0 : B.call(r)) ?? e.text];
            }
          }), (O = r.default) == null ? void 0 : O.call(r), r.actions && w(oO, null, {
            default: r.actions
          }), Yn(g, "v-card")];
        }
      }), [[Ft, g && e.ripple]]);
    }), {};
  }
}), yO = Z({
  alwaysFilter: Boolean,
  autoSelectFirst: {
    type: [Boolean, String]
  },
  clearOnSelect: {
    type: Boolean,
    default: !0
  },
  delimiters: Array,
  ...Dh({
    filterKeys: ["title"]
  }),
  ...Lc({
    hideNoData: !0,
    returnObject: !0
  }),
  ...ut(Ai({
    modelValue: null,
    role: "combobox"
  }), ["validationValue", "dirty", "appendInnerIcon"]),
  ...Xn({
    transition: !1
  })
}, "VCombobox"), Bh = oe()({
  name: "VCombobox",
  props: yO(),
  emits: {
    "update:focused": (e) => !0,
    "update:modelValue": (e) => !0,
    "update:search": (e) => !0,
    "update:menu": (e) => !0
  },
  setup(e, t) {
    var ue;
    let {
      emit: a,
      slots: r
    } = t;
    const {
      t: i
    } = dt(), n = ee(), s = me(!1), o = me(!0), l = me(!1), u = ee(), c = ee(), d = me(-1);
    let m = !1;
    const {
      items: v,
      transformIn: p,
      transformOut: h
    } = Dc(e), {
      textColorClasses: y,
      textColorStyles: f
    } = Bt(() => {
      var G;
      return (G = n.value) == null ? void 0 : G.color;
    }), g = Ce(e, "modelValue", [], (G) => p(ot(G)), (G) => {
      const de = h(G);
      return e.multiple ? de : de[0] ?? null;
    }), P = zr(e), S = C(() => !!(e.chips || r.chip)), _ = C(() => S.value || !!r.selection), j = me(!e.multiple && !_.value ? ((ue = g.value[0]) == null ? void 0 : ue.title) ?? "" : ""), F = C({
      get: () => j.value,
      set: async (G) => {
        var de;
        if (j.value = G ?? "", !e.multiple && !_.value && (g.value = [Pa(e, G)], qe(() => {
          var $e;
          return ($e = c.value) == null ? void 0 : $e.scrollToIndex(0);
        })), G && e.multiple && ((de = e.delimiters) != null && de.length)) {
          const $e = e.delimiters.map(ws).join("|"), ke = G.split(new RegExp(`(?:${$e})+`));
          if (ke.length > 1) {
            for (let Ve of ke)
              Ve = Ve.trim(), Ve && (Y(Pa(e, Ve)), await qe());
            j.value = "";
          }
        }
        G || (d.value = -1), o.value = !G;
      }
    }), R = C(() => typeof e.counterValue == "function" ? e.counterValue(g.value) : typeof e.counterValue == "number" ? e.counterValue : e.multiple ? g.value.length : F.value.length), {
      filteredItems: U,
      getMatches: W
    } = Rh(e, v, () => e.alwaysFilter || !o.value ? F.value : ""), D = C(() => e.hideSelected ? U.value.filter((G) => !g.value.some((de) => de.value === G.value)) : U.value), O = C(() => e.hideNoData && !D.value.length || P.isReadonly.value || P.isDisabled.value), B = Ce(e, "menu"), N = C({
      get: () => B.value,
      set: (G) => {
        var de;
        B.value && !G && ((de = u.value) != null && de.ΨopenChildren.size) || G && O.value || (B.value = G);
      }
    }), {
      menuId: z,
      ariaExpanded: J,
      ariaControls: ae,
      ariaLabel: X
    } = zc(e, N);
    fe(j, (G) => {
      m ? qe(() => m = !1) : s.value && !N.value && (N.value = !0), a("update:search", G);
    }), fe(g, (G) => {
      var de;
      !e.multiple && !_.value && (j.value = ((de = G[0]) == null ? void 0 : de.title) ?? "");
    });
    const L = C(() => g.value.map((G) => G.value)), A = C(() => {
      var de;
      return (e.autoSelectFirst === !0 || e.autoSelectFirst === "exact" && F.value === ((de = D.value[0]) == null ? void 0 : de.title)) && D.value.length > 0 && !o.value && !l.value;
    }), x = ee(), V = Nc(x, n);
    function $(G) {
      m = !0, qe(() => m = !1), e.openOnClear && (N.value = !0);
    }
    function b() {
      O.value || (N.value = !0);
    }
    function I(G) {
      O.value || (s.value && (G.preventDefault(), G.stopPropagation()), N.value = !N.value);
    }
    function k(G) {
      var de;
      (kr(G) || G.key === "Backspace") && ((de = n.value) == null || de.focus());
    }
    function E(G) {
      var ke, Ve, Se, je;
      if (m_(G) || P.isReadonly.value) return;
      const de = (ke = n.value) == null ? void 0 : ke.selectionStart, $e = g.value.length;
      if (["Enter", "ArrowDown", "ArrowUp"].includes(G.key) && G.preventDefault(), ["Enter", "ArrowDown"].includes(G.key) && (N.value = !0), ["Escape"].includes(G.key) && (N.value = !1), ["Enter", "Escape", "Tab"].includes(G.key) && (A.value && ["Enter", "Tab"].includes(G.key) && !g.value.some((be) => {
        let {
          value: st
        } = be;
        return st === D.value[0].value;
      }) && Y(U.value[0]), o.value = !0), G.key === "ArrowDown" && A.value && ((Ve = x.value) == null || Ve.focus("next")), G.key === "Enter" && F.value && (Y(Pa(e, F.value)), _.value && (j.value = "")), ["Backspace", "Delete"].includes(G.key)) {
        if (!e.multiple && _.value && g.value.length > 0 && !F.value) return Y(g.value[0], !1);
        if (~d.value) {
          G.preventDefault();
          const be = d.value;
          Y(g.value[d.value], !1), d.value = be >= $e - 1 ? $e - 2 : be;
        } else G.key === "Backspace" && !F.value && (d.value = $e - 1);
        return;
      }
      if (e.multiple)
        if (G.key === "ArrowLeft") {
          if (d.value < 0 && de && de > 0) return;
          const be = d.value > -1 ? d.value - 1 : $e - 1;
          g.value[be] ? d.value = be : (d.value = -1, (Se = n.value) == null || Se.setSelectionRange(F.value.length, F.value.length));
        } else if (G.key === "ArrowRight") {
          if (d.value < 0) return;
          const be = d.value + 1;
          g.value[be] ? d.value = be : (d.value = -1, (je = n.value) == null || je.setSelectionRange(0, 0));
        } else ~d.value && kr(G) && (d.value = -1);
    }
    function M() {
      var G;
      e.eager && ((G = c.value) == null || G.calculateVisibleItems());
    }
    function K() {
      var G;
      s.value && (o.value = !0, (G = n.value) == null || G.focus());
    }
    function Y(G) {
      let de = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
      if (!(!G || G.props.disabled))
        if (e.multiple) {
          const $e = g.value.findIndex((Ve) => (e.valueComparator || Et)(Ve.value, G.value)), ke = de ?? !~$e;
          if (~$e) {
            const Ve = ke ? [...g.value, G] : [...g.value];
            Ve.splice($e, 1), g.value = Ve;
          } else ke && (g.value = [...g.value, G]);
          e.clearOnSelect && (F.value = "");
        } else {
          const $e = de !== !1;
          g.value = $e ? [G] : [], j.value = $e && !_.value ? G.title : "", qe(() => {
            N.value = !1, o.value = !0;
          });
        }
    }
    function le(G) {
      s.value = !0, setTimeout(() => {
        l.value = !0;
      });
    }
    function se(G) {
      l.value = !1;
    }
    function Q(G) {
      (G == null || G === "" && !e.multiple && !_.value) && (g.value = []);
    }
    return fe(s, (G, de) => {
      if (!(G || G === de) && (d.value = -1, N.value = !1, F.value)) {
        if (e.multiple) {
          Y(Pa(e, F.value));
          return;
        }
        if (!_.value) return;
        g.value.some(($e) => {
          let {
            title: ke
          } = $e;
          return ke === F.value;
        }) ? j.value = "" : Y(Pa(e, F.value));
      }
    }), fe(N, () => {
      if (!e.hideSelected && N.value && g.value.length) {
        const G = D.value.findIndex((de) => g.value.some(($e) => (e.valueComparator || Et)($e.value, de.value)));
        rt && window.requestAnimationFrame(() => {
          var de;
          G >= 0 && ((de = c.value) == null || de.scrollToIndex(G));
        });
      }
    }), fe(v, (G, de) => {
      N.value || s.value && !de.length && G.length && (N.value = !0);
    }), ce(() => {
      const G = !!(!e.hideNoData || D.value.length || r["prepend-item"] || r["append-item"] || r["no-data"]), de = g.value.length > 0, $e = Oa.filterProps(e);
      return w(Oa, ne({
        ref: n
      }, $e, {
        modelValue: F.value,
        "onUpdate:modelValue": [(ke) => F.value = ke, Q],
        focused: s.value,
        "onUpdate:focused": (ke) => s.value = ke,
        validationValue: g.externalValue,
        counterValue: R.value,
        dirty: de,
        class: ["v-combobox", {
          "v-combobox--active-menu": N.value,
          "v-combobox--chips": !!e.chips,
          "v-combobox--selection-slot": !!_.value,
          "v-combobox--selecting-index": d.value > -1,
          [`v-combobox--${e.multiple ? "multiple" : "single"}`]: !0
        }, e.class],
        style: e.style,
        readonly: P.isReadonly.value,
        placeholder: de ? void 0 : e.placeholder,
        "onClick:clear": $,
        "onMousedown:control": b,
        onKeydown: E,
        "aria-expanded": J.value,
        "aria-controls": ae.value
      }), {
        ...r,
        default: () => T(ve, null, [w(Fn, ne({
          id: z.value,
          ref: u,
          modelValue: N.value,
          "onUpdate:modelValue": (ke) => N.value = ke,
          activator: "parent",
          contentClass: "v-combobox__content",
          disabled: O.value,
          eager: e.eager,
          maxHeight: 310,
          openOnClick: !1,
          closeOnContentClick: !1,
          transition: e.transition,
          onAfterEnter: M,
          onAfterLeave: K
        }, e.menuProps), {
          default: () => [G && w(hi, ne({
            ref: x,
            filterable: !0,
            selected: L.value,
            selectStrategy: e.multiple ? "independent" : "single-independent",
            onMousedown: (ke) => ke.preventDefault(),
            selectable: !0,
            onKeydown: k,
            onFocusin: le,
            onFocusout: se,
            tabindex: "-1",
            "aria-live": "polite",
            color: e.itemColor ?? e.color
          }, V, e.listProps), {
            default: () => {
              var ke, Ve, Se;
              return [(ke = r["prepend-item"]) == null ? void 0 : ke.call(r), !D.value.length && !e.hideNoData && (((Ve = r["no-data"]) == null ? void 0 : Ve.call(r)) ?? w(vt, {
                key: "no-data",
                title: i(e.noDataText)
              }, null)), w(Rc, {
                ref: c,
                renderless: !0,
                items: D.value,
                itemKey: "value"
              }, {
                default: (je) => {
                  var Wt, Gt, Ma;
                  let {
                    item: be,
                    index: st,
                    itemRef: tt
                  } = je;
                  const ca = ne(be.props, {
                    ref: tt,
                    key: be.value,
                    active: A.value && st === 0 ? !0 : void 0,
                    onClick: () => Y(be, null)
                  });
                  return be.type === "divider" ? ((Wt = r.divider) == null ? void 0 : Wt.call(r, {
                    props: be.raw,
                    index: st
                  })) ?? w(xa, ne(be.props, {
                    key: `divider-${st}`
                  }), null) : be.type === "subheader" ? ((Gt = r.subheader) == null ? void 0 : Gt.call(r, {
                    props: be.raw,
                    index: st
                  })) ?? w(Lr, ne(be.props, {
                    key: `subheader-${st}`
                  }), null) : ((Ma = r.item) == null ? void 0 : Ma.call(r, {
                    item: be,
                    index: st,
                    props: ca
                  })) ?? w(vt, ne(ca, {
                    role: "option"
                  }), {
                    prepend: (Da) => {
                      let {
                        isSelected: Qn
                      } = Da;
                      return T(ve, null, [e.multiple && !e.hideSelected ? w(Sr, {
                        key: be.value,
                        modelValue: Qn,
                        ripple: !1,
                        tabindex: "-1"
                      }, null) : void 0, be.props.prependAvatar && w(Ea, {
                        image: be.props.prependAvatar
                      }, null), be.props.prependIcon && w(Ae, {
                        icon: be.props.prependIcon
                      }, null)]);
                    },
                    title: () => {
                      var Da;
                      return o.value ? be.title : Nh("v-combobox", be.title, (Da = W(be)) == null ? void 0 : Da.title);
                    }
                  });
                }
              }), (Se = r["append-item"]) == null ? void 0 : Se.call(r)];
            }
          })]
        }), g.value.map((ke, Ve) => {
          function Se(tt) {
            tt.stopPropagation(), tt.preventDefault(), Y(ke, !1);
          }
          const je = {
            "onClick:close": Se,
            onKeydown(tt) {
              tt.key !== "Enter" && tt.key !== " " || (tt.preventDefault(), tt.stopPropagation(), Se(tt));
            },
            onMousedown(tt) {
              tt.preventDefault(), tt.stopPropagation();
            },
            modelValue: !0,
            "onUpdate:modelValue": void 0
          }, be = S.value ? !!r.chip : !!r.selection, st = be ? Gs(S.value ? r.chip({
            item: ke,
            index: Ve,
            props: je
          }) : r.selection({
            item: ke,
            index: Ve
          })) : void 0;
          if (!(be && !st))
            return T("div", {
              key: ke.value,
              class: te(["v-combobox__selection", Ve === d.value && ["v-combobox__selection--selected", y.value]]),
              style: ye(Ve === d.value ? f.value : {})
            }, [S.value ? r.chip ? w(ze, {
              key: "chip-defaults",
              defaults: {
                VChip: {
                  closable: e.closableChips,
                  size: "small",
                  text: ke.title
                }
              }
            }, {
              default: () => [st]
            }) : w(ul, ne({
              key: "chip",
              closable: e.closableChips,
              size: "small",
              text: ke.title,
              disabled: ke.props.disabled
            }, je), null) : st ?? T("span", {
              class: "v-combobox__selection-text"
            }, [ke.title, e.multiple && Ve < g.value.length - 1 && T("span", {
              class: "v-combobox__selection-comma"
            }, [He(",")])])]);
        })]),
        "append-inner": function() {
          var je, be;
          for (var ke = arguments.length, Ve = new Array(ke), Se = 0; Se < ke; Se++)
            Ve[Se] = arguments[Se];
          return T(ve, null, [(je = r["append-inner"]) == null ? void 0 : je.call(r, ...Ve), (!e.hideNoData || e.items.length) && e.menuIcon ? w(Ae, {
            class: "v-combobox__menu-icon",
            color: (be = n.value) == null ? void 0 : be.fieldIconColor,
            icon: e.menuIcon,
            onMousedown: I,
            onClick: Yv,
            "aria-label": X.value,
            title: X.value,
            tabindex: "-1"
          }, null) : void 0]);
        }
      });
    }), Ut({
      isFocused: s,
      isPristine: o,
      menu: N,
      search: F,
      selectionIndex: d,
      filteredItems: U,
      select: Y
    }, n);
  }
}), yi = Symbol.for("vuetify:v-expansion-panel"), Fh = Z({
  ..._e(),
  ...bc()
}, "VExpansionPanelText"), Mo = oe()({
  name: "VExpansionPanelText",
  props: Fh(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = Fe(yi);
    if (!r) throw new Error("[Vuetify] v-expansion-panel-text needs to be placed inside v-expansion-panel");
    const {
      hasContent: i,
      onAfterLeave: n
    } = kc(e, r.isSelected);
    return ce(() => w(yc, {
      onAfterLeave: n
    }, {
      default: () => {
        var s;
        return [nt(T("div", {
          class: te(["v-expansion-panel-text", e.class]),
          style: ye(e.style)
        }, [a.default && i.value && T("div", {
          class: "v-expansion-panel-text__wrapper"
        }, [(s = a.default) == null ? void 0 : s.call(a)])]), [[rn, r.isSelected.value]])];
      }
    })), {};
  }
}), qh = Z({
  color: String,
  expandIcon: {
    type: xe,
    default: "$expand"
  },
  collapseIcon: {
    type: xe,
    default: "$collapse"
  },
  hideActions: Boolean,
  focusable: Boolean,
  static: Boolean,
  ripple: {
    type: [Boolean, Object],
    default: !1
  },
  readonly: Boolean,
  ..._e(),
  ...la()
}, "VExpansionPanelTitle"), Do = oe()({
  name: "VExpansionPanelTitle",
  directives: {
    vRipple: Ft
  },
  props: qh(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = Fe(yi);
    if (!r) throw new Error("[Vuetify] v-expansion-panel-title needs to be placed inside v-expansion-panel");
    const {
      backgroundColorClasses: i,
      backgroundColorStyles: n
    } = pt(() => e.color), {
      dimensionStyles: s
    } = oa(e), o = C(() => ({
      collapseIcon: e.collapseIcon,
      disabled: r.disabled.value,
      expanded: r.isSelected.value,
      expandIcon: e.expandIcon,
      readonly: e.readonly
    })), l = q(() => r.isSelected.value ? e.collapseIcon : e.expandIcon);
    return ce(() => {
      var u;
      return nt(T("button", {
        class: te(["v-expansion-panel-title", {
          "v-expansion-panel-title--active": r.isSelected.value,
          "v-expansion-panel-title--focusable": e.focusable,
          "v-expansion-panel-title--static": e.static
        }, i.value, e.class]),
        style: ye([n.value, s.value, e.style]),
        type: "button",
        tabindex: r.disabled.value ? -1 : void 0,
        disabled: r.disabled.value,
        "aria-expanded": r.isSelected.value,
        onClick: e.readonly ? void 0 : r.toggle
      }, [T("span", {
        class: "v-expansion-panel-title__overlay"
      }, null), (u = a.default) == null ? void 0 : u.call(a, o.value), !e.hideActions && w(ze, {
        defaults: {
          VIcon: {
            icon: l.value
          }
        }
      }, {
        default: () => {
          var c;
          return [T("span", {
            class: "v-expansion-panel-title__icon"
          }, [((c = a.actions) == null ? void 0 : c.call(a, o.value)) ?? w(Ae, null, null)])];
        }
      })]), [[Ft, e.ripple]]);
    }), {};
  }
}), Kh = Z({
  title: String,
  text: String,
  bgColor: String,
  ...ba(),
  ...Ci(),
  ...Kt(),
  ...Ke(),
  ...qh(),
  ...Fh()
}, "VExpansionPanel"), gO = oe()({
  name: "VExpansionPanel",
  props: Kh(),
  emits: {
    "group:selected": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = wr(e, yi), {
      backgroundColorClasses: i,
      backgroundColorStyles: n
    } = pt(() => e.bgColor), {
      elevationClasses: s
    } = ka(e), {
      roundedClasses: o
    } = Ht(e), l = q(() => (r == null ? void 0 : r.disabled.value) || e.disabled), u = C(() => r.group.items.value.reduce((m, v, p) => (r.group.selected.value.includes(v.id) && m.push(p), m), [])), c = C(() => {
      const m = r.group.items.value.findIndex((v) => v.id === r.id);
      return !r.isSelected.value && u.value.some((v) => v - m === 1);
    }), d = C(() => {
      const m = r.group.items.value.findIndex((v) => v.id === r.id);
      return !r.isSelected.value && u.value.some((v) => v - m === -1);
    });
    return St(yi, r), ce(() => {
      const m = !!(a.text || e.text), v = !!(a.title || e.title), p = Do.filterProps(e), h = Mo.filterProps(e);
      return w(e.tag, {
        class: te(["v-expansion-panel", {
          "v-expansion-panel--active": r.isSelected.value,
          "v-expansion-panel--before-active": c.value,
          "v-expansion-panel--after-active": d.value,
          "v-expansion-panel--disabled": l.value
        }, o.value, i.value, e.class]),
        style: ye([n.value, e.style])
      }, {
        default: () => [T("div", {
          class: te(["v-expansion-panel__shadow", ...s.value])
        }, null), w(ze, {
          defaults: {
            VExpansionPanelTitle: {
              ...p
            },
            VExpansionPanelText: {
              ...h
            }
          }
        }, {
          default: () => {
            var y;
            return [v && w(Do, {
              key: "title"
            }, {
              default: () => [a.title ? a.title() : e.title]
            }), m && w(Mo, {
              key: "text"
            }, {
              default: () => [a.text ? a.text() : e.text]
            }), (y = a.default) == null ? void 0 : y.call(a)];
          }
        })]
      });
    }), {
      groupItem: r
    };
  }
}), bO = ["default", "accordion", "inset", "popout"], kO = Z({
  flat: Boolean,
  ...Pi(),
  ...yn(Kh(), ["bgColor", "collapseIcon", "color", "eager", "elevation", "expandIcon", "focusable", "hideActions", "readonly", "ripple", "rounded", "tile", "static"]),
  ...it(),
  ..._e(),
  ...Ke(),
  variant: {
    type: String,
    default: "default",
    validator: (e) => bO.includes(e)
  }
}, "VExpansionPanels"), wO = oe()({
  name: "VExpansionPanels",
  props: kO(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      next: r,
      prev: i
    } = Rr(e, yi), {
      themeClasses: n
    } = ht(e), s = q(() => e.variant && `v-expansion-panels--variant-${e.variant}`);
    return Ta({
      VExpansionPanel: {
        bgColor: q(() => e.bgColor),
        collapseIcon: q(() => e.collapseIcon),
        color: q(() => e.color),
        eager: q(() => e.eager),
        elevation: q(() => e.elevation),
        expandIcon: q(() => e.expandIcon),
        focusable: q(() => e.focusable),
        hideActions: q(() => e.hideActions),
        readonly: q(() => e.readonly),
        ripple: q(() => e.ripple),
        rounded: q(() => e.rounded),
        static: q(() => e.static)
      }
    }), ce(() => w(e.tag, {
      class: te(["v-expansion-panels", {
        "v-expansion-panels--flat": e.flat,
        "v-expansion-panels--tile": e.tile
      }, n.value, s.value, e.class]),
      style: ye(e.style)
    }, {
      default: () => {
        var o;
        return [(o = a.default) == null ? void 0 : o.call(a, {
          prev: i,
          next: r
        })];
      }
    })), {
      next: r,
      prev: i
    };
  }
});
function $O() {
  function e(a) {
    var i, n;
    return [...((i = a.dataTransfer) == null ? void 0 : i.items) ?? []].filter((s) => s.kind === "file").map((s) => s.webkitGetAsEntry()).filter(Boolean).length > 0 || [...((n = a.dataTransfer) == null ? void 0 : n.files) ?? []].length > 0;
  }
  async function t(a) {
    var n, s;
    const r = [], i = [...((n = a.dataTransfer) == null ? void 0 : n.items) ?? []].filter((o) => o.kind === "file").map((o) => o.webkitGetAsEntry()).filter(Boolean);
    if (i.length)
      for (const o of i) {
        const l = await Hh(o, Uh(".", o));
        r.push(...l.map((u) => u.file));
      }
    else
      r.push(...((s = a.dataTransfer) == null ? void 0 : s.files) ?? []);
    return r;
  }
  return {
    handleDrop: t,
    hasFilesOrFolders: e
  };
}
function Hh(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
  return new Promise((a, r) => {
    e.isFile ? e.file((n) => a([{
      file: n,
      path: t
    }]), r) : e.isDirectory && e.createReader().readEntries(async (n) => {
      const s = [];
      for (const o of n)
        s.push(...await Hh(o, Uh(t, o)));
      a(s);
    });
  });
}
function Uh(e, t) {
  return t.isDirectory ? `${e}/${t.name}` : e;
}
const SO = Z({
  filterByType: String
}, "file-accept");
function _O(e) {
  const t = C(() => e.filterByType ? PO(e.filterByType) : null);
  function a(r) {
    if (t.value) {
      const i = r.filter(t.value);
      return {
        accepted: i,
        rejected: r.filter((n) => !i.includes(n))
      };
    }
    return {
      accepted: r,
      rejected: []
    };
  }
  return {
    filterAccepted: a
  };
}
function PO(e) {
  const t = e.split(",").map((n) => n.trim().toLowerCase()), a = t.filter((n) => n.startsWith(".")), r = t.filter((n) => n.endsWith("/*")), i = t.filter((n) => !a.includes(n) && !r.includes(n));
  return (n) => {
    var l, u;
    const s = ((l = n.name.split(".").at(-1)) == null ? void 0 : l.toLowerCase()) ?? "", o = ((u = n.type.split("/").at(0)) == null ? void 0 : u.toLowerCase()) ?? "";
    return i.includes(n.type) || a.includes(`.${s}`) || r.includes(`${o}/*`);
  };
}
const CO = Z({
  chips: Boolean,
  counter: Boolean,
  counterSizeString: {
    type: String,
    default: "$vuetify.fileInput.counterSize"
  },
  counterString: {
    type: String,
    default: "$vuetify.fileInput.counter"
  },
  hideInput: Boolean,
  multiple: Boolean,
  showSize: {
    type: [Boolean, Number, String],
    default: !1,
    validator: (e) => typeof e == "boolean" || [1e3, 1024].includes(Number(e))
  },
  truncateLength: {
    type: [Number, String],
    default: 22
  },
  ...gn({
    prependIcon: "$file"
  }),
  modelValue: {
    type: [Array, Object],
    default: (e) => e.multiple ? [] : null,
    validator: (e) => ot(e).every((t) => t != null && typeof t == "object")
  },
  ...SO(),
  ...rl({
    clearable: !0
  })
}, "VFileInput"), xO = oe()({
  name: "VFileInput",
  inheritAttrs: !1,
  props: CO(),
  emits: {
    "click:control": (e) => !0,
    "mousedown:control": (e) => !0,
    "update:focused": (e) => !0,
    "update:modelValue": (e) => !0,
    rejected: (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      emit: r,
      slots: i
    } = t;
    const {
      t: n
    } = dt(), {
      filterAccepted: s
    } = _O(e), o = Ce(e, "modelValue", e.modelValue, (L) => ot(L), (L) => !e.multiple && Array.isArray(L) ? L[0] : L), {
      isFocused: l,
      focus: u,
      blur: c
    } = Jn(e), d = C(() => typeof e.showSize != "boolean" ? e.showSize : void 0), m = C(() => (o.value ?? []).reduce((L, A) => {
      let {
        size: x = 0
      } = A;
      return L + x;
    }, 0)), v = C(() => rf(m.value, d.value)), p = C(() => (o.value ?? []).map((L) => {
      const {
        name: A = "",
        size: x = 0
      } = L, V = B(A);
      return e.showSize ? `${V} (${rf(x, d.value)})` : V;
    })), h = C(() => {
      var A;
      const L = ((A = o.value) == null ? void 0 : A.length) ?? 0;
      return e.showSize ? n(e.counterSizeString, L, v.value) : n(e.counterString, L);
    }), y = ee(), f = ee(), g = ee(), P = q(() => l.value || e.active), S = C(() => ["plain", "underlined"].includes(e.variant)), _ = me(!1), {
      handleDrop: j,
      hasFilesOrFolders: F
    } = $O();
    function R() {
      var L;
      g.value !== document.activeElement && ((L = g.value) == null || L.focus()), l.value || u();
    }
    function U(L) {
      var A;
      (A = g.value) == null || A.click();
    }
    function W(L) {
      r("mousedown:control", L);
    }
    function D(L) {
      var A;
      (A = g.value) == null || A.click(), r("click:control", L);
    }
    function O(L) {
      L.stopPropagation(), R(), qe(() => {
        o.value = [], Ws(e["onClick:clear"], L);
      });
    }
    function B(L) {
      if (L.length < Number(e.truncateLength)) return L;
      const A = Math.floor((Number(e.truncateLength) - 1) / 2);
      return `${L.slice(0, A)}…${L.slice(L.length - A)}`;
    }
    function N(L) {
      L.preventDefault(), L.stopImmediatePropagation(), _.value = !0;
    }
    function z(L) {
      L.preventDefault(), _.value = !1;
    }
    async function J(L) {
      if (L.preventDefault(), L.stopImmediatePropagation(), _.value = !1, !g.value || !F(L)) return;
      const A = await j(L);
      X(A);
    }
    function ae(L) {
      if (!(!L.target || L.repack))
        if (e.filterByType)
          X([...L.target.files]);
        else {
          const A = L.target;
          o.value = [...A.files ?? []];
        }
    }
    function X(L) {
      const A = new DataTransfer(), {
        accepted: x,
        rejected: V
      } = s(L);
      V.length && r("rejected", V);
      for (const b of x)
        A.items.add(b);
      g.value.files = A.files, o.value = [...A.files];
      const $ = new Event("change", {
        bubbles: !0
      });
      $.repack = !0, g.value.dispatchEvent($);
    }
    return fe(o, (L) => {
      (!Array.isArray(L) || !L.length) && g.value && (g.value.value = "");
    }), ce(() => {
      const L = !!(i.counter || e.counter), A = !!(L || i.details), [x, V] = Wn(a), {
        modelValue: $,
        ...b
      } = qt.filterProps(e), I = {
        ...$r.filterProps(e),
        "onClick:clear": O
      }, k = a.webkitdirectory !== void 0 && a.webkitdirectory !== !1, E = a.accept ? String(a.accept) : void 0, M = k ? void 0 : e.filterByType ?? E;
      return w(qt, ne({
        ref: y,
        modelValue: e.multiple ? o.value : o.value[0],
        class: ["v-file-input", {
          "v-file-input--chips": !!e.chips,
          "v-file-input--dragging": _.value,
          "v-file-input--hide": e.hideInput,
          "v-input--plain-underlined": S.value
        }, e.class],
        style: e.style,
        "onClick:prepend": U
      }, x, b, {
        centerAffix: !S.value,
        focused: l.value
      }), {
        ...i,
        default: (K) => {
          let {
            id: Y,
            isDisabled: le,
            isDirty: se,
            isReadonly: Q,
            isValid: ue,
            hasDetails: G
          } = K;
          return w($r, ne({
            ref: f,
            prependIcon: e.prependIcon,
            onMousedown: W,
            onClick: D,
            "onClick:prependInner": e["onClick:prependInner"],
            "onClick:appendInner": e["onClick:appendInner"]
          }, I, {
            id: Y.value,
            active: P.value || se.value,
            dirty: se.value || e.dirty,
            disabled: le.value,
            focused: l.value,
            details: G.value,
            error: ue.value === !1,
            onDragover: N,
            onDrop: J
          }), {
            ...i,
            default: (de) => {
              var Ve;
              let {
                props: {
                  class: $e,
                  ...ke
                }
              } = de;
              return T(ve, null, [T("input", ne({
                ref: g,
                type: "file",
                accept: M,
                readonly: Q.value,
                disabled: le.value,
                multiple: e.multiple,
                name: e.name,
                onClick: (Se) => {
                  Se.stopPropagation(), Q.value && Se.preventDefault(), R();
                },
                onChange: ae,
                onDragleave: z,
                onFocus: R,
                onBlur: c
              }, ke, V), null), T("div", {
                class: te($e)
              }, [!!((Ve = o.value) != null && Ve.length) && !e.hideInput && (i.selection ? i.selection({
                fileNames: p.value,
                totalBytes: m.value,
                totalBytesReadable: v.value
              }) : e.chips ? p.value.map((Se) => w(ul, {
                key: Se,
                size: "small",
                text: Se
              }, null)) : p.value.join(", "))])]);
            }
          });
        },
        details: A ? (K) => {
          var Y, le;
          return T(ve, null, [(Y = i.details) == null ? void 0 : Y.call(i, K), L && T(ve, null, [T("span", null, null), w(Sc, {
            active: !!((le = o.value) != null && le.length),
            value: h.value,
            disabled: e.disabled
          }, i.counter)])]);
        } : void 0
      });
    }), Ut({}, y, f, g);
  }
}), VO = Z({
  ..._e(),
  ...gx()
}, "VForm"), IO = oe()({
  name: "VForm",
  props: VO(),
  emits: {
    "update:modelValue": (e) => !0,
    submit: (e) => !0
  },
  setup(e, t) {
    let {
      slots: a,
      emit: r
    } = t;
    const i = bx(e), n = ee();
    function s(l) {
      l.preventDefault(), i.reset();
    }
    function o(l) {
      const u = l, c = i.validate();
      u.then = c.then.bind(c), u.catch = c.catch.bind(c), u.finally = c.finally.bind(c), r("submit", u), u.defaultPrevented || c.then((d) => {
        var v;
        let {
          valid: m
        } = d;
        m && ((v = n.value) == null || v.submit());
      }), u.preventDefault();
    }
    return ce(() => {
      var l;
      return T("form", {
        ref: n,
        class: te(["v-form", e.class]),
        style: ye(e.style),
        novalidate: !0,
        onReset: s,
        onSubmit: o
      }, [(l = a.default) == null ? void 0 : l.call(a, i)]);
    }), Ut(i, n);
  }
}), OO = Z({
  ...il({
    falseIcon: "$radioOff",
    trueIcon: "$radioOn"
  })
}, "VRadio"), EO = oe()({
  name: "VRadio",
  props: OO(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return ce(() => {
      const r = qn.filterProps(e);
      return w(qn, ne(r, {
        class: ["v-radio", e.class],
        style: e.style,
        type: "radio"
      }), a);
    }), {};
  }
}), AO = Z({
  height: {
    type: [Number, String],
    default: "auto"
  },
  ...gn(),
  ...ut(Pc(), ["multiple"]),
  trueIcon: {
    type: xe,
    default: "$radioOn"
  },
  falseIcon: {
    type: xe,
    default: "$radioOff"
  },
  type: {
    type: String,
    default: "radio"
  }
}, "VRadioGroup"), TO = oe()({
  name: "VRadioGroup",
  inheritAttrs: !1,
  props: AO(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      attrs: a,
      slots: r
    } = t;
    const i = pa(), n = C(() => e.id || `radio-group-${i}`), s = Ce(e, "modelValue"), o = ee();
    return ce(() => {
      const [l, u] = Wn(a), c = qt.filterProps(e), d = qn.filterProps(e), m = r.label ? r.label({
        label: e.label,
        props: {
          for: n.value
        }
      }) : e.label;
      return w(qt, ne({
        ref: o,
        class: ["v-radio-group", e.class],
        style: e.style
      }, l, c, {
        modelValue: s.value,
        "onUpdate:modelValue": (v) => s.value = v,
        id: n.value
      }), {
        ...r,
        default: (v) => {
          let {
            id: p,
            messagesId: h,
            isDisabled: y,
            isReadonly: f
          } = v;
          return T(ve, null, [m && w(Ei, {
            id: p.value
          }, {
            default: () => [m]
          }), w(Ex, ne(d, {
            id: p.value,
            "aria-describedby": h.value,
            defaultsTarget: "VRadio",
            trueIcon: e.trueIcon,
            falseIcon: e.falseIcon,
            type: e.type,
            disabled: y.value,
            readonly: f.value,
            "aria-labelledby": m ? p.value : void 0,
            multiple: !1
          }, u, {
            modelValue: s.value,
            "onUpdate:modelValue": (g) => s.value = g
          }), r)]);
        }
      });
    }), Ut({}, o);
  }
}), jO = {
  actions: "button@2",
  article: "heading, paragraph",
  avatar: "avatar",
  button: "button",
  card: "image, heading",
  "card-avatar": "image, list-item-avatar",
  chip: "chip",
  "date-picker": "list-item, heading, divider, date-picker-options, date-picker-days, actions",
  "date-picker-options": "text, avatar@2",
  "date-picker-days": "avatar@28",
  divider: "divider",
  heading: "heading",
  image: "image",
  "list-item": "text",
  "list-item-avatar": "avatar, text",
  "list-item-two-line": "sentences",
  "list-item-avatar-two-line": "avatar, sentences",
  "list-item-three-line": "paragraph",
  "list-item-avatar-three-line": "avatar, paragraph",
  ossein: "ossein",
  paragraph: "text@3",
  sentences: "text@2",
  subtitle: "text",
  table: "table-heading, table-thead, table-tbody, table-tfoot",
  "table-heading": "chip, text",
  "table-thead": "heading@6",
  "table-tbody": "table-row-divider@6",
  "table-row-divider": "table-row, divider",
  "table-row": "text@6",
  "table-tfoot": "text@2, avatar@2",
  text: "text"
};
function MO(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
  return T("div", {
    class: te(["v-skeleton-loader__bone", `v-skeleton-loader__${e}`])
  }, [t]);
}
function lm(e) {
  const [t, a] = e.split("@");
  return Array.from({
    length: a
  }).map(() => cl(t));
}
function cl(e) {
  let t = [];
  if (!e) return t;
  const a = jO[e];
  if (e !== a) {
    if (e.includes(",")) return om(e);
    if (e.includes("@")) return lm(e);
    a.includes(",") ? t = om(a) : a.includes("@") ? t = lm(a) : a && t.push(cl(a));
  }
  return [MO(e, t)];
}
function om(e) {
  return e.replace(/\s/g, "").split(",").map(cl);
}
const DO = Z({
  boilerplate: Boolean,
  color: String,
  loading: Boolean,
  loadingText: {
    type: String,
    default: "$vuetify.loading"
  },
  type: {
    type: [String, Array],
    default: "ossein"
  },
  ...la(),
  ...ba(),
  ...it()
}, "VSkeletonLoader"), Wh = oe()({
  name: "VSkeletonLoader",
  inheritAttrs: !1,
  props: DO(),
  setup(e, t) {
    let {
      attrs: a,
      slots: r
    } = t;
    const {
      backgroundColorClasses: i,
      backgroundColorStyles: n
    } = pt(() => e.color), {
      dimensionStyles: s
    } = oa(e), {
      elevationClasses: o
    } = ka(e), {
      themeClasses: l
    } = ht(e), {
      t: u
    } = dt(), c = C(() => cl(ot(e.type).join(",")));
    return ce(() => {
      var v;
      const d = !r.default || e.loading, m = e.boilerplate || !d ? {} : {
        ariaLive: "polite",
        ariaLabel: u(e.loadingText),
        role: "alert"
      };
      return T(ve, null, [d ? T("div", ne({
        class: ["v-skeleton-loader", {
          "v-skeleton-loader--boilerplate": e.boilerplate
        }, l.value, i.value, o.value],
        style: [n.value, s.value]
      }, m, a), [c.value]) : (v = r.default) == null ? void 0 : v.call(r)]);
    }), {};
  }
}), Fc = Symbol.for("vuetify:v-stepper"), Gh = Z({
  color: String,
  disabled: {
    type: [Boolean, String],
    default: !1
  },
  prevText: {
    type: String,
    default: "$vuetify.stepper.prev"
  },
  nextText: {
    type: String,
    default: "$vuetify.stepper.next"
  }
}, "VStepperActions"), Yh = oe()({
  name: "VStepperActions",
  props: Gh(),
  emits: {
    "click:prev": () => !0,
    "click:next": () => !0
  },
  setup(e, t) {
    let {
      emit: a,
      slots: r
    } = t;
    const {
      t: i
    } = dt();
    function n() {
      a("click:prev");
    }
    function s() {
      a("click:next");
    }
    return ce(() => {
      const o = {
        onClick: n
      }, l = {
        onClick: s
      };
      return T("div", {
        class: "v-stepper-actions"
      }, [w(ze, {
        defaults: {
          VBtn: {
            disabled: ["prev", !0].includes(e.disabled),
            text: i(e.prevText),
            variant: "text"
          }
        }
      }, {
        default: () => {
          var u;
          return [((u = r.prev) == null ? void 0 : u.call(r, {
            props: o
          })) ?? w(Be, o, null)];
        }
      }), w(ze, {
        defaults: {
          VBtn: {
            color: e.color,
            disabled: ["next", !0].includes(e.disabled),
            text: i(e.nextText),
            variant: "tonal"
          }
        }
      }, {
        default: () => {
          var u;
          return [((u = r.next) == null ? void 0 : u.call(r, {
            props: l
          })) ?? w(Be, l, null)];
        }
      })]);
    }), {};
  }
}), Xh = Mr("v-stepper-header"), RO = Z({
  color: String,
  title: String,
  subtitle: String,
  complete: Boolean,
  completeIcon: {
    type: xe,
    default: "$complete"
  },
  editable: Boolean,
  editIcon: {
    type: xe,
    default: "$edit"
  },
  error: Boolean,
  errorIcon: {
    type: xe,
    default: "$error"
  },
  icon: xe,
  ripple: {
    type: [Boolean, Object],
    default: !0
  },
  rules: {
    type: Array,
    default: () => []
  }
}, "StepperItem"), NO = Z({
  ...RO(),
  ...Ci()
}, "VStepperItem"), Zh = oe()({
  name: "VStepperItem",
  directives: {
    vRipple: Ft
  },
  props: NO(),
  emits: {
    "group:selected": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = wr(e, Fc, !0), i = C(() => (r == null ? void 0 : r.value.value) ?? e.value), n = C(() => e.rules.every((m) => m() === !0)), s = C(() => !e.disabled && e.editable), o = C(() => !e.disabled && e.editable), l = C(() => e.error || !n.value), u = C(() => e.complete || e.rules.length > 0 && n.value), c = C(() => l.value ? e.errorIcon : u.value ? e.completeIcon : r.isSelected.value && e.editable ? e.editIcon : e.icon), d = C(() => ({
      canEdit: o.value,
      hasError: l.value,
      hasCompleted: u.value,
      title: e.title,
      subtitle: e.subtitle,
      step: i.value,
      value: e.value
    }));
    return ce(() => {
      var y, f, g;
      const m = (!r || r.isSelected.value || u.value || o.value) && !l.value && !e.disabled, v = !!(e.title != null || a.title), p = !!(e.subtitle != null || a.subtitle);
      function h() {
        r == null || r.toggle();
      }
      return nt(T("button", {
        class: te(["v-stepper-item", {
          "v-stepper-item--complete": u.value,
          "v-stepper-item--disabled": e.disabled,
          "v-stepper-item--error": l.value
        }, r == null ? void 0 : r.selectedClass.value]),
        disabled: !e.editable,
        type: "button",
        onClick: h
      }, [s.value && Yn(!0, "v-stepper-item"), w(Ea, {
        key: "stepper-avatar",
        class: "v-stepper-item__avatar",
        color: m ? e.color : void 0,
        size: 24
      }, {
        default: () => {
          var P;
          return [((P = a.icon) == null ? void 0 : P.call(a, d.value)) ?? (c.value ? w(Ae, {
            icon: c.value
          }, null) : i.value)];
        }
      }), T("div", {
        class: "v-stepper-item__content"
      }, [v && T("div", {
        key: "title",
        class: "v-stepper-item__title"
      }, [((y = a.title) == null ? void 0 : y.call(a, d.value)) ?? e.title]), p && T("div", {
        key: "subtitle",
        class: "v-stepper-item__subtitle"
      }, [((f = a.subtitle) == null ? void 0 : f.call(a, d.value)) ?? e.subtitle]), (g = a.default) == null ? void 0 : g.call(a, d.value)])]), [[Ft, e.editable && e.ripple, null]]);
    }), {};
  }
}), zO = Z({
  ...ut(Oc(), ["continuous", "nextIcon", "prevIcon", "showArrows", "touch", "mandatory"])
}, "VStepperWindow"), Jh = oe()({
  name: "VStepperWindow",
  props: zO(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const r = Fe(Fc, null), i = Ce(e, "modelValue"), n = C({
      get() {
        var s;
        return i.value != null || !r ? i.value : (s = r.items.value.find((o) => r.selected.value.includes(o.id))) == null ? void 0 : s.value;
      },
      set(s) {
        i.value = s;
      }
    });
    return ce(() => {
      const s = Pr.filterProps(e);
      return w(Pr, ne({
        _as: "VStepperWindow"
      }, s, {
        modelValue: n.value,
        "onUpdate:modelValue": (o) => n.value = o,
        class: ["v-stepper-window", e.class],
        style: e.style,
        mandatory: !1,
        touch: !1
      }), a);
    }), {};
  }
}), LO = Z({
  ...Ec()
}, "VStepperWindowItem"), Qh = oe()({
  name: "VStepperWindowItem",
  props: LO(),
  setup(e, t) {
    let {
      slots: a
    } = t;
    return ce(() => {
      const r = Cr.filterProps(e);
      return w(Cr, ne({
        _as: "VStepperWindowItem"
      }, r, {
        class: ["v-stepper-window-item", e.class],
        style: e.style
      }), a);
    }), {};
  }
}), BO = Z({
  altLabels: Boolean,
  bgColor: String,
  completeIcon: xe,
  editIcon: xe,
  editable: Boolean,
  errorIcon: xe,
  hideActions: Boolean,
  items: {
    type: Array,
    default: () => []
  },
  itemTitle: {
    type: String,
    default: "title"
  },
  itemValue: {
    type: String,
    default: "value"
  },
  nonLinear: Boolean,
  flat: Boolean,
  ...lp()
}, "Stepper"), FO = Z({
  ...BO(),
  ...Pi({
    mandatory: "force",
    selectedClass: "v-stepper-item--selected"
  }),
  ...xc(),
  ...yn(Gh(), ["prevText", "nextText"])
}, "VStepper"), qO = oe()({
  name: "VStepper",
  props: FO(),
  emits: {
    "update:modelValue": (e) => !0
  },
  setup(e, t) {
    let {
      slots: a
    } = t;
    const {
      items: r,
      next: i,
      prev: n,
      selected: s
    } = Rr(e, Fc), {
      displayClasses: o,
      mobile: l
    } = Xs(e), {
      completeIcon: u,
      editIcon: c,
      errorIcon: d,
      color: m,
      editable: v,
      prevText: p,
      nextText: h
    } = dm(e), y = C(() => e.items.map((P, S) => {
      const _ = Zt(P, e.itemTitle, P), j = Zt(P, e.itemValue, S + 1);
      return {
        title: _,
        value: j,
        raw: P
      };
    })), f = C(() => r.value.findIndex((P) => s.value.includes(P.id))), g = C(() => e.disabled ? e.disabled : f.value === 0 ? "prev" : f.value === r.value.length - 1 ? "next" : !1);
    return Ta({
      VStepperItem: {
        editable: v,
        errorIcon: d,
        completeIcon: u,
        editIcon: c,
        prevText: p,
        nextText: h
      },
      VStepperActions: {
        color: m,
        disabled: g,
        prevText: p,
        nextText: h
      }
    }), ce(() => {
      const P = qa.filterProps(e), S = !!(a.header || e.items.length), _ = e.items.length > 0, j = !e.hideActions && !!(_ || a.actions);
      return w(qa, ne(P, {
        color: e.bgColor,
        class: ["v-stepper", {
          "v-stepper--alt-labels": e.altLabels,
          "v-stepper--flat": e.flat,
          "v-stepper--non-linear": e.nonLinear,
          "v-stepper--mobile": l.value
        }, o.value, e.class],
        style: e.style
      }), {
        default: () => {
          var F, R;
          return [S && w(Xh, {
            key: "stepper-header"
          }, {
            default: () => [y.value.map((U, W) => {
              let {
                raw: D,
                ...O
              } = U;
              return T(ve, null, [!!W && w(xa, null, null), w(Zh, O, {
                default: a[`header-item.${O.value}`] ?? a.header,
                icon: a.icon,
                title: a.title,
                subtitle: a.subtitle
              })]);
            })]
          }), _ && w(Jh, {
            key: "stepper-window"
          }, {
            default: () => [y.value.map((U) => w(Qh, {
              value: U.value
            }, {
              default: () => {
                var W, D;
                return ((W = a[`item.${U.value}`]) == null ? void 0 : W.call(a, U)) ?? ((D = a.item) == null ? void 0 : D.call(a, U));
              }
            }))]
          }), (F = a.default) == null ? void 0 : F.call(a, {
            prev: n,
            next: i
          }), j && (((R = a.actions) == null ? void 0 : R.call(a, {
            next: i,
            prev: n
          })) ?? w(Yh, {
            key: "stepper-actions",
            "onClick:prev": n,
            "onClick:next": i
          }, a))];
        }
      });
    }), {
      prev: n,
      next: i
    };
  }
}), qc = _t({
  props: {
    icon: {
      type: String,
      required: !0
    },
    avatarProps: {
      type: Object,
      required: !0
    }
  },
  setup(e) {
    const t = C(() => e.icon.startsWith("http://") || e.icon.startsWith("https://")), a = C(() => e.icon.startsWith("<?xml") || e.icon.startsWith("<svg"));
    return () => t.value ? De(Ea, e.avatarProps, () => De(ol, { src: e.icon })) : a.value ? De("div", { innerHTML: e.icon.replace("<svg ", '<svg class="v-icon__svg" '), class: "v-icon" }) : De(Ae, null, () => e.icon);
  }
}), KO = {
  __name: "select-item",
  props: {
    multiple: {
      type: Boolean,
      default: !1
    },
    itemProps: {
      type: Object,
      required: !0
    },
    item: {
      /** @type import('vue').PropType<import('@json-layout/vocabulary').SelectItem> */
      type: Object,
      required: !0
    },
    avatarProps: {
      type: Object,
      required: !0
    }
  },
  setup(e) {
    return (t, a) => (ie(), pe(H(vt), en(tn(e.itemProps)), Bo({ _: 2 }, [
      e.item.icon || e.multiple ? {
        name: "prepend",
        fn: re(({ isSelected: r }) => [
          e.multiple ? (ie(), pe(H(Sr), {
            key: e.item.key,
            ripple: !1,
            tabindex: "-1",
            "model-value": r
          }, null, 8, ["model-value"])) : Te("", !0),
          typeof e.item.icon == "string" ? (ie(), pe(qc, {
            key: 1,
            icon: e.item.icon,
            "avatar-props": e.avatarProps
          }, null, 8, ["icon", "avatar-props"])) : Te("", !0)
        ]),
        key: "0"
      } : void 0
    ]), 1040));
  }
}, HO = {
  __name: "select-item-header",
  props: {
    item: {
      /** @type import('vue').PropType<import('@json-layout/vocabulary').SelectItemHeader> */
      type: Object,
      required: !0
    },
    avatarProps: {
      type: Object,
      required: !0
    }
  },
  setup(e) {
    return (t, a) => (ie(), pe(H(Lr), null, {
      default: re(() => [
        typeof e.item.icon == "string" ? (ie(), pe(qc, {
          key: 0,
          icon: e.item.icon,
          "avatar-props": e.avatarProps
        }, null, 8, ["icon", "avatar-props"])) : Te("", !0),
        He(" " + Xe(e.item.title), 1)
      ]),
      _: 1
    }));
  }
}, UO = {
  __name: "select-selection",
  props: {
    multiple: {
      type: Boolean,
      default: !1
    },
    last: {
      type: Boolean,
      default: !1
    },
    item: {
      /** @type import('vue').PropType<import('@json-layout/vocabulary').SelectItem> */
      type: Object,
      required: !0
    },
    avatarProps: {
      type: Object,
      required: !0
    },
    cssPrefix: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    return (t, a) => (ie(), Ne("span", {
      class: te(e.cssPrefix + "__selection-text")
    }, [
      typeof e.item.icon == "string" ? (ie(), pe(qc, {
        key: 0,
        icon: e.item.icon,
        "avatar-props": e.avatarProps
      }, null, 8, ["icon", "avatar-props"])) : Te("", !0),
      He(" " + Xe(e.item.title ?? e.item.key ?? e.item.value) + " ", 1),
      e.multiple && !e.last ? (ie(), Ne("span", {
        key: 1,
        class: te(e.cssPrefix + "__selection-comma")
      }, ",", 2)) : Te("", !0)
    ], 2));
  }
};
function Kc(e, t, a, r) {
  const i = C(() => e.value.layout), { inputProps: n, options: s, skeleton: o, localData: l, compSlots: u } = wt(e, t, { layoutPropsMap: ["multiple", "placeholder"], bindData: !1 }), c = Ti(e, t), d = Zn(e.value.fullKey), m = C(() => {
    const p = { ...n.value };
    return s.value.readOnly ? p.menuProps = { modelValue: !1 } : p.menuProps = { zIndex: d }, p.clearable = p.clearable ?? !o.value.required, p.valueComparator = (h, y) => {
      const f = typeof h == "object" ? t.prepareSelectItem(e.value, h).key : h, g = typeof y == "object" ? t.prepareSelectItem(e.value, y).key : y;
      return f === g;
    }, p["onUpdate:modelValue"] = (h) => {
      if (Array.isArray(h) && Array.isArray(e.value.data))
        for (let f = 0; f < e.value.data.length; f++)
          typeof e.value.data[f] == "object" && typeof h[f] == "string" && (h[f] = e.value.data[f]);
      const y = Array.isArray(h) && e.value.layout.separator ? h.join(
        /** @type {string} */
        e.value.layout.separator
      ) : h;
      return l.value = y, t.input(e.value, y);
    }, p.onBlur = () => t.blur(e.value), p;
  }), v = C(() => {
    const p = { ...u.value };
    return p.item || (p.item = (h) => h.item.raw.header ? De(HO, {
      item: h.item.raw,
      avatarProps: a
    }) : De(KO, {
      multiple: i.value.multiple,
      itemProps: h.props,
      item: h.item.raw,
      avatarProps: a
    })), p.selection || (p.selection = (h) => De(UO, {
      multiple: i.value.multiple,
      last: i.value.multiple && h.index === e.value.data.length - 1,
      item: c.prepareSelectedItem(h.item.raw, h.item.value),
      avatarProps: a,
      cssPrefix: r
    })), p;
  });
  return { localData: l, inputProps: n, selectProps: m, compSlots: u, selectSlots: v, getItems: c };
}
const WO = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfSelectNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfSelect");
    const t = Jt("VjsfSelectItem-VAvatar", { rounded: !1, size: "small" }), { getItems: a, selectProps: r, selectSlots: i, localData: n } = Kc(q(e, "modelValue"), e.statefulLayout, t.value, "v-select"), s = C(() => {
      const o = { ...r.value };
      return o.loading = a.loading.value, o.items = a.items.value, o.modelValue = n.value, o;
    });
    return () => De(Bc, s.value, i.value);
  }
}), GO = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfSelectNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfAutocomplete");
    const t = Jt("VjsfSelectItem-VAvatar", { rounded: !1, size: "small" }), { getItems: a, selectProps: r, selectSlots: i, localData: n } = Kc(q(e, "modelValue"), e.statefulLayout, t.value, "v-autocomplete"), s = C(() => {
      const o = { ...r.value };
      return o.noFilter = !0, o["onUpdate:search"] = (l) => {
        a.search.value = l;
      }, o.items = a.items.value, o.loading = a.loading.value, o.modelValue = n.value, o;
    });
    return () => De(zh, s.value, i.value);
  }
}), YO = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfRadioGroupNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfRadioGroup");
    const t = q(e, "modelValue"), a = Ti(t, e.statefulLayout), { inputProps: r, compSlots: i, localData: n } = wt(t, e.statefulLayout), s = C(() => {
      const l = { ...r.value };
      return l.modelValue = n.value, l;
    }), o = C(() => {
      const l = { ...i.value }, u = [];
      if (a.loading.value)
        u.push(De(Wh, { type: "chip" }));
      else
        for (const c of a.items.value)
          u.push(De(EO, { label: c.title, value: c.value }));
      return l.default = () => u, l;
    });
    return () => De(TO, s.value, o.value);
  }
}), ey = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfCheckboxGroupNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    },
    type: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const t = q(e, "modelValue"), a = Ti(t, e.statefulLayout), { inputProps: r, compSlots: i, localData: n, layout: s } = wt(t, e.statefulLayout, { bindData: !1 }), o = C(() => {
      const u = { ...r.value };
      return u.class.push("v-radio-group"), u.class.push("vjsf-selection-group"), u;
    }), l = C(() => {
      const u = { ...i.value };
      return u.default || (u.default = () => {
        var d;
        const c = [De(Ei, { text: o.value.label })];
        if (a.loading.value)
          c.push(De(Wh, { type: "chip" }));
        else {
          const m = [];
          for (const v of a.items.value) {
            let p = !1;
            s.value.multiple ? p = (d = n.value) == null ? void 0 : d.includes(v.value) : p = n.value === v.value, m.push(De(
              /** @type {import('vue').Component} */
              e.type === "switch" ? th : eh,
              {
                label: v.title,
                hideDetails: !0,
                key: v.key,
                modelValue: p,
                onClick: () => {
                  let h;
                  s.value.multiple ? (h = e.modelValue.data ? [...e.modelValue.data] : [], h.includes(v.value) ? h = h.filter((y) => y !== v.value) : h.push(v.value)) : e.modelValue.data === v.value ? h = void 0 : h = v.value, e.statefulLayout.input(e.modelValue, h);
                }
              }
            ));
          }
          c.push(De("div", { class: "v-selection-control-group" }, m));
        }
        return c;
      }), u;
    });
    return () => De(qt, o.value, l.value);
  }
}), XO = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfCheckboxGroupNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    return Ye({}, "VjsfCheckboxGroup"), () => De(ey, {
      modelValue: e.modelValue,
      statefulLayout: e.statefulLayout,
      type: "checkbox"
    });
  }
}), ZO = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfCheckboxGroupNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    return Ye({}, "VjsfSwitchGroup"), () => De(ey, {
      modelValue: e.modelValue,
      statefulLayout: e.statefulLayout,
      type: "switch"
    });
  }
}), JO = {
  __name: "one-of-select",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfOneOfSelectNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfOneOfSelect");
    const t = e, { inputProps: a, localData: r, skeleton: i, children: n } = wt(
      q(t, "modelValue"),
      t.statefulLayout,
      { bindData: !1 }
    ), s = Zn(t.modelValue.fullKey), o = ee(void 0);
    fe(() => {
      var c, d;
      return (d = (c = n.value) == null ? void 0 : c[0]) == null ? void 0 : d.key;
    }, () => {
      var c, d;
      ((c = t.modelValue.children) == null ? void 0 : c.length) === 1 ? typeof t.modelValue.children[0].key == "number" && (o.value = (d = i.value.childrenTrees) == null ? void 0 : d[t.modelValue.children[0].key]) : o.value = void 0;
    }, { immediate: !0 });
    const l = (c) => {
      i.value.childrenTrees && t.statefulLayout.activateItem(t.modelValue, i.value.childrenTrees.indexOf(c));
    }, u = C(() => {
      const c = { ...a.value };
      c["onUpdate:modelValue"] = l, t.modelValue.options.readOnly || (c.menuProps = { zIndex: s });
      const d = [];
      for (const m of i.value.childrenTrees || []) {
        const v = t.statefulLayout.compiledLayout.skeletonTrees[m], p = t.statefulLayout.compiledLayout.normalizedLayouts[v.root];
        (!Qy(p) || !p.if || t.statefulLayout.evalNodeExpression(t.modelValue, p.if, r.value)) && d.push(v);
      }
      return c.items = d, c.itemTitle = "title", c.itemValue = (m) => m.root, c;
    });
    return (c, d) => (ie(), pe(H(Va), null, {
      default: re(() => {
        var m, v, p;
        return [
          e.modelValue.skeleton.childrenTrees ? (ie(), pe(H(dp), {
            key: 0,
            cols: "12"
          }, {
            default: re(() => [
              w(H(Bc), ne(u.value, { "model-value": o.value }), null, 16, ["model-value"])
            ]),
            _: 1
          })) : Te("", !0),
          (m = e.modelValue.children) != null && m[0] ? (ie(!0), Ne(ve, { key: 1 }, $t(H(Qa)((v = e.modelValue.children) == null ? void 0 : v[0]) ? (p = e.modelValue.children) == null ? void 0 : p[0].children : e.modelValue.children, (h) => (ie(), pe(Ia, {
            key: h.fullKey,
            "model-value": (
              /** @type import('../../types.js').VjsfNode */
              h
            ),
            "stateful-layout": e.statefulLayout
          }, null, 8, ["model-value", "stateful-layout"]))), 128)) : Te("", !0)
        ];
      }),
      _: 1
    }));
  }
}, QO = ["innerHTML"], dl = {
  __name: "child-subtitle",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('@json-layout/core').StateNode> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    const t = C(() => e.modelValue.options.density === "default" ? "mt-1 mb-5" : e.modelValue.options.density === "comfortable" ? "mb-4" : "mb-3");
    return (a, r) => H(Qa)(e.modelValue) && e.modelValue.layout.subtitle ? (ie(), Ne("p", {
      key: 0,
      class: te(`text-subtitle ${t.value}`),
      innerHTML: e.modelValue.layout.subtitle
    }, null, 10, QO)) : Te("", !0);
  }
}, eE = {
  __name: "tabs",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfTabsNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfTabs");
    const t = Jt("VjsfTabs-VSheet", { border: !0 }), a = ee(0);
    return (r, i) => (ie(), Ne(ve, null, [
      w(Nr, { node: e.modelValue }, null, 8, ["node"]),
      w(H(qa), en(tn(H(t))), {
        default: re(() => [
          w(H(Tc), {
            modelValue: a.value,
            "onUpdate:modelValue": i[0] || (i[0] = (n) => a.value = n),
            direction: "horizontal"
          }, {
            default: re(() => [
              (ie(!0), Ne(ve, null, $t(e.modelValue.children, (n, s) => (ie(), pe(H(mi), {
                key: n.key,
                value: s,
                color: n.validated && (n.error || n.childError) ? "error" : void 0
              }, {
                default: re(() => [
                  n.validated && (n.error || n.childError) ? (ie(), pe(H(Ae), {
                    key: 0,
                    color: "error",
                    icon: e.statefulLayout.options.icons.alert
                  }, null, 8, ["icon"])) : Te("", !0),
                  He(" " + Xe(n.layout.title ?? n.layout.label), 1)
                ]),
                _: 2
              }, 1032, ["value", "color"]))), 128))
            ]),
            _: 1
          }, 8, ["modelValue"]),
          w(H(Pr), {
            modelValue: a.value,
            "onUpdate:modelValue": i[1] || (i[1] = (n) => a.value = n)
          }, {
            default: re(() => [
              (ie(!0), Ne(ve, null, $t(e.modelValue.children, (n, s) => (ie(), pe(H(Cr), {
                key: n.key,
                value: s
              }, {
                default: re(() => [
                  w(H(_i), { fluid: "" }, {
                    default: re(() => {
                      var o, l;
                      return [
                        w(dl, { "model-value": n }, null, 8, ["model-value"]),
                        w(H(Va), {
                          dense: ((o = e.modelValue.options) == null ? void 0 : o.density) === "compact" || ((l = e.modelValue.options) == null ? void 0 : l.density) === "comfortable"
                        }, {
                          default: re(() => [
                            (ie(!0), Ne(ve, null, $t(H(Qa)(n) ? n.children : [n], (u) => (ie(), pe(Ia, {
                              key: u.fullKey,
                              "model-value": (
                                /** @type import('../../types.js').VjsfNode */
                                u
                              ),
                              "stateful-layout": e.statefulLayout
                            }, null, 8, ["model-value", "stateful-layout"]))), 128))
                          ]),
                          _: 2
                        }, 1032, ["dense"])
                      ];
                    }),
                    _: 2
                  }, 1024)
                ]),
                _: 2
              }, 1032, ["value"]))), 128))
            ]),
            _: 1
          }, 8, ["modelValue"])
        ]),
        _: 1
      }, 16)
    ], 64));
  }
}, tE = { class: "d-flex flex-row" }, aE = {
  __name: "vertical-tabs",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfVerticalTabsNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfVerticalTabs");
    const t = Jt("VjsfVerticalTabs-VSheet", { border: !0 }), a = ee(0);
    return (r, i) => (ie(), Ne(ve, null, [
      w(Nr, { node: e.modelValue }, null, 8, ["node"]),
      w(H(qa), en(tn(H(t))), {
        default: re(() => [
          T("div", tE, [
            w(H(Tc), {
              modelValue: a.value,
              "onUpdate:modelValue": i[0] || (i[0] = (n) => a.value = n),
              direction: "vertical"
            }, {
              default: re(() => [
                (ie(!0), Ne(ve, null, $t(e.modelValue.children, (n, s) => (ie(), pe(H(mi), {
                  key: n.key,
                  value: s,
                  color: n.validated && (n.error || n.childError) ? "error" : void 0
                }, {
                  default: re(() => [
                    n.validated && (n.error || n.childError) ? (ie(), pe(H(Ae), {
                      key: 0,
                      color: "error",
                      icon: e.statefulLayout.options.icons.alert
                    }, null, 8, ["icon"])) : Te("", !0),
                    He(" " + Xe(n.layout.title ?? n.layout.label), 1)
                  ]),
                  _: 2
                }, 1032, ["value", "color"]))), 128))
              ]),
              _: 1
            }, 8, ["modelValue"]),
            w(H(Pr), {
              modelValue: a.value,
              "onUpdate:modelValue": i[1] || (i[1] = (n) => a.value = n),
              class: "flex-fill"
            }, {
              default: re(() => [
                (ie(!0), Ne(ve, null, $t(e.modelValue.children, (n, s) => (ie(), pe(H(Cr), {
                  key: n.key,
                  value: s
                }, {
                  default: re(() => [
                    w(H(_i), { fluid: "" }, {
                      default: re(() => {
                        var o, l;
                        return [
                          w(dl, { "model-value": n }, null, 8, ["model-value"]),
                          w(H(Va), {
                            dense: ((o = e.modelValue.options) == null ? void 0 : o.density) === "compact" || ((l = e.modelValue.options) == null ? void 0 : l.density) === "comfortable"
                          }, {
                            default: re(() => [
                              (ie(!0), Ne(ve, null, $t(H(Qa)(n) ? n.children : [n], (u) => (ie(), pe(Ia, {
                                key: u.fullKey,
                                "model-value": (
                                  /** @type import('../../types.js').VjsfNode */
                                  u
                                ),
                                "stateful-layout": e.statefulLayout
                              }, null, 8, ["model-value", "stateful-layout"]))), 128))
                            ]),
                            _: 2
                          }, 1032, ["dense"])
                        ];
                      }),
                      _: 2
                    }, 1024)
                  ]),
                  _: 2
                }, 1032, ["value"]))), 128))
              ]),
              _: 1
            }, 8, ["modelValue"])
          ])
        ]),
        _: 1
      }, 16)
    ], 64));
  }
}, nE = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfComboboxNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfCombobox");
    const t = q(e, "modelValue"), a = Ti(t, e.statefulLayout), { inputProps: r, compSlots: i, localData: n, layout: s, options: o } = wt(t, e.statefulLayout), l = Zn(e.modelValue.fullKey), u = C(() => {
      const c = { ...r.value };
      return c.returnObject = !1, o.value.readOnly ? c.menuProps = { modelValue: !1 } : c.menuProps = { zIndex: l }, a.hasItems.value && (c.items = a.items.value, c.loading = a.loading.value), s.value.multiple && (c.multiple = !0, c.chips = !0, c.closableChips = !0), c;
    });
    return () => De(Bh, { ...u.value, modelValue: n.value }, i.value);
  }
}), rE = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfComboboxNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfCombobox");
    const t = q(e, "modelValue"), a = Ti(t, e.statefulLayout), { inputProps: r, compSlots: i, localData: n, layout: s, options: o } = wt(t, e.statefulLayout, { bindData: !1, layoutPropsMap: ["step", "min", "max"] }), l = Zn(e.modelValue.fullKey), u = C(() => {
      const c = { ...r.value };
      return c.type = "number", c.returnObject = !1, o.value.readOnly ? c.menuProps = { modelValue: !1 } : c.menuProps = { zIndex: l }, a.hasItems.value && (c.items = a.items.value, c.loading = a.loading.value), s.value.multiple && (c.multiple = !0, c.chips = !0, c.closableChips = !0), c["onUpdate:modelValue"] = (d) => e.statefulLayout.input(e.modelValue, d && (Array.isArray(d) ? d.map(Number) : Number(d))), c;
    });
    return () => De(Bh, { ...u.value, modelValue: n.value }, i.value);
  }
}), iE = {
  __name: "expansion-panels",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfExpansionPanelsNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfExpansionPanels");
    const t = e, { compProps: a } = wt(q(t, "modelValue"), t.statefulLayout);
    return (r, i) => (ie(), Ne(ve, null, [
      w(Nr, { node: e.modelValue }, null, 8, ["node"]),
      w(H(wO), en(tn(H(a))), {
        default: re(() => [
          (ie(!0), Ne(ve, null, $t(e.modelValue.children, (n, s) => (ie(), pe(H(gO), {
            key: n.key,
            value: s
          }, {
            default: re(() => [
              w(H(Do), null, {
                default: re(() => [
                  n.validated && (n.error || n.childError) ? (ie(), pe(H(Ae), {
                    key: 0,
                    color: "error",
                    class: "mr-2",
                    icon: e.statefulLayout.options.icons.alert
                  }, null, 8, ["icon"])) : Te("", !0),
                  He(" " + Xe(n.layout.title ?? n.layout.label), 1)
                ]),
                _: 2
              }, 1024),
              w(H(Mo), null, {
                default: re(() => [
                  w(H(_i), { fluid: "" }, {
                    default: re(() => {
                      var o, l;
                      return [
                        w(dl, { "model-value": n }, null, 8, ["model-value"]),
                        w(H(Va), {
                          dense: ((o = e.modelValue.options) == null ? void 0 : o.density) === "compact" || ((l = e.modelValue.options) == null ? void 0 : l.density) === "comfortable"
                        }, {
                          default: re(() => [
                            (ie(!0), Ne(ve, null, $t(H(Qa)(n) ? n.children : [n], (u) => (ie(), pe(Ia, {
                              key: u.fullKey,
                              "model-value": (
                                /** @type import('../../types.js').VjsfNode */
                                u
                              ),
                              "stateful-layout": e.statefulLayout
                            }, null, 8, ["model-value", "stateful-layout"]))), 128))
                          ]),
                          _: 2
                        }, 1032, ["dense"])
                      ];
                    }),
                    _: 2
                  }, 1024)
                ]),
                _: 2
              }, 1024)
            ]),
            _: 2
          }, 1032, ["value"]))), 128))
        ]),
        _: 1
      }, 16)
    ], 64));
  }
}, sE = {
  __name: "stepper",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStepperNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfStepper");
    const t = e, a = ee(0), r = C(() => {
      const n = t.modelValue.children.findIndex((s) => s.validated && !!(s.error || s.childError));
      return n === -1 ? t.modelValue.children.length : n;
    }), i = () => {
      const n = t.modelValue.children[a.value];
      t.statefulLayout.validateNodeRecurse(n), n.error || n.childError || a.value++;
    };
    return (n, s) => (ie(), Ne(ve, null, [
      w(Nr, { node: e.modelValue }, null, 8, ["node"]),
      w(H(qO), {
        modelValue: a.value,
        "onUpdate:modelValue": s[1] || (s[1] = (o) => a.value = o)
      }, {
        default: re(() => [
          w(H(Xh), null, {
            default: re(() => [
              (ie(!0), Ne(ve, null, $t(e.modelValue.children, (o, l) => (ie(), Ne(ve, {
                key: o.key
              }, [
                w(H(Zh), {
                  value: l,
                  title: (
                    /** @type {string | undefined} */
                    o.layout.title ?? o.layout.label
                  ),
                  error: o.validated && !!(o.error || o.childError),
                  complete: o.validated && !(o.error || o.childError),
                  editable: l <= r.value
                }, null, 8, ["value", "title", "error", "complete", "editable"]),
                w(H(xa))
              ], 64))), 128))
            ]),
            _: 1
          }),
          w(H(Jh), null, {
            default: re(() => [
              (ie(!0), Ne(ve, null, $t(e.modelValue.children, (o) => (ie(), pe(H(Qh), {
                key: o.key
              }, {
                default: re(() => [
                  w(H(_i), {
                    fluid: "",
                    class: "pa-0"
                  }, {
                    default: re(() => {
                      var l, u;
                      return [
                        w(dl, { "model-value": o }, null, 8, ["model-value"]),
                        w(H(Va), {
                          dense: ((l = e.modelValue.options) == null ? void 0 : l.density) === "compact" || ((u = e.modelValue.options) == null ? void 0 : u.density) === "comfortable"
                        }, {
                          default: re(() => [
                            (ie(!0), Ne(ve, null, $t(H(Qa)(o) ? o.children : [o], (c) => (ie(), pe(Ia, {
                              key: c.fullKey,
                              "model-value": (
                                /** @type import('../../types.js').VjsfNode */
                                c
                              ),
                              "stateful-layout": e.statefulLayout
                            }, null, 8, ["model-value", "stateful-layout"]))), 128))
                          ]),
                          _: 2
                        }, 1032, ["dense"])
                      ];
                    }),
                    _: 2
                  }, 1024)
                ]),
                _: 2
              }, 1024))), 128))
            ]),
            _: 1
          }),
          w(H(Yh), null, {
            prev: re(() => [
              a.value > 0 ? (ie(), pe(H(Be), {
                key: 0,
                variant: "text",
                onClick: s[0] || (s[0] = (o) => a.value--)
              }, {
                default: re(() => s[2] || (s[2] = [
                  He(" Back ")
                ])),
                _: 1
              })) : Te("", !0)
            ]),
            next: re(() => [
              w(H(_s)),
              a.value < e.modelValue.children.length - 1 ? (ie(), pe(H(Be), {
                key: 0,
                variant: "flat",
                color: "primary",
                onClick: i
              }, {
                default: re(() => s[3] || (s[3] = [
                  He(" Next ")
                ])),
                _: 1
              })) : Te("", !0)
            ]),
            _: 1
          })
        ]),
        _: 1
      }, 8, ["modelValue"])
    ], 64));
  }
}, lE = _t({
  props: {
    modelValue: {
      type: String,
      required: !0
    },
    listNode: {
      /** @type import('vue').PropType<import('../../types.js').VjsfListNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    },
    rules: {
      /** @type import('vue').PropType<((v: string) => boolean)[]> */
      type: Array,
      required: !0
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    Ye({}, "VjsfListSelectKey");
    const a = Jt("VjsfIndexedList-VSelect", { variant: "outlined", class: "mt-2" }), r = Jt("VjsfSelectItem-VAvatar", { rounded: !1, size: "small" }), { getItems: i, selectProps: n, selectSlots: s } = Kc(q(e, "listNode"), e.statefulLayout, r.value, "v-select"), o = C(() => {
      const c = { ...n.value };
      return delete c.hint, c.label = e.listNode.messages.addItem, c;
    }), l = C(() => {
      const c = xo([a.value, o.value]);
      return c.loading = i.loading.value, c.items = i.items.value, delete c.clearable, delete c.onBlur, c.rules = e.rules, c.active = !1, e.modelValue ? c.modelValue = e.modelValue : delete c.modelValue, c["onUpdate:modelValue"] = (d) => {
        d && t("update:modelValue", d);
      }, c;
    }), u = C(() => {
      const c = { ...s.value };
      return delete c.selection, c;
    });
    return () => De(i.items.value.length > 20 ? zh : Bc, l.value, u.value);
  }
});
function um(e, t, a) {
  return t === a || t === -1 || a === -1 ? e : !Array.isArray(e) && typeof e == "object" ? ty(e, t, a) : Hc(e, t, a);
}
function Hc(e, t, a) {
  if (t === a || t === -1 || a === -1) return e;
  if (!Array.isArray(e) && typeof e == "object") return ty(e, t, a);
  const r = [...e], i = r[t];
  return r.splice(t, 1), r.splice(a, 0, i), r;
}
function ty(e, t, a) {
  if (t === a || t === -1 || a === -1) return e;
  const r = (
    /** @type {string[] } */
    Hc(Object.keys(e), t, a)
  ), i = {};
  for (const n of r)
    i[n] = e[n];
  return i;
}
function oE(e, t) {
  const a = C(() => !(!("draggable" in document.createElement("div")) || window.matchMedia("(pointer: coarse)").matches)), r = me(e), i = ee(-1), n = ee(-1), s = ee(-1);
  return i.value = 1, {
    activeDnd: a,
    sortableArray: r,
    hovered: i,
    draggable: n,
    dragging: s,
    itemBind: (u) => ({
      // hover the item
      onMouseenter: () => {
        i.value = u;
      },
      onMouseleave: () => {
        i.value = -1;
      },
      // drag the item
      onDragstart: () => {
        s.value = u;
      },
      onDragover: () => {
        r.value = Hc(r.value, s.value, u), s.value = u;
      },
      onDragend: () => {
        i.value = u, s.value = -1, t();
      }
    }),
    handleBind: (u) => ({
      // hover the handle
      onMouseover() {
        n.value = u;
      },
      onMouseout() {
        n.value = -1;
      }
    })
  };
}
const uE = { class: "vjsf-list-item-actions-wrapper" }, cE = {
  __name: "list",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfListNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfList");
    const t = Jt("VjsfList-VCard", { border: !0, flat: !0, tile: !0 }), a = Jt("VjsfList-Edit-VDialog", { width: 500, persistent: !0 }), r = Jt("VjsfList-Edit-VDialog-VSheet", {}), i = Jt("VjsfList-Edit-VMenu", { width: 500 }), n = fc(), s = e, o = C(() => s.modelValue.options), l = C(() => s.modelValue.layout), u = C(() => s.modelValue.children), c = () => l.value.listEditMode === "dialog" || l.value.listEditMode === "menu" ? u.value.filter((k) => k.options.summary) : u.value, { activeDnd: d, sortableArray: m, draggable: v, hovered: p, dragging: h, itemBind: y, handleBind: f } = oE(c(), () => {
      const k = l.value.indexed ? m.value.reduce(
        (E, M) => (E[M.key] = M.data, E),
        /** @type {Record<string, any>} */
        {}
      ) : m.value.map((E) => E.data);
      s.statefulLayout.input(s.modelValue, k), g.value = -1;
    });
    fe(u, () => {
      m.value = c();
    });
    const g = ee(-1), P = (k) => {
      g.value = k, j.value = -1;
    }, S = Zn(s.modelValue.fullKey), _ = C(() => s.statefulLayout.activatedItems[s.modelValue.fullKey]), j = ee(-1), F = (k, E) => {
      j.value = E ? k : -1, L.value = !1;
    }, R = C(() => l.value.listActions.includes("edit") && l.value.listEditMode !== "inline" && _.value !== void 0 ? _.value : h.value !== -1 ? -1 : j.value !== -1 ? j.value : g.value !== -1 ? g.value : p.value), U = C(() => o.value.density === "default" ? "comfortable" : o.value.density), W = C(() => {
      const k = s.modelValue.layout.itemTitle;
      return k ? m.value.map((E) => s.statefulLayout.evalNodeExpression(s.modelValue, k, E.data)) : null;
    }), D = C(() => {
      const k = s.modelValue.layout.itemSubtitle;
      return k ? m.value.map((E) => s.statefulLayout.evalNodeExpression(s.modelValue, k, E.data)) : null;
    }), O = (k) => {
      l.value.listEditMode === "inline-single" || l.value.listEditMode === "dialog" ? s.statefulLayout.activateItem(s.modelValue, k) : s.statefulLayout.focusNode(s.modelValue.fullKey + "/" + k);
    }, B = () => {
      const k = (s.modelValue.data ?? []).concat([void 0]);
      s.statefulLayout.input(s.modelValue, k), O(k.length - 1);
    }, N = ee(""), z = ee(null), J = () => {
      var E;
      if (!N.value || !z.value || !z.value.isValid) return;
      const k = { ...s.modelValue.data ?? {}, [N.value]: void 0 };
      s.statefulLayout.input(s.modelValue, k), O(N.value), N.value = "", (E = z.value) == null || E.reset();
    }, ae = (k) => {
      o.value.confirmDeleteItem ? L.value = !0 : X(k);
    }, X = (k) => {
      if (l.value.indexed) {
        const E = (
          /** @type {Record<string, any>} */
          s.modelValue.data
        ), M = Object.keys(s.modelValue.data), K = {};
        for (let Y = 0; Y < M.length; Y++)
          Y !== k && (K[M[Y]] = E[M[Y]]);
        s.statefulLayout.input(s.modelValue, K);
      } else {
        const E = [...s.modelValue.data.slice(0, k), ...s.modelValue.data.slice(k + 1)];
        s.statefulLayout.input(s.modelValue, E);
      }
      j.value = -1;
    }, L = ee(!1), A = (k, E) => {
      const M = s.modelValue.layout.itemCopy ? s.statefulLayout.evalNodeExpression(s.modelValue, s.modelValue.layout.itemCopy, Sa(k.data)) : Sa(k.data), K = [...s.modelValue.data.slice(0, E + 1), M, ...s.modelValue.data.slice(E + 1)];
      s.statefulLayout.input(s.modelValue, K), O(E + 1), j.value = -1;
    }, x = lx(() => s.modelValue.layout.clipboardKey ?? s.modelValue.fullKey), V = (k) => {
      x.value = k.data, j.value = -1;
    }, $ = (k) => {
      const E = x.value;
      if (E === null) throw new Error("attempt to paste but clipboard is empty");
      const M = s.modelValue.layout.itemCopy ? s.statefulLayout.evalNodeExpression(s.modelValue, s.modelValue.layout.itemCopy, Sa(E)) : Sa(E), K = [...s.modelValue.data ?? [], M];
      s.statefulLayout.input(s.modelValue, K), O(K.length - 1);
    }, b = C(() => (k, E) => _.value === E ? n.current.value.colors.primary : k.validated && (k.error || k.childError) ? n.current.value.colors.error : o.value.readOnly ? "transparent" : R.value === E || g.value === E ? n.current.value.colors.primary : "transparent"), I = C(() => [(k) => !s.modelValue.children.some((E) => E.key === k), (k) => {
      var E;
      return !k || !!((E = s.modelValue.layout.indexed) != null && E.some((M) => k.match($c(M))));
    }]);
    return (k, E) => (ie(), pe(H(Lh), ne(H(t), {
      loading: e.modelValue.loading
    }), {
      default: re(() => [
        w(H(hi), { class: "py-0" }, {
          default: re(() => [
            e.modelValue.layout.title ? (ie(), pe(H(Lr), { key: 0 }, {
              default: re(() => [
                He(Xe(e.modelValue.layout.title), 1)
              ]),
              _: 1
            })) : Te("", !0),
            (ie(!0), Ne(ve, null, $t(H(m), (M, K) => (ie(), Ne(ve, {
              key: u.value.findIndex((Y) => Y === M)
            }, [
              w(H(vt), ne({ ref_for: !0 }, H(y)(K), {
                draggable: H(v) === K,
                variant: "flat",
                style: `border: 1px solid ${b.value(M, K)}`,
                class: "pa-1 vjsf-list-item"
              }), Bo({
                default: re(() => {
                  var Y, le;
                  return [
                    (Y = W.value) != null && Y[K] ? (ie(), pe(H(jo), {
                      key: 0,
                      class: "pl-4 pt-2"
                    }, {
                      default: re(() => {
                        var se;
                        return [
                          He(Xe((se = W.value) == null ? void 0 : se[K]), 1)
                        ];
                      }),
                      _: 2
                    }, 1024)) : e.modelValue.layout.indexed ? (ie(), pe(H(jo), {
                      key: 1,
                      class: "pl-4 pt-2"
                    }, {
                      default: re(() => [
                        He(Xe(M.key), 1)
                      ]),
                      _: 2
                    }, 1024)) : Te("", !0),
                    (le = D.value) != null && le[K] ? (ie(), pe(H(Eh), {
                      key: 2,
                      class: "pl-4 pt-2"
                    }, {
                      default: re(() => {
                        var se;
                        return [
                          He(Xe((se = D.value) == null ? void 0 : se[K]), 1)
                        ];
                      }),
                      _: 2
                    }, 1024)) : Te("", !0),
                    w(H(Va), { class: "ma-0" }, {
                      default: re(() => [
                        (ie(!0), Ne(ve, null, $t(H(Qa)(M) ? M.children : [M], (se) => (ie(), pe(Ia, {
                          key: se.fullKey,
                          "model-value": (
                            /** @type import('../../types.js').VjsfNode */
                            se
                          ),
                          "stateful-layout": e.statefulLayout
                        }, null, 8, ["model-value", "stateful-layout"]))), 128))
                      ]),
                      _: 2
                    }, 1024)
                  ];
                }),
                _: 2
              }, [
                !e.modelValue.options.readOnly && e.modelValue.layout.listActions.length ? {
                  name: "append",
                  fn: re(() => [
                    T("div", uE, [
                      R.value !== K ? (ie(), pe(H(Xi), { key: 0 }, {
                        default: re(() => [
                          w(H(Be), {
                            style: { visibility: "hidden" },
                            variant: "text",
                            density: U.value,
                            icon: o.value.icons.edit,
                            disabled: e.modelValue.loading
                          }, null, 8, ["density", "icon", "disabled"])
                        ]),
                        _: 1
                      })) : e.modelValue.layout.listActions.includes("edit") && e.modelValue.layout.listEditMode === "inline-single" && _.value === K ? (ie(), pe(H(Xi), { key: 1 }, {
                        default: re(() => [
                          w(H(Be), {
                            title: e.modelValue.messages.close,
                            icon: o.value.icons.edit,
                            variant: "flat",
                            color: "primary",
                            density: U.value,
                            disabled: e.modelValue.loading,
                            onClick: E[0] || (E[0] = (Y) => e.statefulLayout.deactivateItem(e.modelValue))
                          }, null, 8, ["title", "icon", "density", "disabled"])
                        ]),
                        _: 1
                      })) : g.value === K ? (ie(), pe(H(Xi), { key: 2 }, {
                        default: re(() => [
                          w(H(Be), ne({
                            title: e.modelValue.messages.sort,
                            icon: o.value.icons.sort,
                            variant: "flat",
                            color: "primary",
                            density: U.value,
                            disabled: e.modelValue.loading,
                            ref_for: !0
                          }, H(f)(K)), null, 16, ["title", "icon", "density", "disabled"])
                        ]),
                        _: 2
                      }, 1024)) : (_.value === void 0 || e.modelValue.layout.listEditMode === "menu") && e.modelValue.layout.listActions.length ? (ie(), pe(H(Xi), { key: 3 }, {
                        default: re(() => [
                          w(H(Fn), {
                            location: "bottom end",
                            "z-index": H(S),
                            density: e.modelValue.options.density,
                            "close-on-content-click": !1,
                            "model-value": j.value === K,
                            "onUpdate:modelValue": (Y) => F(K, Y)
                          }, {
                            activator: re(({ props: Y }) => [
                              w(H(Be), ne({ ref_for: !0 }, Y, {
                                icon: o.value.icons.menu,
                                variant: "plain",
                                slim: "",
                                disabled: e.modelValue.loading,
                                density: U.value
                              }), null, 16, ["icon", "disabled", "density"])
                            ]),
                            default: re(() => [
                              w(H(hi), {
                                density: e.modelValue.options.density
                              }, {
                                default: re(() => [
                                  e.modelValue.layout.listActions.includes("edit") && e.modelValue.layout.listEditMode !== "inline" ? (ie(), Ne(ve, { key: 0 }, [
                                    l.value.listEditMode === "menu" ? (ie(), pe(H(Fn), ne({
                                      key: 0,
                                      location: "start",
                                      "z-index": H(S),
                                      density: e.modelValue.options.density,
                                      "model-value": _.value !== void 0,
                                      "close-on-content-click": !1,
                                      ref_for: !0
                                    }, H(i), {
                                      "onUpdate:modelValue": E[1] || (E[1] = (Y) => Y || e.statefulLayout.deactivateItem(e.modelValue))
                                    }), {
                                      activator: re(({ props: Y }) => [
                                        w(H(vt), ne({
                                          density: e.modelValue.options.density,
                                          "base-color": "primary",
                                          ref_for: !0
                                        }, Y, {
                                          onClick: (le) => {
                                            e.statefulLayout.activateItem(e.modelValue, K);
                                          }
                                        }), {
                                          prepend: re(() => [
                                            w(H(Ae), {
                                              icon: o.value.icons.edit
                                            }, null, 8, ["icon"])
                                          ]),
                                          default: re(() => [
                                            He(" " + Xe(e.modelValue.messages.edit), 1)
                                          ]),
                                          _: 2
                                        }, 1040, ["density", "onClick"])
                                      ]),
                                      default: re(() => [
                                        w(H(qa), null, {
                                          default: re(() => [
                                            w(H(Va), { class: "ma-0" }, {
                                              default: re(() => [
                                                (ie(!0), Ne(ve, null, $t(H(Qa)(u.value[u.value.length - 1]) ? u.value[u.value.length - 1].children : [u.value[u.value.length - 1]], (Y) => (ie(), pe(Ia, {
                                                  key: Y.fullKey,
                                                  "model-value": (
                                                    /** @type import('../../types.js').VjsfNode */
                                                    Y
                                                  ),
                                                  "stateful-layout": e.statefulLayout
                                                }, null, 8, ["model-value", "stateful-layout"]))), 128))
                                              ]),
                                              _: 1
                                            })
                                          ]),
                                          _: 1
                                        })
                                      ]),
                                      _: 2
                                    }, 1040, ["z-index", "density", "model-value"])) : (ie(), pe(H(vt), {
                                      key: 1,
                                      density: e.modelValue.options.density,
                                      "base-color": "primary",
                                      onClick: (Y) => {
                                        e.statefulLayout.activateItem(e.modelValue, K), j.value = -1;
                                      }
                                    }, {
                                      prepend: re(() => [
                                        w(H(Ae), {
                                          icon: o.value.icons.edit
                                        }, null, 8, ["icon"])
                                      ]),
                                      default: re(() => [
                                        He(" " + Xe(e.modelValue.messages.edit), 1)
                                      ]),
                                      _: 2
                                    }, 1032, ["density", "onClick"]))
                                  ], 64)) : Te("", !0),
                                  e.modelValue.layout.listActions.includes("duplicate") ? (ie(), pe(H(vt), {
                                    key: 1,
                                    onClick: (Y) => A(M, K)
                                  }, {
                                    prepend: re(() => [
                                      w(H(Ae), {
                                        icon: o.value.icons.duplicate
                                      }, null, 8, ["icon"])
                                    ]),
                                    default: re(() => [
                                      He(" " + Xe(e.modelValue.messages.duplicate), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["onClick"])) : Te("", !0),
                                  e.modelValue.layout.listActions.includes("copy") ? (ie(), pe(H(vt), {
                                    key: 2,
                                    onClick: (Y) => V(M)
                                  }, {
                                    prepend: re(() => [
                                      w(H(Ae), {
                                        icon: o.value.icons.copy
                                      }, null, 8, ["icon"])
                                    ]),
                                    default: re(() => [
                                      He(" " + Xe(e.modelValue.messages.copy), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["onClick"])) : Te("", !0),
                                  e.modelValue.layout.listActions.includes("sort") && H(d) ? (ie(), pe(H(vt), {
                                    key: 3,
                                    disabled: e.modelValue.data.length === 1,
                                    onClick: (Y) => P(K)
                                  }, {
                                    prepend: re(() => [
                                      w(H(Ae), {
                                        icon: o.value.icons.sort
                                      }, null, 8, ["icon"])
                                    ]),
                                    default: re(() => [
                                      He(" " + Xe(e.modelValue.messages.sort), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["disabled", "onClick"])) : Te("", !0),
                                  e.modelValue.layout.listActions.includes("sort") ? (ie(), pe(H(vt), {
                                    key: 4,
                                    disabled: K === 0,
                                    onClick: (Y) => {
                                      e.statefulLayout.input(e.modelValue, H(um)(e.modelValue.data, K, K - 1)), j.value = -1;
                                    }
                                  }, {
                                    prepend: re(() => [
                                      w(H(Ae), {
                                        icon: o.value.icons.sortUp
                                      }, null, 8, ["icon"])
                                    ]),
                                    default: re(() => [
                                      He(" " + Xe(e.modelValue.messages.up), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["disabled", "onClick"])) : Te("", !0),
                                  e.modelValue.layout.listActions.includes("sort") ? (ie(), pe(H(vt), {
                                    key: 5,
                                    disabled: K === e.modelValue.data.length - 1,
                                    onClick: (Y) => {
                                      e.statefulLayout.input(e.modelValue, H(um)(e.modelValue.data, K, K + 1)), j.value = -1;
                                    }
                                  }, {
                                    prepend: re(() => [
                                      w(H(Ae), {
                                        icon: o.value.icons.sortDown
                                      }, null, 8, ["icon"])
                                    ]),
                                    default: re(() => [
                                      He(" " + Xe(e.modelValue.messages.down), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["disabled", "onClick"])) : Te("", !0),
                                  e.modelValue.layout.listActions.includes("delete") ? (ie(), pe(H(vt), {
                                    key: 6,
                                    "base-color": "warning",
                                    onClick: (Y) => ae(K)
                                  }, {
                                    prepend: re(() => [
                                      w(H(Ae), {
                                        icon: o.value.icons.delete
                                      }, null, 8, ["icon"])
                                    ]),
                                    default: re(() => [
                                      He(" " + Xe(e.modelValue.messages.delete), 1)
                                    ]),
                                    _: 2
                                  }, 1032, ["onClick"])) : Te("", !0),
                                  L.value ? (ie(), pe(H(vt), { key: 7 }, {
                                    default: re(() => [
                                      w(H(_s)),
                                      w(H(Be), {
                                        color: "warning",
                                        class: "float-right ma-1",
                                        onClick: (Y) => X(K)
                                      }, {
                                        default: re(() => [
                                          He(Xe(e.modelValue.messages.confirm), 1)
                                        ]),
                                        _: 2
                                      }, 1032, ["onClick"])
                                    ]),
                                    _: 2
                                  }, 1024)) : Te("", !0)
                                ]),
                                _: 2
                              }, 1032, ["density"])
                            ]),
                            _: 2
                          }, 1032, ["z-index", "density", "model-value", "onUpdate:modelValue"])
                        ]),
                        _: 2
                      }, 1024)) : Te("", !0)
                    ])
                  ]),
                  key: "0"
                } : void 0
              ]), 1040, ["draggable", "style"]),
              K < e.modelValue.children.length - 1 ? (ie(), pe(H(xa), { key: 0 })) : Te("", !0)
            ], 64))), 128)),
            !e.modelValue.options.readOnly && (e.modelValue.layout.listActions.includes("add") || e.modelValue.layout.listActions.includes("paste")) ? (ie(), pe(H(vt), {
              key: 1,
              class: "py-2"
            }, {
              default: re(() => [
                e.modelValue.layout.indexed ? (ie(), Ne(ve, { key: 0 }, [
                  e.modelValue.layout.listActions.includes("add") ? (ie(), pe(H(IO), {
                    key: 0,
                    ref_key: "newKeyForm",
                    ref: z,
                    style: { "max-width": "250px" },
                    onSubmit: E[4] || (E[4] = yy(() => {
                    }, ["prevent"]))
                  }, {
                    default: re(() => [
                      e.modelValue.layout.getItems ?? e.modelValue.layout.items ? (ie(), pe(lE, {
                        key: 0,
                        modelValue: N.value,
                        "onUpdate:modelValue": [
                          E[2] || (E[2] = (M) => N.value = M),
                          J
                        ],
                        "list-node": e.modelValue,
                        "stateful-layout": e.statefulLayout,
                        rules: I.value
                      }, null, 8, ["modelValue", "list-node", "stateful-layout", "rules"])) : (ie(), pe(H(Oa), {
                        key: 1,
                        modelValue: N.value,
                        "onUpdate:modelValue": E[3] || (E[3] = (M) => N.value = M),
                        variant: "outlined",
                        placeholder: e.modelValue.messages.addItem,
                        "hide-details": "",
                        rules: I.value,
                        onKeypress: gy(J, ["enter"])
                      }, {
                        append: re(() => [
                          w(H(Ae), {
                            color: "primary",
                            size: "large",
                            icon: o.value.icons.add,
                            onClick: J
                          }, null, 8, ["icon"])
                        ]),
                        _: 1
                      }, 8, ["modelValue", "placeholder", "rules"]))
                    ]),
                    _: 1
                  }, 512)) : Te("", !0)
                ], 64)) : (ie(), Ne(ve, { key: 1 }, [
                  e.modelValue.layout.listActions.includes("add") ? (ie(), pe(H(Be), {
                    key: 0,
                    color: "primary",
                    "prepend-icon": o.value.icons.add,
                    class: "mr-2",
                    onClick: B
                  }, {
                    default: re(() => [
                      He(Xe(e.modelValue.messages.addItem), 1)
                    ]),
                    _: 1
                  }, 8, ["prepend-icon"])) : Te("", !0),
                  e.modelValue.layout.listActions.includes("paste") && H(x) !== null ? (ie(), pe(H(Be), {
                    key: 1,
                    color: "primary",
                    "prepend-icon": o.value.icons.paste,
                    onClick: $
                  }, {
                    default: re(() => [
                      He(Xe(e.modelValue.messages.paste), 1)
                    ]),
                    _: 1
                  }, 8, ["prepend-icon"])) : Te("", !0)
                ], 64))
              ]),
              _: 1
            })) : Te("", !0),
            l.value.listEditMode === "dialog" ? (ie(), pe(H(sO), ne({
              key: 2,
              "model-value": _.value !== void 0
            }, H(a), { "z-index": H(S) }), {
              default: re(() => [
                w(H(qa), en(tn(H(r))), {
                  default: re(() => [
                    w(H(tO), {
                      density: "compact",
                      color: "surface"
                    }, {
                      default: re(() => [
                        w(H(_s)),
                        w(H(Be), {
                          title: e.modelValue.messages.close,
                          icon: o.value.icons.close,
                          variant: "flat",
                          density: "comfortable",
                          disabled: e.modelValue.loading,
                          onClick: E[5] || (E[5] = (M) => e.statefulLayout.deactivateItem(e.modelValue))
                        }, null, 8, ["title", "icon", "disabled"])
                      ]),
                      _: 1
                    }),
                    w(H(Va), { class: "ma-0" }, {
                      default: re(() => [
                        (ie(!0), Ne(ve, null, $t(H(Qa)(u.value[u.value.length - 1]) ? u.value[u.value.length - 1].children : [u.value[u.value.length - 1]], (M) => (ie(), pe(Ia, {
                          key: M.fullKey,
                          "model-value": (
                            /** @type import('../../types.js').VjsfNode */
                            M
                          ),
                          "stateful-layout": e.statefulLayout
                        }, null, 8, ["model-value", "stateful-layout"]))), 128))
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }, 16)
              ]),
              _: 1
            }, 16, ["model-value", "z-index"])) : Te("", !0)
          ]),
          _: 1
        })
      ]),
      _: 1
    }, 16, ["loading"]));
  }
}, dE = _t({
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfFileInputNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    Ye({}, "VjsfFileInput");
    const { inputProps: t, localData: a, compSlots: r } = wt(
      q(e, "modelValue"),
      e.statefulLayout,
      { layoutPropsMap: ["placeholder", "accept", "multiple"] }
    ), i = C(() => {
      const n = { ...t.value };
      return n.multiple && console.error("File input doesn't support multiple inputs yet"), n["onUpdate:modelValue"] = (s) => {
        e.statefulLayout.input(e.modelValue, s);
      }, n;
    });
    return () => De(xO, { ...i.value, modelValue: a.value }, r.value);
  }
}), fE = {
  __name: "card",
  props: {
    modelValue: {
      /** @type import('vue').PropType<import('../../types.js').VjsfCardNode> */
      type: Object,
      required: !0
    },
    statefulLayout: {
      /** @type import('vue').PropType<import('../../types.js').VjsfStatefulLayout> */
      type: Object,
      required: !0
    }
  },
  setup(e) {
    return Ye({}, "VjsfCard"), (t, a) => (ie(), pe(H(Lh), {
      title: e.modelValue.layout.title || void 0
    }, {
      default: re(() => [
        w(H(_i), { fluid: "" }, {
          default: re(() => {
            var r, i;
            return [
              w(Nr, {
                node: e.modelValue,
                "hide-title": ""
              }, null, 8, ["node"]),
              w(H(Va), {
                dense: ((r = e.modelValue.options) == null ? void 0 : r.density) === "compact" || ((i = e.modelValue.options) == null ? void 0 : i.density) === "comfortable"
              }, {
                default: re(() => [
                  (ie(!0), Ne(ve, null, $t(e.modelValue.children, (n) => (ie(), pe(Ia, {
                    key: n.fullKey,
                    "model-value": (
                      /** @type import('../../types.js').VjsfNode */
                      n
                    ),
                    "stateful-layout": e.statefulLayout
                  }, null, 8, ["model-value", "stateful-layout"]))), 128))
                ]),
                _: 1
              }, 8, ["dense"])
            ];
          }),
          _: 1
        })
      ]),
      _: 1
    }, 8, ["title"]));
  }
}, pE = {
  __name: "vjsf",
  props: {
    schema: {
      type: Object,
      required: !0
    },
    precompiledLayout: {
      /** @type import('vue').PropType<import('@json-layout/core').CompiledLayout> */
      type: Object,
      default: null
    },
    modelValue: {
      type: null,
      default: null
    },
    options: {
      /** @type import('vue').PropType<import('../types.js').PartialVjsfOptions | null> */
      type: Object,
      default: null
    }
  },
  emits: ox,
  setup(e, { emit: t }) {
    const a = {
      section: dx,
      "text-field": Cx,
      textarea: Ix,
      checkbox: jx,
      switch: Dx,
      "number-field": qx,
      slider: eV,
      "date-picker": oV,
      "time-picker": vV,
      "date-time-picker": IV,
      "color-picker": mI,
      select: WO,
      autocomplete: GO,
      "radio-group": YO,
      "checkbox-group": XO,
      "switch-group": ZO,
      "one-of-select": JO,
      tabs: eE,
      "vertical-tabs": aE,
      "expansion-panels": iE,
      stepper: sE,
      list: cE,
      combobox: nE,
      "number-combobox": rE,
      "file-input": dE,
      card: fE
    }, r = e, i = t, { el: n, statefulLayout: s, stateTree: o } = ux(
      C(() => r.schema),
      C(() => r.modelValue),
      C(() => r.options),
      a,
      i,
      l_,
      s_,
      C(() => r.precompiledLayout)
    );
    return (l, u) => (ie(), Ne("div", {
      ref_key: "el",
      ref: n,
      class: "vjsf"
    }, [
      H(s) && H(o) ? (ie(), pe(xC, {
        key: 0,
        "model-value": H(o),
        "stateful-layout": H(s)
      }, null, 8, ["model-value", "stateful-layout"])) : Te("", !0)
    ], 512));
  }
};
export {
  pE as Vjsf,
  pE as default,
  nx as defaultIcons,
  rx as defaultOptions
};
